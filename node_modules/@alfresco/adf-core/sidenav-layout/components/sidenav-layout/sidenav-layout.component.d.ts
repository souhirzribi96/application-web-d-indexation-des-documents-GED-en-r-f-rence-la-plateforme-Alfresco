/*!
 * @license
 * Copyright 2016 Alfresco Software, Ltd.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
import { OnInit, AfterViewInit, OnDestroy, TemplateRef } from '@angular/core';
import { MediaMatcher } from '@angular/cdk/layout';
import { SidenavLayoutContentDirective } from '../../directives/sidenav-layout-content.directive';
import { SidenavLayoutHeaderDirective } from '../../directives/sidenav-layout-header.directive';
import { SidenavLayoutNavigationDirective } from '../../directives/sidenav-layout-navigation.directive';
export declare class SidenavLayoutComponent implements OnInit, AfterViewInit, OnDestroy {
    private mediaMatcher;
    static STEP_OVER: number;
    sidenavMin: number;
    sidenavMax: number;
    stepOver: number;
    hideSidenav: boolean;
    expandedSidenav: boolean;
    headerDirective: SidenavLayoutHeaderDirective;
    navigationDirective: SidenavLayoutNavigationDirective;
    contentDirective: SidenavLayoutContentDirective;
    container: any;
    emptyTemplate: any;
    mediaQueryList: MediaQueryList;
    isMenuMinimized: any;
    templateContext: {
        toggleMenu: () => void;
        isMenuMinimized: () => any;
    };
    constructor(mediaMatcher: MediaMatcher);
    ngOnInit(): void;
    ngAfterViewInit(): void;
    ngOnDestroy(): void;
    toggleMenu(): void;
    readonly isHeaderInside: boolean;
    readonly headerTemplate: TemplateRef<any>;
    readonly navigationTemplate: TemplateRef<any>;
    readonly contentTemplate: TemplateRef<any>;
    onMediaQueryChange(): void;
}
