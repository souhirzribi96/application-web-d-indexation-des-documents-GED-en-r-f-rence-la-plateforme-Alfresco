/*!
 * @license
 * Copyright 2016 Alfresco Software, Ltd.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
import { RenditionEntry, RenditionPaging } from 'alfresco-js-api';
import { Observable } from 'rxjs/Observable';
import { AlfrescoApiService } from './alfresco-api.service';
import 'rxjs/add/observable/fromPromise';
import 'rxjs/add/operator/concatMap';
import 'rxjs/add/operator/combineAll';
import 'rxjs/add/observable/interval';
import 'rxjs/add/operator/takeWhile';
/**
 * @deprecated
 * RenditionsService
 * (this service is deprecated in 2.2.0 and will be removed in future revisions)
 */
export declare class RenditionsService {
    private apiService;
    constructor(apiService: AlfrescoApiService);
    /** @deprecated */
    isRenditionAvailable(nodeId: string, encoding: string): Observable<boolean>;
    /** @deprecated */
    isConversionPossible(nodeId: string, encoding: string): Observable<boolean>;
    /** @deprecated */
    getRenditionUrl(nodeId: string, encoding: string): string;
    /** @deprecated */
    getRendition(nodeId: string, encoding: string): Observable<RenditionEntry>;
    /** @deprecated */
    getRenditionsListByNodeId(nodeId: string): Observable<RenditionPaging>;
    /** @deprecated */
    createRendition(nodeId: string, encoding: string): Observable<{}>;
    /** @deprecated */
    convert(nodeId: string, encoding: string, pollingInterval?: number, retries?: number): Observable<RenditionEntry>;
    /** @deprecated */
    private pollRendition(nodeId, encoding, interval?, retries?);
}
