/*!
 * @license
 * Copyright 2016 Alfresco Software, Ltd.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
import { Observable } from 'rxjs/Observable';
import { CommentModel } from '../models/comment.model';
import { AlfrescoApiService } from './alfresco-api.service';
import { LogService } from './log.service';
import 'rxjs/add/observable/fromPromise';
import 'rxjs/add/operator/catch';
import 'rxjs/add/observable/throw';
export declare class CommentProcessService {
    private apiService;
    private logService;
    constructor(apiService: AlfrescoApiService, logService: LogService);
    /**
     * Adds a comment to a task.
     * @param taskId ID of the target task
     * @param message Text for the comment
     * @returns Details about the comment
     */
    addTaskComment(taskId: string, message: string): Observable<CommentModel>;
    /**
     * Gets all comments that have been added to a task.
     * @param taskId ID of the target task
     * @returns Details for each comment
     */
    getTaskComments(taskId: string): Observable<CommentModel[]>;
    /**
     * Gets all comments that have been added to a process instance.
     * @param processInstanceId ID of the target process instance
     * @returns Details for each comment
     */
    getProcessInstanceComments(processInstanceId: string): Observable<CommentModel[]>;
    /**
     * Adds a comment to a process instance.
     * @param processInstanceId ID of the target process instance
     * @param message Text for the comment
     * @returns Details of the comment added
     */
    addProcessInstanceComment(processInstanceId: string, message: string): Observable<CommentModel>;
    private handleError(error);
}
