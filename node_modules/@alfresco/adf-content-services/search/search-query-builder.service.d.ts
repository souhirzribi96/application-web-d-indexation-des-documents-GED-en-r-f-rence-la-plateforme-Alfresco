/*!
 * @license
 * Copyright 2016 Alfresco Software, Ltd.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
import { Subject } from 'rxjs/Subject';
import { AlfrescoApiService, AppConfigService } from '@alfresco/adf-core';
import { QueryBody } from 'alfresco-js-api';
import { SearchCategory } from './search-category.interface';
import { FilterQuery } from './filter-query.interface';
import { SearchRange } from './search-range.interface';
import { SearchConfiguration } from './search-configuration.interface';
import { FacetQuery } from './facet-query.interface';
export declare class SearchQueryBuilderService {
    private api;
    updated: Subject<QueryBody>;
    executed: Subject<any>;
    categories: Array<SearchCategory>;
    queryFragments: {
        [id: string]: string;
    };
    fields: {
        [id: string]: string[];
    };
    scope: {
        locations?: string;
    };
    filterQueries: FilterQuery[];
    ranges: {
        [id: string]: SearchRange;
    };
    paging: {
        maxItems?: number;
        skipCount?: number;
    };
    config: SearchConfiguration;
    constructor(appConfig: AppConfigService, api: AlfrescoApiService);
    addFilterQuery(query: string): void;
    removeFilterQuery(query: string): void;
    getFacetQuery(label: string): FacetQuery;
    update(): void;
    execute(): Promise<void>;
    buildQuery(): QueryBody;
}
