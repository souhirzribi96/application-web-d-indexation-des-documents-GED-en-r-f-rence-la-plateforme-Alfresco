{
  "version": 3,
  "file": "adf-content-services.js",
  "sources": [
    "ng://@alfresco/adf-content-services/out/content.module.ts",
    "ng://@alfresco/adf-content-services/out/permission-manager/permission-manager.module.ts",
    "ng://@alfresco/adf-content-services/out/permission-manager/components/inherited-button.directive.ts",
    "ng://@alfresco/adf-content-services/out/permission-manager/components/permission-list/permission-list.component.ts",
    "ng://@alfresco/adf-content-services/out/permission-manager/services/node-permission.service.ts",
    "ng://@alfresco/adf-content-services/out/permission-manager/models/permission.model.ts",
    "ng://@alfresco/adf-content-services/out/content-metadata/content-metadata.module.ts",
    "ng://@alfresco/adf-content-services/out/content-metadata/components/content-metadata/content-metadata.component.ts",
    "ng://@alfresco/adf-content-services/out/content-metadata/services/content-metadata.service.ts",
    "ng://@alfresco/adf-content-services/out/content-metadata/services/property-descriptors.service.ts",
    "ng://@alfresco/adf-content-services/out/content-metadata/services/config/content-metadata-config.factory.ts",
    "ng://@alfresco/adf-content-services/out/content-metadata/services/config/layout-oriented-config.service.ts",
    "ng://@alfresco/adf-content-services/out/content-metadata/services/config/indifferent-config.service.ts",
    "ng://@alfresco/adf-content-services/out/content-metadata/services/config/aspect-oriented-config.service.ts",
    "ng://@alfresco/adf-content-services/out/content-metadata/services/config/property-group-reader.ts",
    "ng://@alfresco/adf-content-services/out/content-metadata/services/property-groups-translator.service.ts",
    "ng://@alfresco/adf-content-services/out/content-metadata/services/basic-properties.service.ts",
    "ng://@alfresco/adf-content-services/out/content-metadata/components/content-metadata-card/content-metadata-card.component.ts",
    "ng://@alfresco/adf-content-services/out/folder-directive/folder-directive.module.ts",
    "ng://@alfresco/adf-content-services/out/folder-directive/folder-edit.directive.ts",
    "ng://@alfresco/adf-content-services/out/folder-directive/folder-create.directive.ts",
    "ng://@alfresco/adf-content-services/out/dialogs/dialog.module.ts",
    "ng://@alfresco/adf-content-services/out/dialogs/folder.dialog.ts",
    "ng://@alfresco/adf-content-services/out/dialogs/folder-name.validators.ts",
    "ng://@alfresco/adf-content-services/out/content-node-selector/content-node-selector.module.ts",
    "ng://@alfresco/adf-content-services/out/content-node-selector/content-node-selector-panel.component.ts",
    "ng://@alfresco/adf-content-services/out/content-node-selector/content-node-selector.service.ts",
    "ng://@alfresco/adf-content-services/out/content-node-selector/name-location-cell/name-location-cell.component.ts",
    "ng://@alfresco/adf-content-services/out/version-manager/version-manager.module.ts",
    "ng://@alfresco/adf-content-services/out/version-manager/version-upload.component.ts",
    "ng://@alfresco/adf-content-services/out/version-manager/version-manager.component.ts",
    "ng://@alfresco/adf-content-services/out/version-manager/version-list.component.ts",
    "ng://@alfresco/adf-content-services/out/dialogs/confirm.dialog.ts",
    "ng://@alfresco/adf-content-services/out/breadcrumb/breadcrumb.module.ts",
    "ng://@alfresco/adf-content-services/out/breadcrumb/dropdown-breadcrumb.component.ts",
    "ng://@alfresco/adf-content-services/out/breadcrumb/breadcrumb.component.ts",
    "ng://@alfresco/adf-content-services/out/site-dropdown/sites-dropdown.module.ts",
    "ng://@alfresco/adf-content-services/out/site-dropdown/sites-dropdown.component.ts",
    "ng://@alfresco/adf-content-services/out/search/search.module.ts",
    "ng://@alfresco/adf-content-services/out/search/components/search-widget-container/search-widget-container.component.ts",
    "ng://@alfresco/adf-content-services/out/search/components/search-widget-container/search-widgets.module.ts",
    "ng://@alfresco/adf-content-services/out/search/components/search-scope-locations/search-scope-locations.component.ts",
    "ng://@alfresco/adf-content-services/out/search/components/search-fields/search-fields.component.ts",
    "ng://@alfresco/adf-content-services/out/search/components/search-radio/search-radio.component.ts",
    "ng://@alfresco/adf-content-services/out/search/components/search-text/search-text.component.ts",
    "ng://@alfresco/adf-content-services/out/search/components/search-chip-list/search-chip-list.component.ts",
    "ng://@alfresco/adf-content-services/out/search/components/search-filter/search-filter.component.ts",
    "ng://@alfresco/adf-content-services/out/search/components/search-trigger.directive.ts",
    "ng://@alfresco/adf-content-services/out/search/components/search-control.component.ts",
    "ng://@alfresco/adf-content-services/out/search/components/empty-search-result.component.ts",
    "ng://@alfresco/adf-content-services/out/search/components/search.component.ts",
    "ng://@alfresco/adf-content-services/out/search/search-query-builder.service.ts",
    "ng://@alfresco/adf-content-services/out/document-list/document-list.module.ts",
    "ng://@alfresco/adf-content-services/out/upload/upload.module.ts",
    "ng://@alfresco/adf-content-services/out/upload/directives/file-draggable.directive.ts",
    "ng://@alfresco/adf-content-services/out/upload/components/upload-drag-area.component.ts",
    "ng://@alfresco/adf-content-services/out/upload/components/upload-version-button.component.ts",
    "ng://@alfresco/adf-content-services/out/upload/components/upload-button.component.ts",
    "ng://@alfresco/adf-content-services/out/upload/components/base-upload/upload-base.ts",
    "ng://@alfresco/adf-content-services/out/upload/components/file-uploading-list-row.component.ts",
    "ng://@alfresco/adf-content-services/out/upload/components/file-uploading-dialog.component.ts",
    "ng://@alfresco/adf-content-services/out/upload/components/file-uploading-list.component.ts",
    "ng://@alfresco/adf-content-services/out/document-list/models/permissions-style.model.ts",
    "ng://@alfresco/adf-content-services/out/document-list/models/document-library.model.ts",
    "ng://@alfresco/adf-content-services/out/document-list/components/no-permission/no-permission-content.directive.ts",
    "ng://@alfresco/adf-content-services/out/document-list/components/empty-folder/empty-folder-content.directive.ts",
    "ng://@alfresco/adf-content-services/out/document-list/components/content-action/content-action.component.ts",
    "ng://@alfresco/adf-content-services/out/document-list/components/content-action/content-action-list.component.ts",
    "ng://@alfresco/adf-content-services/out/document-list/services/folder-actions.service.ts",
    "ng://@alfresco/adf-content-services/out/document-list/services/document-actions.service.ts",
    "ng://@alfresco/adf-content-services/out/document-list/services/node-actions.service.ts",
    "ng://@alfresco/adf-content-services/out/document-list/models/permissions.model.ts",
    "ng://@alfresco/adf-content-services/out/document-list/components/content-column/content-column.component.ts",
    "ng://@alfresco/adf-content-services/out/document-list/components/content-column/content-column-list.component.ts",
    "ng://@alfresco/adf-content-services/out/document-list/components/document-list.component.ts",
    "ng://@alfresco/adf-content-services/out/document-list/services/custom-resources.service.ts",
    "ng://@alfresco/adf-content-services/out/document-list/components/node.event.ts",
    "ng://@alfresco/adf-content-services/out/document-list/models/content-action.model.ts",
    "ng://@alfresco/adf-content-services/out/document-list/models/preset.model.ts",
    "ng://@alfresco/adf-content-services/out/document-list/data/share-datatable-adapter.ts",
    "ng://@alfresco/adf-content-services/out/document-list/data/share-data-row.model.ts",
    "ng://@alfresco/adf-content-services/out/webscript/webscript.module.ts",
    "ng://@alfresco/adf-content-services/out/webscript/webscript.component.ts",
    "ng://@alfresco/adf-content-services/out/tag/tag.module.ts",
    "ng://@alfresco/adf-content-services/out/tag/tag-node-list.component.ts",
    "ng://@alfresco/adf-content-services/out/tag/tag-list.component.ts",
    "ng://@alfresco/adf-content-services/out/tag/tag-actions.component.ts",
    "ng://@alfresco/adf-content-services/out/tag/services/tag.service.ts",
    "ng://@alfresco/adf-content-services/out/social/social.module.ts",
    "ng://@alfresco/adf-content-services/out/social/like.component.ts",
    "ng://@alfresco/adf-content-services/out/social/rating.component.ts",
    "ng://@alfresco/adf-content-services/out/social/services/rating.service.ts",
    "ng://@alfresco/adf-content-services/out/directives/content-directive.module.ts",
    "ng://@alfresco/adf-content-services/out/directives/node-lock.directive.ts",
    "ng://@alfresco/adf-content-services/out/content-node-selector/content-node-dialog.service.ts",
    "ng://@alfresco/adf-content-services/out/dialogs/node-lock.dialog.ts",
    "ng://@alfresco/adf-content-services/out/content-node-selector/content-node-selector.component.ts",
    "ng://@alfresco/adf-content-services/out/document-list/services/document-list.service.ts",
    "ng://@alfresco/adf-content-services/out/material.module.ts",
    "ng://@alfresco/adf-content-services/out/directives/node-share.directive.ts",
    "ng://@alfresco/adf-content-services/out/dialogs/share.dialog.ts",
    "ng://@alfresco/adf-content-services/out/directives/node-download.directive.ts",
    "ng://@alfresco/adf-content-services/out/dialogs/download-zip.dialog.ts"
  ],
  "sourcesContent": [
    "/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { CoreModule, TRANSLATION_PROVIDER } from '@alfresco/adf-core';\n\nimport { MaterialModule } from './material.module';\n\nimport { SocialModule } from './social/social.module';\nimport { TagModule } from './tag/tag.module';\nimport { WebScriptModule } from './webscript/webscript.module';\nimport { DocumentListModule } from './document-list/document-list.module';\nimport { UploadModule } from './upload/upload.module';\nimport { SearchModule } from './search/search.module';\nimport { SitesDropdownModule } from './site-dropdown/sites-dropdown.module';\nimport { BreadcrumbModule } from './breadcrumb/breadcrumb.module';\nimport { VersionManagerModule } from './version-manager/version-manager.module';\nimport { ContentNodeSelectorModule } from './content-node-selector/content-node-selector.module';\nimport { ContentDirectiveModule } from './directives/content-directive.module';\nimport { DialogModule } from './dialogs/dialog.module';\nimport { FolderDirectiveModule } from './folder-directive/folder-directive.module';\nimport { ContentMetadataModule } from './content-metadata/content-metadata.module';\nimport { PermissionManagerModule } from './permission-manager/permission-manager.module';\nimport { RatingService } from './social/services/rating.service';\nimport { ContentMetadataService } from './content-metadata/services/content-metadata.service';\nimport { PropertyDescriptorsService } from './content-metadata/services/property-descriptors.service';\nimport { ContentMetadataConfigFactory } from './content-metadata/services/config/content-metadata-config.factory';\nimport { BasicPropertiesService } from './content-metadata/services/basic-properties.service';\nimport { PropertyGroupTranslatorService } from './content-metadata/services/property-groups-translator.service';\nimport { SearchQueryBuilderService } from './search/search-query-builder.service';\n\n@NgModule({\n    imports: [\n        CoreModule,\n        SocialModule,\n        TagModule,\n        CommonModule,\n        WebScriptModule,\n        FormsModule,\n        ReactiveFormsModule,\n        DialogModule,\n        SearchModule,\n        DocumentListModule,\n        UploadModule,\n        MaterialModule,\n        SitesDropdownModule,\n        BreadcrumbModule,\n        ContentNodeSelectorModule,\n        ContentMetadataModule,\n        FolderDirectiveModule,\n        ContentDirectiveModule,\n        PermissionManagerModule,\n        VersionManagerModule\n    ],\n    providers: [\n        {\n            provide: TRANSLATION_PROVIDER,\n            multi: true,\n            useValue: {\n                name: 'adf-content-services',\n                source: 'assets/adf-content-services'\n            }\n        },\n        RatingService,\n        ContentMetadataService,\n        PropertyDescriptorsService,\n        ContentMetadataConfigFactory,\n        BasicPropertiesService,\n        PropertyGroupTranslatorService,\n        SearchQueryBuilderService\n    ],\n    exports: [\n        CoreModule,\n        SocialModule,\n        TagModule,\n        WebScriptModule,\n        DocumentListModule,\n        UploadModule,\n        SearchModule,\n        SitesDropdownModule,\n        BreadcrumbModule,\n        ContentNodeSelectorModule,\n        ContentMetadataModule,\n        DialogModule,\n        FolderDirectiveModule,\n        ContentDirectiveModule,\n        PermissionManagerModule,\n        VersionManagerModule\n    ]\n})\nexport class ContentModule {\n}\n",
    "/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { MaterialModule } from '../material.module';\nimport { PermissionListComponent } from './components/permission-list/permission-list.component';\nimport { DataTableModule, DataColumnModule } from '@alfresco/adf-core';\nimport { InheritPermissionDirective } from './components/inherited-button.directive';\nimport { NodePermissionService } from './services/node-permission.service';\n\n@NgModule({\n    imports: [\n        CommonModule,\n        FormsModule,\n        ReactiveFormsModule,\n        MaterialModule,\n        TranslateModule,\n        DataTableModule,\n        DataColumnModule\n    ],\n    declarations: [\n        PermissionListComponent,\n        InheritPermissionDirective\n    ],\n    providers: [\n        NodePermissionService\n    ],\n    exports: [\n        PermissionListComponent,\n        InheritPermissionDirective\n    ]\n})\nexport class PermissionManagerModule {}\n",
    "/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/* tslint:disable:no-input-rename  */\nimport { Directive, Input, Output, EventEmitter } from '@angular/core';\nimport { NodesApiService } from '@alfresco/adf-core';\nimport { MinimalNodeEntryEntity } from 'alfresco-js-api';\n\n@Directive({\n    selector: 'button[adf-inherit-permission], mat-button-toggle[adf-inherit-permission]',\n    host: {\n        'role': 'button',\n        '(click)': 'onInheritPermissionClicked()'\n    }\n})\nexport class InheritPermissionDirective {\n\n    @Input()\n    nodeId: string;\n\n    @Output()\n    updated: EventEmitter<MinimalNodeEntryEntity> = new EventEmitter<MinimalNodeEntryEntity>();\n\n    constructor(private nodeService: NodesApiService) {\n    }\n\n    onInheritPermissionClicked() {\n        this.nodeService.getNode(this.nodeId).subscribe((node: MinimalNodeEntryEntity) => {\n            const nodeBody = { permissions : {isInheritanceEnabled : !node.permissions.isInheritanceEnabled} };\n            this.nodeService.updateNode(this.nodeId, nodeBody, {include: ['permissions'] }).subscribe((nodeUpdated: MinimalNodeEntryEntity) => {\n                this.updated.emit(nodeUpdated);\n            });\n        });\n    }\n\n}\n",
    "/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Component, ViewEncapsulation, Input, OnInit, EventEmitter, Output } from '@angular/core';\nimport { NodesApiService } from '@alfresco/adf-core';\nimport { MinimalNodeEntryEntity, PermissionElement } from 'alfresco-js-api';\nimport { PermissionDisplayModel } from '../../models/permission.model';\nimport { NodePermissionService } from '../../services/node-permission.service';\n\n@Component({\n    selector: 'adf-permission-list',\n    template: `<div id=\"adf-permission-display-container\" class=\"adf-display-permission-container\">\n    <adf-datatable [rows]=\"permissionList\" class=\"adf-datatable-permission\">\n        <data-columns>\n            <data-column key=\"icon\" type=\"icon\" [sortable]=\"false\">\n            </data-column>\n            <data-column title=\"{{'PERMISSION_MANAGER.PERMISSION_DISPLAY.AUTHORITY_ID' | translate}}\" key=\"authorityId\"></data-column>\n            <data-column title=\"{{'PERMISSION_MANAGER.PERMISSION_DISPLAY.ROLE' | translate}}\" key=\"name\">\n                <ng-template let-entry=\"$implicit\">\n                    <mat-form-field *ngIf=\"!entry.row.getValue('isInherited') else show_only_label\">\n                        <mat-select id=\"adf-select-role-permission\"\n                                    value=\"{{entry.data.getValue(entry.row, entry.col)}}\"\n                                    (selectionChange)=\"saveNewRole($event, entry.row.obj)\">\n                          <mat-option *ngFor=\"let role of settableRoles\" [value]=\"role\">\n                            {{ role }}\n                          </mat-option>\n                        </mat-select>\n                      </mat-form-field>\n                      <ng-template #show_only_label>\n                          <span>{{entry.data.getValue(entry.row, entry.col)}}</span>\n                      </ng-template>\n                </ng-template>\n            </data-column>\n            <data-column title=\"{{'PERMISSION_MANAGER.PERMISSION_DISPLAY.INHERITED' | translate}}\" key=\"isInherited\">\n                <ng-template let-entry=\"$implicit\">\n                    <mat-chip-list>\n                        <mat-chip *ngIf=\"!!entry.data.getValue(entry.row, entry.col) else locally_set_chip\"\n                                id=\"adf-permission-inherited-label\"\n                                color=\"primary\" selected=\"true\">{{'PERMISSION_MANAGER.PERMISSION_DISPLAY.INHERITED' | translate}}</mat-chip>\n                    </mat-chip-list>\n                    <ng-template #locally_set_chip>\n                            <mat-chip-list>\n                                    <mat-chip id=\"adf-permission-locallyset-label\"\n                                              color=\"accent\" selected=\"true\">\n                                              {{'PERMISSION_MANAGER.PERMISSION_DISPLAY.LOCALLY_SET' | translate}}\n                                    </mat-chip>\n                            </mat-chip-list>\n                    </ng-template>\n                </ng-template>\n            </data-column>\n        </data-columns>\n    </adf-datatable>\n</div>\n\n`,\n    styles: [``],\n    encapsulation: ViewEncapsulation.None\n})\nexport class PermissionListComponent implements OnInit {\n\n    @Input()\n    nodeId: string = '';\n\n    @Output()\n    update: EventEmitter<PermissionElement> = new EventEmitter();\n\n    permissionList: PermissionDisplayModel[];\n    settableRoles: any[];\n    actualNode: MinimalNodeEntryEntity;\n\n    constructor(private nodeService: NodesApiService,\n                private nodePermissionService: NodePermissionService) {\n\n    }\n\n    ngOnInit() {\n        this.fetchNodePermissions();\n    }\n\n    reload() {\n        this.fetchNodePermissions();\n    }\n\n    private fetchNodePermissions() {\n        this.nodeService.getNode(this.nodeId).subscribe((node: MinimalNodeEntryEntity) => {\n            this.actualNode = node;\n            this.permissionList = this.getPermissionList(node);\n            this.nodePermissionService.getNodeRoles(node).subscribe((settableList: string[]) => {\n                this.settableRoles =  settableList;\n            });\n        });\n    }\n\n    private getPermissionList(node: MinimalNodeEntryEntity): PermissionDisplayModel[] {\n        let allPermissions: PermissionDisplayModel[] = [];\n        if (node.permissions.locallySet) {\n            node.permissions.locallySet.map((element) => {\n                let permission = new PermissionDisplayModel(element);\n                allPermissions.push(permission);\n            });\n        }\n        if (node.permissions.inherited) {\n            node.permissions.inherited.map((element) => {\n                let permissionInherited = new PermissionDisplayModel(element);\n                permissionInherited.isInherited = true;\n                allPermissions.push(permissionInherited);\n            });\n        }\n        return allPermissions;\n    }\n\n    saveNewRole(event: any, permissionRow: PermissionDisplayModel) {\n        let updatedPermissionRole: PermissionElement = this.buildUpdatedPermission(event.value, permissionRow);\n        this.nodePermissionService.updatePermissionRoles(this.actualNode, updatedPermissionRole)\n            .subscribe((node: MinimalNodeEntryEntity) => {\n                this.update.emit(updatedPermissionRole);\n            });\n    }\n\n    private buildUpdatedPermission(newRole: string, permissionRow: PermissionDisplayModel): PermissionElement {\n        let permissionRole: PermissionElement = {};\n        permissionRole.accessStatus = permissionRow.accessStatus;\n        permissionRole.name = newRole;\n        permissionRole.authorityId = permissionRow.authorityId;\n        return permissionRole;\n    }\n\n}\n",
    "/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs/Observable';\nimport { AlfrescoApiService, SearchService, NodesApiService } from '@alfresco/adf-core';\nimport { QueryBody, MinimalNodeEntryEntity, PathElement, GroupMemberEntry, GroupsPaging, GroupMemberPaging, PermissionElement } from 'alfresco-js-api';\nimport 'rxjs/add/operator/switchMap';\n\n@Injectable()\nexport class NodePermissionService {\n\n    constructor(private apiService: AlfrescoApiService,\n                private searchApiService: SearchService,\n                private nodeService: NodesApiService) {\n    }\n\n    getNodeRoles(node: MinimalNodeEntryEntity): Observable<string[]> {\n        const retrieveSiteQueryBody: QueryBody = this.buildRetrieveSiteQueryBody(node.path.elements);\n        return this.searchApiService.searchByQueryBody(retrieveSiteQueryBody)\n            .switchMap((siteNodeList: any) => {\n                if ( siteNodeList.list.entries.length > 0 ) {\n                    let siteName = siteNodeList.list.entries[0].entry.name;\n                    return this.getGroupMembersBySiteName(siteName);\n                } else {\n                    return Observable.of(node.permissions.settable);\n                }\n            });\n    }\n\n    updatePermissionRoles(node: MinimalNodeEntryEntity, updatedPermissionRole: PermissionElement): Observable<MinimalNodeEntryEntity> {\n        let permissionBody = { permissions: { locallySet: []} };\n        const index = node.permissions.locallySet.map((permission) => permission.authorityId).indexOf(updatedPermissionRole.authorityId);\n        permissionBody.permissions.locallySet = permissionBody.permissions.locallySet.concat(node.permissions.locallySet);\n        if (index !== -1) {\n            permissionBody.permissions.locallySet[index] = updatedPermissionRole;\n        } else {\n            permissionBody.permissions.locallySet.push(updatedPermissionRole);\n        }\n        return this.nodeService.updateNode(node.id, permissionBody);\n    }\n\n    private getGroupMembersBySiteName(siteName: string): Observable<string[]> {\n        const groupName = 'GROUP_site_' + siteName;\n        return this.getGroupMemeberByGroupName(groupName)\n            .map((res: GroupsPaging) => {\n                let displayResult: string[] = [];\n                res.list.entries.forEach((member: GroupMemberEntry) => {\n                    displayResult.push(this.formattedRoleName(member.entry.displayName, 'site_' + siteName));\n                });\n                return displayResult;\n            });\n    }\n\n    getGroupMemeberByGroupName(groupName: string, opts?: any): Observable<GroupMemberPaging> {\n        return Observable.fromPromise(this.apiService.groupsApi.getGroupMembers(groupName, opts));\n    }\n\n    private formattedRoleName(displayName, siteName): string {\n        return displayName.replace(siteName + '_', '');\n    }\n\n    private buildRetrieveSiteQueryBody(nodePath: PathElement[]): QueryBody {\n        const pathNames = nodePath.map((node: PathElement) => 'name: \"' + node.name + '\"');\n        const buildedPathNames = pathNames.join(' OR ');\n        return {\n            'query': {\n                'query': buildedPathNames\n            },\n            'paging': {\n                'maxItems': 100,\n                'skipCount': 0\n            },\n            'include': ['aspectNames', 'properties'],\n            'filterQueries': [\n                {\n                    'query':\n                        \"TYPE:'st:site'\"\n                }\n            ]\n        };\n    }\n\n}\n",
    "/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { PermissionElement } from 'alfresco-js-api';\n\nexport class PermissionDisplayModel implements PermissionElement {\n\n    authorityId?: string;\n    name?: string;\n    accessStatus?: PermissionElement.AccessStatusEnum;\n    isInherited: boolean = false;\n    icon: string;\n\n    constructor(obj?: any) {\n        if (obj) {\n            this.authorityId = obj.authorityId;\n            this.name = obj.name;\n            this.accessStatus = obj.accessStatus;\n            this.isInherited = obj.isInherited !== null && obj.isInherited !== undefined ? obj.isInherited : false;\n            this.icon = obj.icon ? obj.icon : 'lock_open';\n        }\n    }\n}\n",
    "/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { CommonModule } from '@angular/common';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { NgModule } from '@angular/core';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { MaterialModule } from '../material.module';\nimport { CardViewModule } from '@alfresco/adf-core';\nimport { ContentMetadataComponent } from './components/content-metadata/content-metadata.component';\nimport { ContentMetadataCardComponent } from './components/content-metadata-card/content-metadata-card.component';\n\n@NgModule({\n    imports: [\n        CommonModule,\n        MaterialModule,\n        TranslateModule,\n        FlexLayoutModule,\n        CardViewModule\n    ],\n    exports: [\n        ContentMetadataComponent,\n        ContentMetadataCardComponent\n    ],\n    declarations: [\n        ContentMetadataComponent,\n        ContentMetadataCardComponent\n    ]\n})\nexport class ContentMetadataModule {}\n",
    "/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Component, Input, OnChanges, OnInit, SimpleChanges, SimpleChange, ViewEncapsulation } from '@angular/core';\nimport { MinimalNodeEntryEntity } from 'alfresco-js-api';\nimport { Observable } from 'rxjs/Observable';\nimport { CardViewItem, NodesApiService, LogService, CardViewUpdateService, AlfrescoApiService } from '@alfresco/adf-core';\nimport { ContentMetadataService } from '../../services/content-metadata.service';\nimport { CardViewGroup } from '../../interfaces/content-metadata.interfaces';\n\n@Component({\n    selector: 'adf-content-metadata',\n    template: `<div class=\"adf-metadata-properties\">\n    <mat-accordion displayMode=\"flat\" [multi]=\"multi\">\n        <mat-expansion-panel [expanded]=\"!expanded\" [hideToggle]=\"!expanded\">\n            <mat-expansion-panel-header>\n                <mat-panel-title>\n                    {{ 'CORE.METADATA.BASIC.HEADER' | translate }}\n                </mat-panel-title>\n            </mat-expansion-panel-header>\n\n            <adf-card-view\n                [properties]=\"basicProperties$ | async\"\n                [editable]=\"editable\"\n                [displayEmpty]=\"displayEmpty\">\n            </adf-card-view>\n        </mat-expansion-panel>\n\n        <ng-container *ngIf=\"expanded\">\n            <ng-container *ngIf=\"groupedProperties$ | async; else loading; let groupedProperties\">\n                <div *ngFor=\"let group of groupedProperties\" class=\"adf-metadata-grouped-properties-container\">\n                    <mat-expansion-panel>\n                        <mat-expansion-panel-header>\n                            <mat-panel-title>\n                                {{ group.title | translate }}\n                            </mat-panel-title>\n                        </mat-expansion-panel-header>\n\n                        <adf-card-view\n                            [properties]=\"group.properties\"\n                            [editable]=\"editable\"\n                            [displayEmpty]=\"displayEmpty\">\n                        </adf-card-view>\n                    </mat-expansion-panel>\n                </div>\n            </ng-container>\n            <ng-template #loading>\n                <mat-progress-bar mode=\"indeterminate\"></mat-progress-bar>\n            </ng-template>\n        </ng-container>\n    </mat-accordion>\n</div>`,\n    styles: [``],\n    host: { 'class': 'adf-content-metadata' },\n    encapsulation: ViewEncapsulation.None\n})\nexport class ContentMetadataComponent implements OnChanges, OnInit {\n\n    @Input()\n    node: MinimalNodeEntryEntity;\n\n    @Input()\n    editable: boolean = false;\n\n    @Input()\n    displayEmpty: boolean = false;\n\n    @Input()\n    expanded: boolean = false;\n\n    @Input()\n    multi = false;\n\n    @Input()\n    preset: string;\n\n    nodeHasBeenUpdated: boolean = false;\n    basicProperties$: Observable<CardViewItem[]>;\n    groupedProperties$: Observable<CardViewGroup[]>;\n\n    constructor(private contentMetadataService: ContentMetadataService,\n                private cardViewUpdateService: CardViewUpdateService,\n                private nodesApi: NodesApiService,\n                private logService: LogService,\n                private apiService: AlfrescoApiService) {}\n\n    ngOnInit() {\n        this.cardViewUpdateService.itemUpdated$\n            .switchMap(this.saveNode.bind(this))\n            .subscribe(\n                (node) => {\n                    this.nodeHasBeenUpdated = true;\n                    this.node = node;\n                    this.apiService.nodeUpdated.next(node);\n                },\n                error => this.logService.error(error)\n            );\n    }\n\n    ngOnChanges(changes: SimpleChanges) {\n        const nodeChange: SimpleChange = changes['node'];\n        if (nodeChange || this.nodeHasBeenUpdated) {\n            const node = nodeChange && nodeChange.currentValue || this.node;\n            this.nodeHasBeenUpdated = false;\n\n            this.basicProperties$ = this.contentMetadataService.getBasicProperties(node);\n            this.groupedProperties$ = this.contentMetadataService.getGroupedProperties(node, this.preset);\n        }\n    }\n\n    private saveNode({ changed: nodeBody }): Observable<MinimalNodeEntryEntity> {\n        return this.nodesApi.updateNode(this.node.id, nodeBody);\n    }\n}\n",
    "/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Injectable } from '@angular/core';\nimport { MinimalNodeEntryEntity } from 'alfresco-js-api';\nimport { BasicPropertiesService } from './basic-properties.service';\nimport { Observable } from 'rxjs/Observable';\nimport { PropertyGroupTranslatorService } from './property-groups-translator.service';\nimport { CardViewItem } from '@alfresco/adf-core';\nimport { CardViewGroup } from '../interfaces/content-metadata.interfaces';\nimport { ContentMetadataConfigFactory } from './config/content-metadata-config.factory';\nimport { PropertyDescriptorsService } from './property-descriptors.service';\n\n@Injectable()\nexport class ContentMetadataService {\n\n    constructor(private basicPropertiesService: BasicPropertiesService,\n                private contentMetadataConfigFactory: ContentMetadataConfigFactory,\n                private propertyGroupTranslatorService: PropertyGroupTranslatorService,\n                private propertyDescriptorsService: PropertyDescriptorsService) {\n    }\n\n    getBasicProperties(node: MinimalNodeEntryEntity): Observable<CardViewItem[]> {\n        return Observable.of(this.basicPropertiesService.getProperties(node));\n    }\n\n    getGroupedProperties(node: MinimalNodeEntryEntity, presetName: string = 'default'): Observable<CardViewGroup[]> {\n        let groupedProperties = Observable.of([]);\n\n        if (node.aspectNames) {\n            const config = this.contentMetadataConfigFactory.get(presetName),\n                groupNames = node.aspectNames\n                    .concat(node.nodeType)\n                    .filter(groupName => config.isGroupAllowed(groupName));\n\n            if (groupNames.length > 0) {\n                groupedProperties = this.propertyDescriptorsService.load(groupNames)\n                    .map(groups => config.reorganiseByConfig(groups))\n                    .map(groups => this.propertyGroupTranslatorService.translateToCardViewGroups(groups, node.properties));\n            }\n        }\n\n        return groupedProperties;\n    }\n}\n",
    "/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Injectable } from '@angular/core';\nimport { AlfrescoApiService } from '@alfresco/adf-core';\nimport { forkJoin } from 'rxjs/observable/forkJoin';\nimport { Observable } from 'rxjs/Observable';\nimport { defer } from 'rxjs/observable/defer';\nimport { PropertyGroup, PropertyGroupContainer } from '../interfaces/content-metadata.interfaces';\n\n@Injectable()\nexport class PropertyDescriptorsService {\n\n    constructor(private alfrescoApiService: AlfrescoApiService) {}\n\n    load(groupNames: string[]): Observable<PropertyGroupContainer> {\n        const groupFetchStreams = groupNames\n            .map(groupName => groupName.replace(':', '_'))\n            .map(groupName => defer( () => this.alfrescoApiService.classesApi.getClass(groupName)) );\n\n        return forkJoin(groupFetchStreams)\n            .map(this.convertToObject);\n    }\n\n    private convertToObject(propertyGroupsArray: PropertyGroup[]): PropertyGroupContainer {\n        return propertyGroupsArray.reduce((propertyGroups, propertyGroup) => {\n            return Object.assign({}, propertyGroups, {\n                [propertyGroup.name]: propertyGroup\n            });\n        }, {});\n    }\n}\n",
    "/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Injectable } from '@angular/core';\nimport { AppConfigService, LogService } from '@alfresco/adf-core';\nimport { AspectOrientedConfigService } from './aspect-oriented-config.service';\nimport { IndifferentConfigService } from './indifferent-config.service';\nimport { LayoutOrientedConfigService } from './layout-oriented-config.service';\nimport {\n    PresetConfig,\n    ContentMetadataConfig,\n    AspectOrientedConfig,\n    InDifferentConfig,\n    LayoutOrientedConfig\n} from '../../interfaces/content-metadata.interfaces';\n\n@Injectable()\nexport class ContentMetadataConfigFactory {\n\n    static readonly INDIFFERENT_PRESET = '*';\n    static readonly DEFAULT_PRESET_NAME = 'default';\n\n    constructor(private appConfigService: AppConfigService, private logService: LogService) {}\n\n    public get(presetName: string = 'default'): ContentMetadataConfig {\n        let presetConfig;\n        try {\n            presetConfig = this.appConfigService.config['content-metadata'].presets[presetName];\n        } catch {\n            if (presetName !== ContentMetadataConfigFactory.DEFAULT_PRESET_NAME) {\n                this.logService.error(`No content-metadata preset for: ${presetName}`);\n            }\n            presetConfig = ContentMetadataConfigFactory.INDIFFERENT_PRESET;\n        }\n\n        return this.createConfig(presetConfig);\n    }\n\n    private createConfig(presetConfig: PresetConfig): ContentMetadataConfig {\n        let config: ContentMetadataConfig;\n\n        if (this.isLayoutOrientedPreset(presetConfig)) {\n            config = new LayoutOrientedConfigService(<LayoutOrientedConfig> presetConfig);\n        } else if (this.isAspectOrientedPreset(presetConfig)) {\n            config = new AspectOrientedConfigService(<AspectOrientedConfig> presetConfig);\n        } else {\n            config = new IndifferentConfigService(<InDifferentConfig> presetConfig);\n        }\n\n        Object.freeze(config);\n        return config;\n    }\n\n    private isAspectOrientedPreset(presetConfig: PresetConfig): boolean {\n        return this.isObject(presetConfig);\n    }\n\n    private isLayoutOrientedPreset(presetConfig: PresetConfig): boolean {\n        return Array.isArray(presetConfig);\n    }\n\n    private isObject(x) {\n        return x != null && typeof x === 'object';\n    }\n}\n",
    "/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Injectable } from '@angular/core';\nimport {\n    ContentMetadataConfig,\n    LayoutOrientedConfigItem,\n    OrganisedPropertyGroup,\n    PropertyGroupContainer\n} from '../../interfaces/content-metadata.interfaces';\nimport { getProperty } from './property-group-reader';\n\n@Injectable()\nexport class LayoutOrientedConfigService implements ContentMetadataConfig {\n\n    constructor(private config: any) {}\n\n    public isGroupAllowed(groupName: string): boolean {\n        return this.getMatchingGroups(groupName).length > 0;\n    }\n\n    public reorganiseByConfig(propertyGroups: PropertyGroupContainer): OrganisedPropertyGroup[] {\n        const layoutBlocks = this.config;\n\n        return layoutBlocks.map((layoutBlock) => {\n            const flattenedItems = this.flattenItems(layoutBlock.items),\n                properties = flattenedItems.reduce((props, explodedItem) => {\n                    const property = getProperty(propertyGroups, explodedItem.groupName, explodedItem.propertyName) || [];\n                    return props.concat(property);\n                }, []);\n\n            return {\n                title: layoutBlock.title,\n                properties\n            };\n        });\n    }\n\n    private flattenItems(items) {\n        return items.reduce((accumulator, item) => {\n            const properties = Array.isArray(item.properties) ? item.properties : [item.properties];\n            const flattenedProperties = properties.map(propertyName => {\n                return {\n                    groupName: item.aspect || item.type,\n                    propertyName\n                };\n            });\n\n            return accumulator.concat(flattenedProperties);\n        }, []);\n    }\n\n    private getMatchingGroups(groupName: string): LayoutOrientedConfigItem[] {\n        return this.config\n            .map(layoutBlock => layoutBlock.items)\n            .reduce((accumulator, items) => accumulator.concat(items), [])\n            .filter((item) => item.aspect === groupName || item.type === groupName);\n    }\n}\n",
    "/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Injectable } from '@angular/core';\nimport { ContentMetadataConfig, OrganisedPropertyGroup,\n    PropertyGroupContainer\n} from '../../interfaces/content-metadata.interfaces';\n\n@Injectable()\nexport class IndifferentConfigService implements ContentMetadataConfig {\n\n    constructor(config: any) {}\n\n    public isGroupAllowed(groupName: string): boolean {\n        return true;\n    }\n\n    public reorganiseByConfig(propertyGroups: PropertyGroupContainer): OrganisedPropertyGroup[] {\n        return Object.keys(propertyGroups)\n            .map((groupName) => {\n                const propertyGroup = propertyGroups[groupName],\n                    properties = propertyGroup.properties;\n\n                return Object.assign({}, propertyGroup, {\n                    properties: Object.keys(properties).map(propertyName => properties[propertyName])\n                });\n            });\n    }\n}\n",
    "/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Injectable } from '@angular/core';\nimport { ContentMetadataConfig, OrganisedPropertyGroup, PropertyGroupContainer } from '../../interfaces/content-metadata.interfaces';\nimport { getGroup, getProperty } from './property-group-reader';\n\n@Injectable()\nexport class AspectOrientedConfigService implements ContentMetadataConfig {\n\n    constructor(private config: any) {}\n\n    public isGroupAllowed(groupName: string): boolean {\n        const groupNames = Object.keys(this.config);\n        return groupNames.indexOf(groupName) !== -1;\n    }\n\n    public reorganiseByConfig(propertyGroups: PropertyGroupContainer): OrganisedPropertyGroup[] {\n        const aspects = this.config,\n            aspectNames = Object.keys(aspects);\n\n        return aspectNames\n            .reduce((groupAccumulator, aspectName) => {\n                const newGroup = this.getOrganisedPropertyGroup(propertyGroups, aspectName);\n                return groupAccumulator.concat(newGroup);\n            }, [])\n            .filter(organisedPropertyGroup => organisedPropertyGroup.properties.length > 0);\n    }\n\n    private getOrganisedPropertyGroup(propertyGroups, aspectName) {\n        const group = getGroup(propertyGroups, aspectName);\n        let newGroup = [];\n\n        if (group) {\n            const aspectProperties = this.config[aspectName];\n            let properties;\n\n            if (aspectProperties === '*') {\n                properties = getProperty(propertyGroups, aspectName, aspectProperties);\n            } else {\n                properties = (<string[]> aspectProperties)\n                    .map((propertyName) => getProperty(propertyGroups, aspectName, propertyName))\n                    .filter(props => props !== undefined);\n            }\n\n            newGroup = [ { title: group.title, properties } ];\n        }\n\n        return newGroup;\n    }\n}\n",
    "/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { PropertyGroup, Property, PropertyGroupContainer } from '../../interfaces/content-metadata.interfaces';\n\nconst emptyGroup = {\n    properties: {}\n};\n\nfunction convertObjectToArray(object: any): Property[] {\n    return Object.keys(object).map(key => object[key]);\n}\n\nexport function getGroup(propertyGroups: PropertyGroupContainer, groupName: string): PropertyGroup | undefined {\n    return propertyGroups[groupName];\n}\n\nexport function getProperty(propertyGroups: PropertyGroupContainer, groupName: string, propertyName: string): Property | Property[] | undefined {\n    const groupDefinition = getGroup(propertyGroups, groupName) || emptyGroup;\n    let propertyDefinitions;\n\n    if (propertyName === '*') {\n        propertyDefinitions = convertObjectToArray(groupDefinition.properties);\n    } else {\n        propertyDefinitions = groupDefinition.properties[propertyName];\n    }\n\n    return propertyDefinitions;\n}\n",
    "/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Injectable } from '@angular/core';\nimport {\n    CardViewItemProperties,\n    CardViewItem,\n    CardViewTextItemModel,\n    CardViewBoolItemModel,\n    CardViewDateItemModel,\n    CardViewDatetimeItemModel,\n    CardViewIntItemModel,\n    CardViewFloatItemModel,\n    LogService\n} from '@alfresco/adf-core';\nimport { Property, CardViewGroup, OrganisedPropertyGroup } from '../interfaces/content-metadata.interfaces';\n\nconst D_TEXT = 'd:text';\nconst D_MLTEXT = 'd:mltext';\nconst D_DATE = 'd:date';\nconst D_DATETIME = 'd:datetime';\nconst D_INT = 'd:int';\nconst D_LONG = 'd:long';\nconst D_FLOAT = 'd:float';\nconst D_DOUBLE = 'd:double';\nconst D_BOOLEAN = 'd:boolean';\n\n@Injectable()\nexport class PropertyGroupTranslatorService {\n\n    static readonly RECOGNISED_ECM_TYPES = [ D_TEXT, D_MLTEXT, D_DATE, D_DATETIME, D_INT, D_LONG , D_FLOAT, D_DOUBLE, D_BOOLEAN ];\n\n    constructor(private logService: LogService) {}\n\n    public translateToCardViewGroups(propertyGroups: OrganisedPropertyGroup[], propertyValues): CardViewGroup[] {\n        return propertyGroups.map(propertyGroup => {\n            const translatedPropertyGroup: any = Object.assign({}, propertyGroup);\n            translatedPropertyGroup.properties = this.translateArray(propertyGroup.properties, propertyValues);\n            return translatedPropertyGroup;\n        });\n    }\n\n    private translateArray(properties: Property[], propertyValues: any): CardViewItem[] {\n        return properties.map(property => {\n            return this.translate(property, propertyValues[property.name]);\n        });\n    }\n\n    private translate(property: Property, propertyValue: any): CardViewItem {\n        this.checkECMTypeValidity(property.dataType);\n\n        const prefix = 'properties.';\n\n        let propertyDefinition: CardViewItemProperties = {\n            label: property.title,\n            value: propertyValue,\n            key: `${prefix}${property.name}`,\n            default: property.defaultValue,\n            editable: true\n        };\n        let cardViewItemProperty;\n\n        switch (property.dataType) {\n\n            case D_MLTEXT:\n                cardViewItemProperty = new CardViewTextItemModel(Object.assign(propertyDefinition, {\n                    multiline: true\n                }));\n                break;\n\n            case D_INT:\n            case D_LONG:\n                cardViewItemProperty = new CardViewIntItemModel(propertyDefinition);\n                break;\n\n            case D_FLOAT:\n            case D_DOUBLE:\n                cardViewItemProperty = new CardViewFloatItemModel(propertyDefinition);\n                break;\n\n            case D_DATE:\n                cardViewItemProperty = new CardViewDateItemModel(propertyDefinition);\n                break;\n\n            case D_DATETIME:\n                cardViewItemProperty = new CardViewDatetimeItemModel(propertyDefinition);\n                break;\n\n            case D_BOOLEAN:\n                cardViewItemProperty = new CardViewBoolItemModel(propertyDefinition);\n                break;\n\n            case D_TEXT:\n            default:\n                cardViewItemProperty = new CardViewTextItemModel(Object.assign(propertyDefinition, {\n                    multiline: false\n                }));\n        }\n\n        return cardViewItemProperty;\n    }\n\n    private checkECMTypeValidity(ecmPropertyType) {\n        if (PropertyGroupTranslatorService.RECOGNISED_ECM_TYPES.indexOf(ecmPropertyType) === -1) {\n            this.logService.error(`Unknown type for mapping: ${ecmPropertyType}`);\n        }\n    }\n}\n",
    "/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Injectable } from '@angular/core';\nimport { MinimalNodeEntryEntity } from 'alfresco-js-api';\nimport { CardViewDateItemModel, CardViewTextItemModel, FileSizePipe } from '@alfresco/adf-core';\n\n@Injectable()\nexport class BasicPropertiesService {\n\n    constructor(private fileSizePipe: FileSizePipe) {\n    }\n\n    getProperties(node: MinimalNodeEntryEntity) {\n\n        const sizeInBytes = node.content ? node.content.sizeInBytes : '',\n            mimeTypeName = node.content ? node.content.mimeTypeName : '',\n            author = node.properties ? node.properties['cm:author'] : '',\n            description = node.properties ? node.properties['cm:description'] : '',\n            title = node.properties ? node.properties['cm:title'] : '';\n\n        return [\n            new CardViewTextItemModel({\n                label: 'CORE.METADATA.BASIC.NAME',\n                value: node.name,\n                key: 'name',\n                editable: true\n            }),\n            new CardViewTextItemModel({\n                label: 'CORE.METADATA.BASIC.TITLE',\n                value: title,\n                key: 'properties.cm:title',\n                editable: true\n            }),\n            new CardViewTextItemModel({\n                label: 'CORE.METADATA.BASIC.CREATOR',\n                value: node.createdByUser.displayName,\n                key: 'createdByUser.displayName',\n                editable: false\n            }),\n            new CardViewDateItemModel({\n                label: 'CORE.METADATA.BASIC.CREATED_DATE',\n                value: node.createdAt,\n                key: 'createdAt',\n                editable: false\n            }),\n            new CardViewTextItemModel({\n                label: 'CORE.METADATA.BASIC.SIZE',\n                value: sizeInBytes,\n                key: 'content.sizeInBytes',\n                pipes: [{ pipe: this.fileSizePipe }],\n                editable: false\n            }),\n            new CardViewTextItemModel({\n                label: 'CORE.METADATA.BASIC.MODIFIER',\n                value: node.modifiedByUser.displayName,\n                key: 'modifiedByUser.displayName',\n                editable: false\n            }),\n            new CardViewDateItemModel({\n                label: 'CORE.METADATA.BASIC.MODIFIED_DATE',\n                value: node.modifiedAt,\n                key: 'modifiedAt',\n                editable: false\n            }),\n            new CardViewTextItemModel({\n                label: 'CORE.METADATA.BASIC.MIMETYPE',\n                value: mimeTypeName,\n                key: 'content.mimeTypeName',\n                editable: false\n            }),\n            new CardViewTextItemModel({\n                label: 'CORE.METADATA.BASIC.AUTHOR',\n                value: author,\n                key: 'properties.cm:author',\n                editable: true\n            }),\n            new CardViewTextItemModel({\n                label: 'CORE.METADATA.BASIC.DESCRIPTION',\n                value: description,\n                key: 'properties.cm:description',\n                multiline: true,\n                editable: true\n            })\n        ];\n    }\n}\n",
    "/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Component, Input, ViewEncapsulation } from '@angular/core';\nimport { MinimalNodeEntryEntity } from 'alfresco-js-api';\n\n@Component({\n    selector: 'adf-content-metadata-card',\n    template: `<mat-card *ngIf=\"node\">\n    <mat-card-content>\n        <adf-content-metadata\n            [node]=\"node\"\n            [displayEmpty]=\"displayEmpty\"\n            [editable]=\"editable\"\n            [expanded]=\"expanded\"\n            [multi]=\"multi\"\n            [preset]=\"preset\">\n        </adf-content-metadata>\n    </mat-card-content>\n    <mat-card-footer class=\"adf-content-metadata-card-footer\" fxLayout=\"row\" fxLayoutAlign=\"space-between stretch\">\n        <div>\n            <button *ngIf=\"!readOnly\"\n                mat-icon-button\n                (click)=\"toggleEdit()\"\n                [attr.title]=\"'CORE.METADATA.ACTIONS.EDIT' | translate\"\n                data-automation-id=\"mata-data-card-toggle-edit\">\n                <mat-icon>mode_edit</mat-icon>\n            </button>\n        </div>\n        <button mat-button (click)=\"toggleExpanded()\" data-automation-id=\"mata-data-card-toggle-expand\">\n            <ng-container *ngIf=\"!expanded\">\n                <span data-automation-id=\"mata-data-card-toggle-expand-label\">{{ 'ADF_VIEWER.SIDEBAR.METADATA.MORE_INFORMATION' | translate }}</span>\n                <mat-icon>keyboard_arrow_down</mat-icon>\n            </ng-container>\n            <ng-container *ngIf=\"expanded\">\n                <span data-automation-id=\"mata-data-card-toggle-expand-label\">{{ 'ADF_VIEWER.SIDEBAR.METADATA.LESS_INFORMATION' | translate }}</span>\n                <mat-icon>keyboard_arrow_up</mat-icon>\n            </ng-container>\n        </button>\n    </mat-card-footer>\n</mat-card>\n`,\n    styles: [``],\n    encapsulation: ViewEncapsulation.None,\n    host: { 'class': 'adf-content-metadata-card' }\n})\nexport class ContentMetadataCardComponent {\n    @Input()\n    node: MinimalNodeEntryEntity;\n\n    @Input()\n    displayEmpty: boolean = false;\n\n    @Input()\n    preset: string;\n\n    @Input()\n    readOnly = false;\n\n    @Input()\n    multi = false;\n\n    editable: boolean = false;\n    expanded: boolean = false;\n\n    toggleEdit(): void {\n        this.editable = !this.editable;\n    }\n\n    toggleExpanded(): void {\n        this.expanded = !this.expanded;\n    }\n}\n",
    "/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { MaterialModule } from '../material.module';\n\nimport { FolderCreateDirective } from './folder-create.directive';\nimport { FolderEditDirective } from './folder-edit.directive';\n\n@NgModule({\n    imports: [\n        CommonModule,\n        MaterialModule\n    ],\n    declarations: [\n        FolderCreateDirective,\n        FolderEditDirective\n    ],\n    exports: [\n        FolderCreateDirective,\n        FolderEditDirective\n    ]\n})\nexport class FolderDirectiveModule {}\n",
    "/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/* tslint:disable:no-input-rename  */\n\nimport { Directive, ElementRef, HostListener, Input, Output, EventEmitter } from '@angular/core';\nimport { MatDialog, MatDialogConfig } from '@angular/material';\n\nimport { MinimalNodeEntryEntity } from 'alfresco-js-api';\n\nimport { FolderDialogComponent } from '../dialogs/folder.dialog';\nimport { ContentService } from '@alfresco/adf-core';\n\n@Directive({\n    selector: '[adf-edit-folder]'\n})\nexport class FolderEditDirective {\n    static DIALOG_WIDTH: number = 400;\n\n    /** Folder node to edit. */\n    @Input('adf-edit-folder')\n    folder: MinimalNodeEntryEntity;\n\n    /** Emitted when the edit/create folder give error for example a folder with same name already exist */\n    @Output()\n    error: EventEmitter<any> = new EventEmitter<any>();\n\n    @HostListener('click', [ '$event' ])\n    onClick(event) {\n        event.preventDefault();\n        if (this.folder) {\n            this.openDialog();\n        }\n    }\n\n    constructor(\n        public dialogRef: MatDialog,\n        public elementRef: ElementRef,\n        public content: ContentService\n    ) {}\n\n    private get dialogConfig(): MatDialogConfig {\n        const { DIALOG_WIDTH: width } = FolderEditDirective;\n        const { folder } = this;\n\n        return {\n            data: { folder },\n            width: `${width}px`\n        };\n    }\n\n    private openDialog(): void {\n        const { dialogRef, dialogConfig, content } = this;\n        const dialogInstance = dialogRef.open(FolderDialogComponent, dialogConfig);\n\n        dialogInstance.componentInstance.error.subscribe((error) => {\n            this.error.emit(error);\n        });\n\n        dialogInstance.afterClosed().subscribe((node: MinimalNodeEntryEntity) => {\n            if (node) {\n                content.folderEdit.next(node);\n            }\n        });\n    }\n}\n",
    "/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/* tslint:disable:no-input-rename  */\n\nimport { Directive, HostListener, Input, Output, EventEmitter } from '@angular/core';\nimport { MatDialog, MatDialogConfig } from '@angular/material';\nimport { MinimalNodeEntryEntity } from 'alfresco-js-api';\nimport { FolderDialogComponent } from '../dialogs/folder.dialog';\nimport { ContentService } from '@alfresco/adf-core';\n\nconst DEFAULT_FOLDER_PARENT_ID = '-my-';\n\n@Directive({\n    selector: '[adf-create-folder]'\n})\nexport class FolderCreateDirective {\n    static DIALOG_WIDTH: number = 400;\n\n    /** Parent folder where the new folder will be located after creation. */\n    @Input('adf-create-folder')\n    parentNodeId: string = DEFAULT_FOLDER_PARENT_ID;\n\n    /** Emitted when the create folder give error for example a folder with same name already exist */\n    @Output()\n    error: EventEmitter<any> = new EventEmitter<any>();\n\n    @HostListener('click', [ '$event' ])\n    onClick(event) {\n        event.preventDefault();\n        this.openDialog();\n    }\n\n    constructor(\n        public dialogRef: MatDialog,\n        public content: ContentService\n    ) {}\n\n    private get dialogConfig(): MatDialogConfig {\n        const { DIALOG_WIDTH: width } = FolderCreateDirective;\n        const { parentNodeId } = this;\n\n        return {\n            data: { parentNodeId },\n            width: `${width}px`\n        };\n    }\n\n    private openDialog(): void {\n        const { dialogRef, dialogConfig, content } = this;\n        const dialogInstance = dialogRef.open(FolderDialogComponent, dialogConfig);\n\n        dialogInstance.componentInstance.error.subscribe((error) => {\n            this.error.emit(error);\n        });\n\n        dialogInstance.afterClosed().subscribe((node: MinimalNodeEntryEntity) => {\n            if (node) {\n                content.folderCreate.next(node);\n            }\n        });\n    }\n}\n",
    "/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { MaterialModule } from '../material.module';\n\nimport { DownloadZipDialogComponent } from './download-zip.dialog';\nimport { FolderDialogComponent } from './folder.dialog';\nimport { NodeLockDialogComponent } from './node-lock.dialog';\nimport { ShareDialogComponent } from './share.dialog';\nimport { ConfirmDialogComponent } from './confirm.dialog';\n\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { TranslateModule } from '@ngx-translate/core';\n\nimport { FormModule } from '@alfresco/adf-core';\nimport { MatDatetimepickerModule } from '@mat-datetimepicker/core';\nimport { MatMomentDatetimeModule } from '@mat-datetimepicker/moment';\n\n@NgModule({\n    imports: [\n        CommonModule,\n        MaterialModule,\n        TranslateModule,\n        FormsModule,\n        FormModule,\n        ReactiveFormsModule,\n        MatMomentDatetimeModule,\n        MatDatetimepickerModule\n    ],\n    declarations: [\n        DownloadZipDialogComponent,\n        FolderDialogComponent,\n        NodeLockDialogComponent,\n        ShareDialogComponent,\n        ConfirmDialogComponent\n    ],\n    exports: [\n        DownloadZipDialogComponent,\n        FolderDialogComponent,\n        NodeLockDialogComponent,\n        ShareDialogComponent,\n        ConfirmDialogComponent\n    ],\n    entryComponents: [\n        DownloadZipDialogComponent,\n        FolderDialogComponent,\n        NodeLockDialogComponent,\n        ShareDialogComponent,\n        ConfirmDialogComponent\n    ]\n})\nexport class DialogModule {}\n",
    "/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Observable } from 'rxjs/Observable';\n\nimport { Component, Inject, OnInit, Optional, EventEmitter, Output } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material';\n\nimport { MinimalNodeEntryEntity } from 'alfresco-js-api';\nimport { NodesApiService, TranslationService } from '@alfresco/adf-core';\n\nimport { forbidEndingDot, forbidOnlySpaces, forbidSpecialCharacters } from './folder-name.validators';\n\n@Component({\n    selector: 'adf-folder-dialog',\n    styles: [`.adf-fill-remaining-space{-webkit-box-flex:1;-ms-flex:1 1 auto;flex:1 1 auto}.adf-full-width{width:100%}`],\n    template: `<h2 mat-dialog-title>\n    {{\n    (editing\n    ? 'CORE.FOLDER_DIALOG.EDIT_FOLDER_TITLE'\n    : 'CORE.FOLDER_DIALOG.CREATE_FOLDER_TITLE'\n    ) | translate\n    }}\n</h2>\n\n<mat-dialog-content>\n    <form [formGroup]=\"form\" (submit)=\"submit()\">\n        <mat-input-container class=\"adf-full-width\">\n            <input\n                placeholder=\"{{ 'CORE.FOLDER_DIALOG.FOLDER_NAME.LABEL' | translate }}\"\n                matInput\n                required\n                [formControl]=\"form.controls['name']\"\n            />\n\n            <mat-hint *ngIf=\"form.controls['name'].dirty\">\n                <span *ngIf=\"form.controls['name'].errors?.required\">\n                    {{ 'CORE.FOLDER_DIALOG.FOLDER_NAME.ERRORS.REQUIRED' | translate }}\n                </span>\n\n                <span *ngIf=\"!form.controls['name'].errors?.required && form.controls['name'].errors?.message\">\n                    {{ form.controls['name'].errors?.message | translate }}\n                </span>\n            </mat-hint>\n        </mat-input-container>\n\n        <br />\n        <br />\n\n        <mat-input-container class=\"adf-full-width\">\n            <textarea\n                matInput\n                placeholder=\"{{ 'CORE.FOLDER_DIALOG.FOLDER_DESCRIPTION.LABEL' | translate }}\"\n                rows=\"4\"\n                [formControl]=\"form.controls['description']\"></textarea>\n        </mat-input-container>\n    </form>\n</mat-dialog-content>\n\n<mat-dialog-actions class=\"adf-dialog-buttons\">\n    <span class=\"adf-fill-remaining-space\"></span>\n\n    <button\n        mat-button\n        mat-dialog-close>\n        {{ 'CORE.FOLDER_DIALOG.CANCEL_BUTTON.LABEL' | translate }}\n    </button>\n\n    <button class=\"adf-dialog-action-button\"\n            mat-button\n            (click)=\"submit()\"\n            [disabled]=\"!form.valid\">\n        {{\n        (editing\n        ? 'CORE.FOLDER_DIALOG.UPDATE_BUTTON.LABEL'\n        : 'CORE.FOLDER_DIALOG.CREATE_BUTTON.LABEL'\n        ) | translate\n        }}\n    </button>\n</mat-dialog-actions>\n`\n})\nexport class FolderDialogComponent implements OnInit {\n\n    form: FormGroup;\n\n    folder: MinimalNodeEntryEntity = null;\n\n    /** Emitted when the edit/create folder give error for example a folder with same name already exist\n     */\n    @Output()\n    error: EventEmitter<any> = new EventEmitter<any>();\n\n    constructor(\n        private formBuilder: FormBuilder,\n        private dialog: MatDialogRef<FolderDialogComponent>,\n        private nodesApi: NodesApiService,\n        private translation: TranslationService,\n        @Optional()\n        @Inject(MAT_DIALOG_DATA)\n        public data: any\n    ) {}\n\n    get editing(): boolean {\n        return !!this.data.folder;\n    }\n\n    ngOnInit() {\n        const { folder } = this.data;\n        let name = '';\n        let description = '';\n\n        if (folder) {\n            const { properties } = folder;\n\n            name = folder.name || '';\n            description = properties ? properties['cm:description'] : '';\n        }\n\n        const validators = {\n            name: [\n                Validators.required,\n                forbidSpecialCharacters,\n                forbidEndingDot,\n                forbidOnlySpaces\n            ]\n        };\n\n        this.form = this.formBuilder.group({\n            name: [ name, validators.name ],\n            description: [ description ]\n        });\n    }\n\n    get name(): string {\n        let { name } = this.form.value;\n\n        return (name || '').trim();\n    }\n\n    get description(): string {\n        let { description } = this.form.value;\n\n        return (description || '').trim();\n    }\n\n    private get properties(): any {\n        const { name: title, description } = this;\n\n        return {\n            'cm:title': title,\n            'cm:description': description\n        };\n    }\n\n    private create(): Observable<MinimalNodeEntryEntity> {\n        const { name, properties, nodesApi, data: { parentNodeId} } = this;\n        return nodesApi.createFolder(parentNodeId, { name, properties });\n    }\n\n    private edit(): Observable<MinimalNodeEntryEntity> {\n        const { name, properties, nodesApi, data: { folder: { id: nodeId }} } = this;\n        return nodesApi.updateNode(nodeId, { name, properties });\n    }\n\n    submit() {\n        const { form, dialog, editing } = this;\n\n        if (!form.valid) { return; }\n\n        (editing ? this.edit() : this.create())\n            .subscribe(\n                (folder: MinimalNodeEntryEntity) => dialog.close(folder),\n                (error) => this.handleError(error)\n            );\n    }\n\n    handleError(error: any): any {\n        let errorMessage = 'CORE.MESSAGES.ERRORS.GENERIC';\n\n        try {\n            const { error: { statusCode } } = JSON.parse(error.message);\n\n            if (statusCode === 409) {\n                errorMessage = 'CORE.MESSAGES.ERRORS.EXISTENT_FOLDER';\n            }\n        } catch (err) { /* Do nothing, keep the original message */ }\n\n        this.error.emit(this.translation.instant(errorMessage));\n\n        return error;\n    }\n}\n",
    "/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { FormControl } from '@angular/forms';\n\nconst I18N_ERRORS_PATH = 'CORE.FOLDER_DIALOG.FOLDER_NAME.ERRORS';\n\nexport function forbidSpecialCharacters({ value }: FormControl) {\n    const specialCharacters: RegExp = /([\\*\\\"\\<\\>\\\\\\/\\?\\:\\|])/;\n    const isValid: boolean = !specialCharacters.test(value);\n\n    return (isValid) ? null : {\n        message: `${I18N_ERRORS_PATH}.SPECIAL_CHARACTERS`\n    };\n}\n\nexport function forbidEndingDot({ value }: FormControl) {\n    const isValid: boolean = ((value || '').trim().split('').pop() !== '.');\n\n    return isValid ? null : {\n        message: `${I18N_ERRORS_PATH}.ENDING_DOT`\n    };\n}\n\nexport function forbidOnlySpaces({ value }: FormControl) {\n    const isValid: boolean = !!((value || '')).trim();\n\n    return isValid ? null : {\n        message: `${I18N_ERRORS_PATH}.ONLY_SPACES`\n    };\n}\n",
    "/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MaterialModule } from '../material.module';\nimport { TranslateModule } from '@ngx-translate/core';\n\nimport { ContentNodeSelectorPanelComponent } from './content-node-selector-panel.component';\nimport { ContentNodeSelectorComponent } from './content-node-selector.component';\nimport { ContentNodeSelectorService } from './content-node-selector.service';\nimport { ContentNodeDialogService } from './content-node-dialog.service';\nimport { SitesDropdownModule } from '../site-dropdown/sites-dropdown.module';\nimport { BreadcrumbModule } from '../breadcrumb/breadcrumb.module';\nimport { PaginationModule, ToolbarModule, DirectiveModule, DataColumnModule, DataTableModule } from '@alfresco/adf-core';\nimport { DocumentListModule } from '../document-list/document-list.module';\nimport { NameLocationCellComponent } from './name-location-cell/name-location-cell.component';\n\n@NgModule({\n    imports: [\n        FormsModule,\n        ReactiveFormsModule,\n        DirectiveModule,\n        CommonModule,\n        MaterialModule,\n        TranslateModule,\n        SitesDropdownModule,\n        BreadcrumbModule,\n        ToolbarModule,\n        DocumentListModule,\n        DataColumnModule,\n        DataTableModule,\n        PaginationModule\n    ],\n    exports: [\n        ContentNodeSelectorPanelComponent,\n        NameLocationCellComponent,\n        ContentNodeSelectorComponent\n    ],\n    entryComponents: [\n        ContentNodeSelectorPanelComponent, ContentNodeSelectorComponent\n    ],\n    declarations: [\n        ContentNodeSelectorPanelComponent,\n        NameLocationCellComponent,\n        ContentNodeSelectorComponent\n    ],\n    providers: [\n        ContentNodeSelectorService,\n        ContentNodeDialogService\n    ]\n})\nexport class ContentNodeSelectorModule {}\n",
    "/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Component, EventEmitter, Input, OnInit, Output, ViewChild, ViewEncapsulation } from '@angular/core';\nimport {\n    AlfrescoApiService, HighlightDirective, UserPreferencesService,\n    PaginatedComponent, PaginationModel\n} from '@alfresco/adf-core';\nimport { FormControl } from '@angular/forms';\nimport { MinimalNodeEntryEntity, NodePaging, Pagination, SiteEntry, SitePaging } from 'alfresco-js-api';\nimport { DocumentListComponent, PaginationStrategy } from '../document-list/components/document-list.component';\nimport { RowFilter } from '../document-list/data/row-filter.model';\nimport { ImageResolver } from '../document-list/data/image-resolver.model';\nimport { ContentNodeSelectorService } from './content-node-selector.service';\nimport { debounceTime } from 'rxjs/operators';\nimport { BehaviorSubject } from 'rxjs/BehaviorSubject';\n\nexport type ValidationFunction = (entry: MinimalNodeEntryEntity) => boolean;\n\nconst defaultValidation = () => true;\n\n@Component({\n    selector: 'adf-content-node-selector-panel',\n    styles: [``],\n    template: `<div class=\"adf-content-node-selector-content\" (node-select)=\"onNodeSelect($event)\">\n    <mat-form-field floatPlaceholder=\"never\" class=\"adf-content-node-selector-content-input\">\n        <input matInput\n            id=\"searchInput\"\n            [formControl]=\"searchInput\"\n            type=\"text\"\n            placeholder=\"{{'NODE_SELECTOR.SEARCH' | translate}}\"\n            [value]=\"searchTerm\"\n            data-automation-id=\"content-node-selector-search-input\">\n\n        <mat-icon *ngIf=\"searchTerm.length > 0\"\n            matSuffix (click)=\"clear()\"\n            class=\"adf-content-node-selector-content-input-icon\"\n            data-automation-id=\"content-node-selector-search-clear\">clear\n        </mat-icon>\n\n        <mat-icon *ngIf=\"searchTerm.length === 0\"\n            matSuffix\n            class=\"adf-content-node-selector-content-input-icon\"\n            data-automation-id=\"content-node-selector-search-icon\">search\n        </mat-icon>\n\n    </mat-form-field>\n\n    <adf-sites-dropdown\n        class=\"full-width\"\n        (change)=\"siteChanged($event)\"\n        [placeholder]=\"'NODE_SELECTOR.SELECT_LOCATION'\"\n        [hideMyFiles]=\"dropdownHideMyFiles\"\n        [siteList]=\"dropdownSiteList\"\n        data-automation-id=\"content-node-selector-sites-combo\">\n    </adf-sites-dropdown>\n\n    <adf-toolbar>\n        <adf-toolbar-title>\n            <ng-container *ngIf=\"!showBreadcrumbs()\">\n                <span class=\"search-results-label\">{{ 'NODE_SELECTOR.SEARCH_RESULTS' | translate }}</span>\n            </ng-container>\n            <adf-dropdown-breadcrumb *ngIf=\"showBreadcrumbs()\"\n                class=\"adf-content-node-selector-content-breadcrumb\"\n                (navigate)=\"clearSearch()\"\n                [target]=\"documentList\"\n                [transform]=\"breadcrumbTransform\"\n                [folderNode]=\"breadcrumbFolderNode\"\n                data-automation-id=\"content-node-selector-content-breadcrumb\">\n            </adf-dropdown-breadcrumb>\n        </adf-toolbar-title>\n    </adf-toolbar>\n\n    <div\n        class=\"adf-content-node-selector-content-list\"\n        [class.adf-content-node-selector-content-list-searchLayout]=\"showingSearchResults\"\n        data-automation-id=\"content-node-selector-content-list\">\n        <adf-document-list\n            #documentList\n            adf-highlight\n            adf-highlight-selector=\"adf-name-location-cell .adf-name-location-cell-name\"\n            [showHeader]=\"false\"\n            [node]=\"nodes\"\n            [maxItems]=\"pageSize\"\n            [rowFilter]=\"rowFilter\"\n            [imageResolver]=\"imageResolver\"\n            [currentFolderId]=\"folderIdToShow\"\n            selectionMode=\"single\"\n            [contextMenuActions]=\"false\"\n            [contentActions]=\"false\"\n            [allowDropFiles]=\"false\"\n            (folderChange)=\"onFolderChange()\"\n            (ready)=\"onFolderLoaded($event)\"\n            (node-dblclick)=\"onNodeDoubleClick($event)\"\n            data-automation-id=\"content-node-selector-document-list\">\n            <empty-folder-content>\n                <ng-template>\n                    <div>{{ 'NODE_SELECTOR.NO_RESULTS' | translate }}</div>\n                </ng-template>\n            </empty-folder-content>\n\n            <data-columns>\n                <data-column key=\"$thumbnail\" type=\"image\"></data-column>\n                <data-column key=\"name\" type=\"text\" class=\"full-width ellipsis-cell\">\n                    <ng-template let-context>\n                        <adf-name-location-cell [row]=\"context.row\"></adf-name-location-cell>\n                    </ng-template>\n                </data-column>\n                <data-column key=\"modifiedAt\" type=\"date\" format=\"timeAgo\" class=\"adf-content-selector-modified-cell\"></data-column>\n                <data-column key=\"modifiedByUser.displayName\" type=\"text\" class=\"adf-content-selector-modifier-cell\"></data-column>\n                <data-column key=\"visibility\" type=\"text\"></data-column>\n            </data-columns>\n\n        </adf-document-list>\n\n        <adf-infinite-pagination\n            [target]=\"documentList\"\n            [loading]=\"loadingSearchResults\"\n            (loadMore)=\"getNextPageOfSearch($event)\"\n            data-automation-id=\"content-node-selector-search-pagination\">\n            {{ 'ADF-DOCUMENT-LIST.LAYOUT.LOAD_MORE' | translate }}\n        </adf-infinite-pagination>\n    </div>\n</div>\n`,\n    encapsulation: ViewEncapsulation.None,\n    host: { 'class': 'adf-content-node-selector-panel' }\n})\nexport class ContentNodeSelectorPanelComponent implements OnInit, PaginatedComponent {\n\n    /** Node ID of the folder currently listed. */\n    @Input()\n    currentFolderId: string = null;\n\n    /** Hide the \"My Files\" option added to the site list by default.\n     * See the [Sites Dropdown component](sites-dropdown.component.md)\n     * for more information.\n     */\n    @Input()\n    dropdownHideMyFiles: boolean = false;\n\n    /** Custom site for site dropdown same as siteList. See the\n     * [Sites Dropdown component](sites-dropdown.component.md)\n     * for more information.\n     */\n    @Input()\n    dropdownSiteList: SitePaging = null;\n\n    /** Custom row filter function. See the\n     * [Document List component](document-list.component.md#custom-row-filter)\n     * for more information.\n     */\n    @Input()\n    rowFilter: RowFilter = null;\n\n    /** Custom image resolver function. See the\n     * [Document List component](document-list.component.md#custom-row-filter)\n     * for more information.\n     */\n    @Input()\n    imageResolver: ImageResolver = null;\n\n    /** Number of items shown per page in the list. */\n    @Input()\n    pageSize: number;\n\n    /** Function used to decide if the selected node has permission to be selected.\n     * Default value is a function that always returns true.\n     */\n    @Input()\n    isSelectionValid: ValidationFunction = defaultValidation;\n\n    /** Transformation to be performed on the chosen/folder node before building the\n     * breadcrumb UI. Can be useful when custom formatting is needed for the breadcrumb.\n     * You can change the path elements from the node that are used to build the\n     * breadcrumb using this function.\n     */\n    @Input()\n    breadcrumbTransform: (node) => any;\n\n    /** Emitted when the user has chosen an item. */\n    @Output()\n    select: EventEmitter<MinimalNodeEntryEntity[]> = new EventEmitter<MinimalNodeEntryEntity[]>();\n\n    @ViewChild('documentList')\n    documentList: DocumentListComponent;\n\n    @ViewChild(HighlightDirective)\n    highlighter: HighlightDirective;\n\n    nodes: NodePaging | null = null;\n    siteId: null | string;\n    searchTerm: string = '';\n    showingSearchResults: boolean = false;\n    loadingSearchResults: boolean = false;\n    inDialog: boolean = false;\n    _chosenNode: MinimalNodeEntryEntity = null;\n    folderIdToShow: string | null = null;\n    paginationStrategy: PaginationStrategy = PaginationStrategy.Infinite;\n    pagination: BehaviorSubject<PaginationModel>;\n\n    skipCount: number = 0;\n    infiniteScroll: boolean = false;\n    debounceSearch: number = 200;\n    searchInput: FormControl = new FormControl();\n\n    constructor(private contentNodeSelectorService: ContentNodeSelectorService,\n                private apiService: AlfrescoApiService,\n                private preferences: UserPreferencesService) {\n        this.searchInput.valueChanges\n            .pipe(\n                debounceTime(this.debounceSearch)\n            )\n            .subscribe((searchValue) => {\n                this.search(searchValue);\n            });\n        this.pageSize = this.preferences.paginationSize;\n\n        let defaultPagination = <PaginationModel> {\n            maxItems: this.pageSize,\n            skipCount: 0,\n            totalItems: 0,\n            hasMoreItems: false\n        };\n        this.pagination = new BehaviorSubject<PaginationModel>(defaultPagination);\n    }\n\n    set chosenNode(value: MinimalNodeEntryEntity) {\n        this._chosenNode = value;\n        let valuesArray = null;\n        if (value) {\n            valuesArray = [value];\n        }\n        this.select.next(valuesArray);\n    }\n\n    get chosenNode() {\n        return this._chosenNode;\n    }\n\n    ngOnInit() {\n        this.folderIdToShow = this.currentFolderId;\n\n        this.breadcrumbTransform = this.breadcrumbTransform ? this.breadcrumbTransform : null;\n        this.isSelectionValid = this.isSelectionValid ? this.isSelectionValid : defaultValidation;\n    }\n\n    /**\n     * Updates the site attribute and starts a new search\n     *\n     * @param chosenSite SiteEntry to search within\n     */\n    siteChanged(chosenSite: SiteEntry): void {\n        this.siteId = chosenSite.entry.guid;\n        this.updateResults();\n    }\n\n    /**\n     * Updates the searchTerm attribute and starts a new search\n     *\n     * @param searchTerm string value to search against\n     */\n    search(searchTerm: string): void {\n        this.searchTerm = searchTerm;\n        this.updateResults();\n    }\n\n    /**\n     * Returns the actually selected|entered folder node or null in case of searching for the breadcrumb\n     */\n    get breadcrumbFolderNode(): MinimalNodeEntryEntity | null {\n        let folderNode: MinimalNodeEntryEntity;\n\n        if (this.showingSearchResults && this.chosenNode) {\n            folderNode = this.chosenNode;\n        } else {\n            folderNode = this.documentList.folderNode;\n        }\n\n        return folderNode;\n    }\n\n    /**\n     * Clear the search input and reset to last folder node in which search was performed\n     */\n    clear(): void {\n        this.clearSearch();\n        this.folderIdToShow = this.siteId || this.currentFolderId;\n    }\n\n    /**\n     * Clear the search input and search related data\n     */\n    clearSearch() {\n        this.searchTerm = '';\n        this.nodes = null;\n        this.skipCount = 0;\n        this.chosenNode = null;\n        this.showingSearchResults = false;\n    }\n\n    /**\n     * Update the result list depending on the criterias\n     */\n    private updateResults(): void {\n        if (this.searchTerm.length === 0) {\n            this.clear();\n        } else {\n            this.startNewSearch();\n        }\n    }\n\n    /**\n     * Load the first page of a new search result\n     */\n    private startNewSearch(): void {\n        this.nodes = null;\n        this.skipCount = 0;\n        this.chosenNode = null;\n        this.folderIdToShow = null;\n        this.querySearch();\n    }\n\n    /**\n     * Loads the next batch of search results\n     *\n     * @param event Pagination object\n     */\n    updatePagination(pagination: Pagination): void {\n        this.infiniteScroll = true;\n        this.skipCount = pagination.skipCount;\n\n        if (this.searchTerm.length > 0) {\n            this.querySearch();\n        }\n    }\n\n    /**\n     * Perform the call to searchService with the proper parameters\n     */\n    private querySearch(): void {\n        this.loadingSearchResults = true;\n\n        if (this.dropdownSiteList) {\n            this.documentList.getCorrespondingNodeIds(this.siteId)\n                .subscribe(nodeIds => {\n                        this.contentNodeSelectorService.search(this.searchTerm, this.siteId, this.skipCount, this.pageSize, nodeIds)\n                            .subscribe(this.showSearchResults.bind(this));\n                    },\n                    () => {\n                        this.showSearchResults({ list: { entries: [] } });\n                    });\n        } else {\n            this.contentNodeSelectorService.search(this.searchTerm, this.siteId, this.skipCount, this.pageSize)\n                .subscribe(this.showSearchResults.bind(this));\n        }\n    }\n\n    /**\n     * Show the results of the search\n     *\n     * @param results Search results\n     */\n    private showSearchResults(nodePaging: NodePaging): void {\n        this.showingSearchResults = true;\n        this.loadingSearchResults = false;\n\n        // Documentlist hack, since data displaying for preloaded nodes is a little bit messy there\n        if (!this.nodes) {\n            this.nodes = nodePaging;\n        } else {\n            this.documentList.data.loadPage(nodePaging, true);\n        }\n\n        this.pagination.next(nodePaging.list.pagination);\n        this.highlight();\n    }\n\n    /**\n     * Hightlight the actual searchterm in the next frame\n     */\n    highlight(): void {\n        setTimeout(() => {\n            this.highlighter.highlight(this.searchTerm);\n        }, 0);\n    }\n\n    /**\n     * Sets showingSearchResults state to be able to differentiate between search results or folder results\n     */\n    onFolderChange(): void {\n        this.showingSearchResults = false;\n        this.infiniteScroll = false;\n        this.clearSearch();\n    }\n\n    /**\n     * Attempts to set the currently loaded node\n     */\n    onFolderLoaded(nodePaging: NodePaging): void {\n        if (!this.showingSearchResults) {\n            this.attemptNodeSelection(this.documentList.folderNode);\n        }\n    }\n\n    /**\n     * Returns whether breadcrumb has to be shown or not\n     */\n    showBreadcrumbs() {\n        return !this.showingSearchResults || this.chosenNode;\n    }\n\n    /**\n     * Loads the next batch of search results\n     *\n     * @param event Pagination object\n     */\n    getNextPageOfSearch(event: Pagination): void {\n        this.infiniteScroll = true;\n        this.skipCount = event.skipCount;\n\n        if (this.searchTerm.length > 0) {\n            this.querySearch();\n        }\n    }\n\n    /**\n     * Selects node as chosen if it has the right permission, clears the selection otherwise\n     *\n     * @param entry\n     */\n    private attemptNodeSelection(entry: MinimalNodeEntryEntity): void {\n        if (this.isSelectionValid(entry)) {\n            this.chosenNode = entry;\n        } else {\n            this.resetChosenNode();\n        }\n    }\n\n    /**\n     * Clears the chosen node\n     */\n    resetChosenNode(): void {\n        this.chosenNode = null;\n    }\n\n    /**\n     * Invoked when user selects a node\n     *\n     * @param event CustomEvent for node-select\n     */\n    onNodeSelect(event: any): void {\n        this.attemptNodeSelection(event.detail.node.entry);\n    }\n\n    onNodeDoubleClick(e: CustomEvent) {\n        const node: any = e.detail.node.entry;\n\n        if (node && node.guid) {\n            const options = {\n                maxItems: this.pageSize,\n                skipCount: this.skipCount,\n                include: ['path', 'properties', 'allowableOperations']\n            };\n\n            this.apiService.nodesApi.getNode(node.guid, options)\n                .then(documentLibrary => {\n                    this.documentList.performCustomSourceNavigation(documentLibrary);\n                });\n        }\n    }\n}\n",
    "/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { SearchService } from '@alfresco/adf-core';\nimport { Injectable } from '@angular/core';\nimport { NodePaging } from 'alfresco-js-api';\nimport { Observable } from 'rxjs/Observable';\n\n/**\n * Internal service used by ContentNodeSelector component.\n */\n@Injectable()\nexport class ContentNodeSelectorService {\n\n    constructor(private searchService: SearchService) {\n    }\n\n    /**\n     * Performs a search for content node selection\n     *\n     * @param searchTerm    The term to search for\n     * @param rootNodeId    The root is to start the search from\n     * @param skipCount     From where to start the loading\n     * @param maxItems      How many items to load\n     * @param [extraNodeIds]  List of extra node ids to search from. This last parameter is necessary when\n     * the rootNodeId is one of the supported aliases (e.g. '-my-', '-root-', '-mysites-', etc.)\n     * and search is not supported for that alias, but can be performed on its corresponding nodes.\n     */\n    public search(searchTerm: string, rootNodeId: string = null, skipCount: number = 0, maxItems: number = 25, extraNodeIds?: string[]): Observable<NodePaging> {\n\n        let extraParentFiltering = '';\n\n        if (extraNodeIds && extraNodeIds.length) {\n            extraNodeIds\n                .filter(id => id !== rootNodeId)\n                .forEach(extraId => {\n                    extraParentFiltering += ` OR ANCESTOR:'workspace://SpacesStore/${extraId}'`;\n                });\n        }\n\n        const parentFiltering = rootNodeId ? [{ query: `ANCESTOR:'workspace://SpacesStore/${rootNodeId}'${extraParentFiltering}` }] : [];\n\n        let defaultSearchNode: any = {\n            query: {\n                query: `${searchTerm}* OR name:${searchTerm}*`\n            },\n            include: ['path', 'allowableOperations'],\n            paging: {\n                maxItems: maxItems,\n                skipCount: skipCount\n            },\n            filterQueries: [\n                { query: \"TYPE:'cm:folder'\" },\n                { query: 'NOT cm:creator:System' },\n                ...parentFiltering\n            ],\n            scope: {\n                locations: ['nodes']\n            }\n        };\n\n        return this.searchService.searchByQueryBody(defaultSearchNode);\n    }\n}\n",
    "/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Input, ChangeDetectionStrategy, Component, OnInit, ViewEncapsulation } from '@angular/core';\nimport { DataRow } from '@alfresco/adf-core';\n\n@Component({\n    selector: 'adf-name-location-cell',\n    template: `\n        <div class=\"adf-name-location-cell-name\">{{ name }}</div>\n        <div class=\"adf-name-location-cell-location\" [title]=\"path\">{{ path }}</div>\n    `,\n    styles: [``],\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    host: { class: 'adf-name-location-cell' }\n})\nexport class NameLocationCellComponent implements OnInit {\n\n    name: string = '';\n    path: string = '';\n\n    @Input()\n    row: DataRow;\n\n    ngOnInit() {\n        if (this.row) {\n            this.name = this.row.getValue('name');\n\n            const fullPath = this.row.getValue('path');\n            if (fullPath) {\n                this.path = fullPath.name || '';\n            }\n        }\n    }\n}\n",
    "/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { MaterialModule } from '../material.module';\nimport { TranslateModule } from '@ngx-translate/core';\n\nimport { VersionUploadComponent } from './version-upload.component';\nimport { VersionManagerComponent } from './version-manager.component';\nimport { VersionListComponent } from './version-list.component';\nimport { UploadModule } from '../upload/upload.module';\n\n@NgModule({\n    imports: [\n        CommonModule,\n        MaterialModule,\n        TranslateModule,\n        UploadModule\n    ],\n    exports: [\n        VersionUploadComponent,\n        VersionManagerComponent,\n        VersionListComponent\n    ],\n    declarations: [\n        VersionUploadComponent,\n        VersionManagerComponent,\n        VersionListComponent\n    ],\n    providers: []\n})\nexport class VersionManagerModule {}\n",
    "/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Component, Input, ViewEncapsulation, Output, EventEmitter } from '@angular/core';\nimport { MinimalNodeEntryEntity } from 'alfresco-js-api';\nimport { ContentService } from '@alfresco/adf-core';\n\n@Component({\n    selector: 'adf-version-upload',\n    template: `<adf-upload-version-button\n    data-automation-id=\"adf-new-version-file-upload\"\n    class=\"adf-new-version-file-upload\"\n    staticTitle=\"{{ 'ADF_VERSION_LIST.ACTIONS.UPLOAD.TITLE' | translate }}\"\n    [node]=\"node\"\n    [disabled]=\"!canUpload()\"\n    [rootFolderId]=\"node.parentId\"\n    tooltip=\"{{ 'ADF_VERSION_LIST.ACTIONS.UPLOAD.TOOLTIP' | translate }}\"\n    [versioning]=\"true\"\n    (success)=\"success.emit($event)\"\n    (error)=\"error.emit($event)\">\n</adf-upload-version-button>\n`,\n    encapsulation: ViewEncapsulation.None,\n    host: { 'class': 'adf-version-upload' }\n})\nexport class VersionUploadComponent {\n\n    @Input()\n    node: MinimalNodeEntryEntity;\n\n    @Output()\n    success = new EventEmitter();\n\n    @Output()\n    error = new EventEmitter();\n\n    constructor(private contentService: ContentService) {\n    }\n\n    canUpload(): boolean {\n        return this.contentService.hasPermission(this.node, 'update');\n    }\n\n}\n",
    "/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Component, Input, ViewEncapsulation, ViewChild, Output, EventEmitter } from '@angular/core';\nimport { MinimalNodeEntryEntity } from 'alfresco-js-api';\nimport { VersionListComponent } from './version-list.component';\nimport { AppConfigService, ContentService } from '@alfresco/adf-core';\n\n@Component({\n    selector: 'adf-version-manager',\n    template: `<div class=\"adf-new-version-uploader-container\" fxLayout=\"row\" fxLayoutAlign=\"end center\">\n    <adf-version-upload\n        [node]=\"node\"\n        (success)=\"onUploadSuccess($event)\"\n        (error)=\"uploadError.emit($event)\">\n    </adf-version-upload>\n</div>\n<div class=\"adf-version-list-container\">\n    <adf-version-list\n        #versionList\n        [node]=\"node\"\n        [allowDownload]=\"allowDownload\"\n        [showComments]=\"showComments\">\n    </adf-version-list>\n</div>\n`,\n    styles: [`.adf-button.upload-new-version{-webkit-box-shadow:none;box-shadow:none}.adf-new-version-uploader-container{border-bottom:1px solid #d8d8d8;padding:16px 0}`],\n    encapsulation: ViewEncapsulation.None\n})\nexport class VersionManagerComponent {\n\n    @Input()\n    node: MinimalNodeEntryEntity;\n\n    @Input()\n    showComments = true;\n\n    @Input()\n    allowDownload = true;\n\n    @Output()\n    uploadSuccess = new EventEmitter();\n\n    @Output()\n    uploadError = new EventEmitter();\n\n    @ViewChild('versionList')\n    versionListComponent: VersionListComponent;\n\n    constructor(\n        config: AppConfigService,\n        private contentService: ContentService) {\n        this.showComments = config.get('adf-version-manager.allowComments', true);\n        this.allowDownload = config.get('adf-version-manager.allowDownload', true);\n    }\n\n    onUploadSuccess(event): void {\n        this.versionListComponent.loadVersionHistory();\n        this.uploadSuccess.emit(event);\n    }\n\n    canUpdate(): boolean {\n        return this.contentService.hasPermission(this.node, 'update');\n    }\n}\n",
    "/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { AlfrescoApiService, ContentService } from '@alfresco/adf-core';\nimport { Component, Input, OnChanges, ViewEncapsulation, ElementRef } from '@angular/core';\nimport { VersionsApi, MinimalNodeEntryEntity } from 'alfresco-js-api';\nimport { MatDialog } from '@angular/material';\nimport { ConfirmDialogComponent } from '../dialogs/confirm.dialog';\n\n@Component({\n    selector: 'adf-version-list',\n    template: `<mat-list class=\"adf-version-list\" *ngIf=\"!isLoading; else loading_template\">\n    <mat-list-item *ngFor=\"let version of versions\">\n        <mat-icon mat-list-icon>insert_drive_file</mat-icon>\n        <h4 mat-line class=\"adf-version-list-item-name\">{{version.entry.name}}</h4>\n        <p mat-line>\n            <span class=\"adf-version-list-item-version\">{{version.entry.id}}</span> -\n            <span class=\"adf-version-list-item-date\">{{version.entry.modifiedAt | date}}</span>\n        </p>\n        <p mat-line class=\"adf-version-list-item-comment\" *ngIf=\"showComments\">{{version.entry.versionComment}}</p>\n\n        <mat-menu #versionMenu=\"matMenu\" yPosition=\"below\" xPosition=\"before\">\n            <button *ngIf=\"canUpdate()\"\n                mat-menu-item\n                (click)=\"restore(version.entry.id)\">\n                {{ 'ADF_VERSION_LIST.ACTIONS.RESTORE' | translate }}\n            </button>\n            <button *ngIf=\"allowDownload\"\n                mat-menu-item\n                (click)=\"downloadVersion(version.entry.id)\">\n                {{ 'ADF_VERSION_LIST.ACTIONS.DOWNLOAD' | translate }}\n            </button>\n            <button *ngIf=\"canUpdate()\"\n                (click)=\"deleteVersion(version.entry.id)\"\n                mat-menu-item>\n                {{ 'ADF_VERSION_LIST.ACTIONS.DELETE' | translate }}\n            </button>\n        </mat-menu>\n\n        <button mat-icon-button [matMenuTriggerFor]=\"versionMenu\">\n            <mat-icon>more_vert</mat-icon>\n        </button>\n    </mat-list-item>\n</mat-list>\n\n<ng-template #loading_template>\n    <mat-progress-bar data-automation-id=\"version-history-loading-bar\" mode=\"indeterminate\" color=\"accent\"></mat-progress-bar>\n</ng-template>\n`,\n    styles: [`.adf-version-list .mat-list-item{border-bottom:1px solid #d8d8d8}.adf-version-list-item-version{font-weight:700}.adf-version-list-item-date{opacity:.6}.adf-version-list-item-comment{opacity:.5}`],\n    encapsulation: ViewEncapsulation.None,\n    host: {\n        'class': 'adf-version-list'\n    }\n})\nexport class VersionListComponent implements OnChanges {\n\n    private versionsApi: VersionsApi;\n    versions: any = [];\n    isLoading = true;\n\n    /** @deprecated in 2.3.0 */\n    @Input()\n    id: string;\n\n    @Input()\n    node: MinimalNodeEntryEntity;\n\n    @Input()\n    showComments = true;\n\n    /** Enable/disable possibility to download a version of the current node. */\n    @Input()\n    allowDownload = true;\n\n    constructor(\n        private alfrescoApi: AlfrescoApiService,\n        private contentService: ContentService,\n        private dialog: MatDialog,\n        private el: ElementRef) {\n        this.versionsApi = this.alfrescoApi.versionsApi;\n    }\n\n    ngOnChanges() {\n        this.loadVersionHistory();\n    }\n\n    canUpdate(): boolean {\n        return this.contentService.hasPermission(this.node, 'update');\n    }\n\n    restore(versionId) {\n        if (this.canUpdate()) {\n            this.versionsApi\n                .revertVersion(this.node.id, versionId, { majorVersion: true, comment: ''})\n                .then(() => this.onVersionRestored());\n        }\n    }\n\n    loadVersionHistory() {\n        this.isLoading = true;\n        this.versionsApi.listVersionHistory(this.node.id).then((data) => {\n            this.versions = data.list.entries;\n            this.isLoading = false;\n        });\n    }\n\n    downloadVersion(versionId: string) {\n        if (this.allowDownload) {\n            const versionDownloadUrl = this.getVersionContentUrl(this.node.id, versionId, true);\n            this.downloadContent(versionDownloadUrl);\n        }\n    }\n\n    deleteVersion(versionId: string) {\n        if (this.canUpdate()) {\n            const dialogRef = this.dialog.open(ConfirmDialogComponent, {\n                data: {\n                    title: 'ADF_VERSION_LIST.CONFIRM_DELETE.TITLE',\n                    message: 'ADF_VERSION_LIST.CONFIRM_DELETE.MESSAGE',\n                    yesLabel: 'ADF_VERSION_LIST.CONFIRM_DELETE.YES_LABEL',\n                    noLabel: 'ADF_VERSION_LIST.CONFIRM_DELETE.NO_LABEL'\n                },\n                minWidth: '250px'\n            });\n\n            dialogRef.afterClosed().subscribe(result => {\n                if (result === true) {\n                    this.alfrescoApi.versionsApi\n                        .deleteVersion(this.node.id, versionId)\n                        .then(() => this.onVersionDeleted());\n                }\n            });\n        }\n    }\n\n    onVersionDeleted() {\n        this.loadVersionHistory();\n\n        const event = new CustomEvent('version-deleted', { bubbles: true });\n        this.el.nativeElement.dispatchEvent(event);\n    }\n\n    onVersionRestored() {\n        this.loadVersionHistory();\n\n        const event = new CustomEvent('version-restored', { bubbles: true });\n        this.el.nativeElement.dispatchEvent(event);\n    }\n\n    private getVersionContentUrl(nodeId: string, versionId: string, attachment?: boolean) {\n        const nodeDownloadUrl = this.alfrescoApi.contentApi.getContentUrl(nodeId, attachment);\n        return nodeDownloadUrl.replace('/content', '/versions/' + versionId + '/content');\n    }\n\n    downloadContent(url: string) {\n        if (url) {\n            const link = document.createElement('a');\n\n            link.style.display = 'none';\n            link.href = url;\n\n            document.body.appendChild(link);\n            link.click();\n            document.body.removeChild(link);\n        }\n    }\n}\n",
    "/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Component, Inject, ViewEncapsulation } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material';\n\n@Component({\n    selector: 'adf-confirm-dialog',\n    template: `\n        <h1 mat-dialog-title>{{ title | translate }}</h1>\n        <mat-dialog-content>\n            <p>{{ message | translate }}</p>\n        </mat-dialog-content>\n        <mat-dialog-actions>\n            <span class=\"spacer\"></span>\n            <button mat-button [mat-dialog-close]=\"true\">{{ yesLabel | translate }}</button>\n            <button mat-button color=\"primary\" [mat-dialog-close]=\"false\" cdkFocusInitial>{{ noLabel | translate }}</button>\n        </mat-dialog-actions>\n    `,\n    styles: [`\n        .spacer { flex: 1 1 auto; }\n\n        .adf-confirm-dialog .mat-dialog-actions .mat-button-wrapper {\n            text-transform: uppercase;\n        }\n    `],\n    host: { 'class': 'adf-confirm-dialog' },\n    encapsulation: ViewEncapsulation.None\n})\nexport class ConfirmDialogComponent {\n\n    title: string;\n    message: string;\n    yesLabel: string;\n    noLabel: string;\n\n    constructor(@Inject(MAT_DIALOG_DATA) data) {\n        data = data || {};\n        this.title = data.title || 'ADF_CONFIRM_DIALOG.CONFIRM';\n        this.message = data.message || 'ADF_CONFIRM_DIALOG.MESSAGE';\n        this.yesLabel = data.yesLabel || 'ADF_CONFIRM_DIALOG.YES_LABEL';\n        this.noLabel = data.noLabel || 'ADF_CONFIRM_DIALOG.NO_LABEL';\n    }\n}\n",
    "/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { MaterialModule } from '../material.module';\nimport { TranslateModule } from '@ngx-translate/core';\n\nimport { BreadcrumbComponent } from './breadcrumb.component';\nimport { DropdownBreadcrumbComponent } from './dropdown-breadcrumb.component';\n\n@NgModule({\n    imports: [\n        CommonModule,\n        MaterialModule,\n        TranslateModule\n    ],\n    exports: [\n        BreadcrumbComponent,\n        DropdownBreadcrumbComponent\n    ],\n    declarations: [\n        BreadcrumbComponent,\n        DropdownBreadcrumbComponent\n    ]\n})\nexport class BreadcrumbModule {}\n",
    "/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Component, OnChanges, SimpleChanges, ViewChild, ViewEncapsulation } from '@angular/core';\nimport { MatSelect } from '@angular/material';\nimport { PathElementEntity } from 'alfresco-js-api';\nimport { BreadcrumbComponent } from './breadcrumb.component';\n\n@Component({\n    selector: 'adf-dropdown-breadcrumb',\n    template: `<ng-container *ngIf=\"route.length > 0\">\n\n    <button\n        tabindex=\"0\"\n        class=\"adf-dropdown-breadcumb-trigger\"\n        (click)=\"open()\"\n        data-automation-id=\"dropdown-breadcrumb-trigger\">\n        <mat-icon [class.isRoot]=\"!hasPreviousNodes()\">folder</mat-icon>\n    </button>\n    <mat-icon class=\"adf-dropdown-breadcrumb-item-chevron\">chevron_right</mat-icon>\n\n    <mat-select\n        #select\n        *ngIf=\"hasPreviousNodes()\"\n        class=\"adf-dropdown-breadcrumb-path\"\n        tabindex=\"0\"\n        data-automation-id=\"dropdown-breadcrumb-path\" >\n\n        <mat-option\n            *ngFor=\"let node of previousNodes;\"\n            (click)=\"onRoutePathClick(node, $event)\"\n            class=\"adf-dropdown-breadcrumb-path-option\"\n            tabindex=\"0\"\n            data-automation-class=\"dropdown-breadcrumb-path-option\">\n            {{ node.name }}\n        </mat-option>\n    </mat-select>\n\n    <span\n        class=\"adf-current-folder\"\n        [class.isRoot]=\"!hasPreviousNodes()\"\n        data-automation-id=\"current-folder\">{{ currentNode.name }}</span>\n</ng-container>\n`,\n    styles: [``],\n    encapsulation: ViewEncapsulation.None,\n    host: {\n        'class': 'adf-dropdown-breadcrumb'\n    }\n})\nexport class DropdownBreadcrumbComponent extends BreadcrumbComponent implements OnChanges {\n\n    @ViewChild('select')\n    selectbox: MatSelect;\n\n    currentNode: PathElementEntity;\n    previousNodes: PathElementEntity[];\n\n    ngOnChanges(changes: SimpleChanges): void {\n        super.ngOnChanges(changes);\n        this.recalculateNodes();\n    }\n\n    /**\n     * Calculate the current and previous nodes from the route array\n     */\n    private recalculateNodes(): void {\n        this.currentNode = this.route[this.route.length - 1];\n        this.previousNodes = this.route.slice(0, this.route.length - 1).reverse();\n    }\n\n    /**\n     * Opens the selectbox overlay\n     */\n    open(): void {\n        if (this.selectbox) {\n            this.selectbox.open();\n        }\n    }\n\n    /**\n     * Return if route has more than one element (means: we are not in the root directory)\n     */\n    hasPreviousNodes(): boolean {\n        return this.previousNodes.length > 0;\n    }\n}\n",
    "/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n    Component,\n    EventEmitter,\n    Input,\n    OnChanges,\n    Output,\n    SimpleChanges,\n    ViewEncapsulation,\n    OnInit\n} from '@angular/core';\nimport { MinimalNodeEntryEntity, PathElementEntity } from 'alfresco-js-api';\nimport { DocumentListComponent } from '../document-list';\n\n@Component({\n    selector: 'adf-breadcrumb',\n    template: `<div *ngIf=\"folderNode\" data-automation-id=\"breadcrumb\" class=\"adf-breadcrumb-container\">\n    <li *ngFor=\"let item of route; let last = last\"\n        [class.active]=\"last\"\n        [ngSwitch]=\"last\"\n        title=\"{{ item.name | translate }}\"\n        class=\"adf-breadcrumb-item\">\n\n        <a *ngSwitchDefault href=\"#\" [attr.data-automation-id]=\"'breadcrumb_' + item.name\"\n           class=\"adf-breadcrumb-item-anchor\"\n           (click)=\"onRoutePathClick(item, $event)\">\n            {{ item.name | translate }}\n        </a>\n\n        <div *ngSwitchCase=\"true\" class=\"adf-breadcrumb-item-current\">\n            {{ item.name | translate }}\n        </div>\n\n        <mat-icon class=\"adf-breadcrumb-item-chevron\" *ngIf=\"!last\">\n            chevron_right\n        </mat-icon>\n    </li>\n</div>\n<div *ngIf=\"!folderNode && hasRoot\">\n    <li class=\"adf-breadcrumb-item\">\n        <div class=\"adf-breadcrumb-item-current\">\n            {{ root | translate }}\n        </div>\n    </li>\n</div>\n`,\n    styles: [``],\n    encapsulation: ViewEncapsulation.None,\n    host: {\n        'class': 'adf-breadcrumb'\n    }\n})\nexport class BreadcrumbComponent implements OnInit, OnChanges {\n\n    /** Active node, builds UI based on folderNode.path.elements collection. */\n    @Input()\n    folderNode: MinimalNodeEntryEntity = null;\n\n    /** (optional) Name of the root element of the breadcrumb. You can use\n     * this property to rename \"Company Home\" to \"Personal Files\" for\n     * example. You can use an i18n resource key for the property value.\n     */\n    @Input()\n    root: string = null;\n\n    /** (optional) The id of the root element. You can use this property\n     * to set a custom element the breadcrumb should start with.\n     */\n    @Input()\n    rootId: string = null;\n\n    /** (optional) Document List component to operate with. The list will\n     * update when the breadcrumb is clicked.\n     */\n    @Input()\n    target: DocumentListComponent;\n\n    /** Transformation to be performed on the chosen/folder node before building\n     * the breadcrumb UI. Can be useful when custom formatting is needed for the\n     * breadcrumb. You can change the path elements from the node that are used to\n     * build the breadcrumb using this function.\n     */\n    @Input()\n    transform: (node) => any;\n\n    route: PathElementEntity[] = [];\n\n    get hasRoot(): boolean {\n        return !!this.root;\n    }\n\n    /** Emitted when the user clicks on a breadcrumb. */\n    @Output()\n    navigate: EventEmitter<PathElementEntity> = new EventEmitter<PathElementEntity>();\n\n    ngOnInit() {\n        this.transform = this.transform ? this.transform : null;\n    }\n\n    ngOnChanges(changes: SimpleChanges): void {\n        if (changes.folderNode) {\n            let node: MinimalNodeEntryEntity = null;\n            node = this.transform ? this.transform(changes.folderNode.currentValue) : changes.folderNode.currentValue;\n            this.route = this.parseRoute(node);\n        }\n\n        if (changes.transform) {\n            let node = this.transform ? this.transform(this.folderNode) : this.folderNode;\n            this.route = this.parseRoute(node);\n        }\n    }\n\n    parseRoute(node: MinimalNodeEntryEntity): PathElementEntity[] {\n        if (node && node.path) {\n            const route = <PathElementEntity[]> (node.path.elements || []).slice();\n\n            route.push(<PathElementEntity> {\n                id: node.id,\n                name: node.name\n            });\n\n            const rootPos = this.getElementPosition(route, this.rootId);\n            if (rootPos > 0) {\n                route.splice(0, rootPos);\n            }\n\n            if (rootPos === -1 && this.rootId) {\n                route[0].id = this.rootId;\n            }\n\n            if (this.root) {\n                route[0].name = this.root;\n            }\n\n            return route;\n        }\n\n        return [];\n    }\n\n    private getElementPosition(route: PathElementEntity[], nodeId: string): number {\n        let result: number = -1;\n\n        if (route && route.length > 0 && nodeId) {\n            result = route.findIndex(el => el.id === nodeId);\n        }\n\n        return result;\n    }\n\n    onRoutePathClick(route: PathElementEntity, event?: Event): void {\n        if (event) {\n            event.preventDefault();\n        }\n\n        if (route) {\n            this.navigate.emit(route);\n\n            if (this.target) {\n                this.target.navigateTo(route.id);\n            }\n        }\n    }\n}\n",
    "/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { MaterialModule } from '../material.module';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { DropdownSitesComponent } from './sites-dropdown.component';\n\n@NgModule({\n    imports: [\n        CommonModule,\n        MaterialModule,\n        TranslateModule,\n        FormsModule,\n        ReactiveFormsModule\n    ],\n    exports: [\n        DropdownSitesComponent\n    ],\n    declarations: [\n        DropdownSitesComponent\n    ]\n})\nexport class SitesDropdownModule {}\n",
    "/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Component, EventEmitter, Input, OnInit, Output, ViewEncapsulation } from '@angular/core';\nimport { SitesService, LogService } from '@alfresco/adf-core';\nimport { SitePaging, SiteEntry } from 'alfresco-js-api';\n\nexport enum Relations {\n    Members = 'members',\n    Containers = 'containers'\n}\n\n@Component({\n    selector: 'adf-sites-dropdown',\n    styles: [`.adf-sites-dropdown.full-width .mat-input-container{width:100%}`],\n    template: `<div id=\"site-dropdown-container\" class=\"adf-site-dropdown-container\">\n    <mat-form-field>\n        <mat-select\n            data-automation-id=\"site-my-files-option\"\n            class=\"adf-site-dropdown-list-element\"\n            id=\"site-dropdown\"\n            placeholder=\"{{placeholder | translate}}\"\n            floatPlaceholder=\"never\"\n            data-automation-id=\"site-my-files-select\"\n            [(value)]=\"selected\"\n            (selectionChange)=\"selectedSite($event)\">\n            <mat-option *ngFor=\"let site of siteList?.list.entries\" [value]=\"site\">\n                {{ site.entry.title | translate}}\n            </mat-option>\n        </mat-select>\n    </mat-form-field>\n</div>\n`,\n    encapsulation: ViewEncapsulation.None,\n    host: { 'class': 'adf-sites-dropdown' }\n})\nexport class DropdownSitesComponent implements OnInit {\n\n    /** Hide the \"My Files\" option. */\n    @Input()\n    hideMyFiles: boolean = false;\n\n    /** A custom list of sites to be displayed by the dropdown. If no value\n     * is given, the sites of the current user are displayed by default. A\n     * list of objects only with properties 'title' and 'guid' is enough to\n     * be able to display the dropdown.\n     */\n    @Input()\n    siteList: SitePaging = null;\n\n    /** Id of the selected site */\n    @Input()\n    value: string = null;\n\n    /** Text or a translation key to act as a placeholder. Default value is the\n     * key \"DROPDOWN.PLACEHOLDER_LABEL\".\n     */\n    @Input()\n    placeholder: string = 'DROPDOWN.PLACEHOLDER_LABEL';\n\n    /** Filter for the results of the sites query. Possible values are\n     * \"members\" and \"containers\". When \"members\" is used, the site list\n     * will be restricted to the sites that the user is a member of.\n     */\n    @Input()\n    relations: string;\n\n    /** Emitted when the user selects a site. When the default option is selected,\n     * an empty model is emitted.\n     */\n    @Output()\n    change: EventEmitter<SiteEntry> = new EventEmitter();\n\n    selected: SiteEntry = null;\n\n    public MY_FILES_VALUE = '-my-';\n\n    constructor(private sitesService: SitesService,\n                private logService: LogService) {\n    }\n\n    ngOnInit() {\n        if (!this.siteList) {\n            this.setDefaultSiteList();\n        }\n    }\n\n    selectedSite(event: any) {\n        this.change.emit(event.value);\n    }\n\n    private setDefaultSiteList() {\n        let extendedOptions = null;\n        if (this.relations) {\n            extendedOptions = { relations: [this.relations] };\n        }\n        this.sitesService.getSites(extendedOptions).subscribe((result) => {\n\n            this.siteList = this.relations === Relations.Members ? this.filteredResultsByMember(result) : result;\n\n            if (!this.hideMyFiles) {\n                let myItem = { entry: { id: '-my-', guid: '-my-', title: 'DROPDOWN.MY_FILES_OPTION' } };\n\n                this.siteList.list.entries.unshift(myItem);\n\n                if (!this.value) {\n                    this.value = '-my-';\n                }\n            }\n\n            this.selected = this.siteList.list.entries.find(site => site.entry.id === this.value);\n        },\n        (error) => {\n            this.logService.error(error);\n        });\n    }\n\n    private filteredResultsByMember(sites: SitePaging): SitePaging {\n        const loggedUserName = this.sitesService.getEcmCurrentLoggedUserName();\n        sites.list.entries = sites.list.entries.filter( (site) => this.isCurrentUserMember(site, loggedUserName));\n        return sites;\n    }\n\n    private isCurrentUserMember(site, loggedUserName): boolean {\n        return site.entry.visibility === 'PUBLIC' ||\n            !!site.relations.members.list.entries.find((member) => {\n                return member.entry.id.toLowerCase() === loggedUserName.toLowerCase();\n            });\n    }\n\n}\n",
    "/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { MaterialModule } from '../material.module';\n\nimport { PipeModule } from '@alfresco/adf-core';\n\nimport { SearchTriggerDirective } from './components/search-trigger.directive';\n\nimport { SearchControlComponent } from './components/search-control.component';\nimport { SearchComponent } from './components/search.component';\nimport { EmptySearchResultComponent } from './components/empty-search-result.component';\nimport { SearchWidgetContainerComponent } from './components/search-widget-container/search-widget-container.component';\nimport { SearchFilterComponent } from './components/search-filter/search-filter.component';\nimport { SearchChipListComponent } from './components/search-chip-list/search-chip-list.component';\n\nexport const ALFRESCO_SEARCH_DIRECTIVES: any[] = [\n    SearchComponent,\n    SearchControlComponent,\n    SearchTriggerDirective,\n    EmptySearchResultComponent,\n    SearchFilterComponent,\n    SearchChipListComponent\n];\n\n@NgModule({\n    imports: [\n        CommonModule,\n        FormsModule,\n        ReactiveFormsModule,\n        MaterialModule,\n        PipeModule,\n        TranslateModule\n    ],\n    declarations: [\n        ...ALFRESCO_SEARCH_DIRECTIVES,\n        SearchWidgetContainerComponent\n    ],\n    exports: [\n        ...ALFRESCO_SEARCH_DIRECTIVES,\n        SearchWidgetContainerComponent\n    ],\n    entryComponents: [\n        SearchWidgetContainerComponent\n    ]\n})\nexport class SearchModule {}\n",
    "/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Component, Input, ViewChild, ViewContainerRef, OnInit, OnDestroy, Compiler, ModuleWithComponentFactories, ComponentRef } from '@angular/core';\nimport { SearchWidgetsModule } from './search-widgets.module';\nimport { SearchQueryBuilderService } from '../../search-query-builder.service';\n\n@Component({\n    selector: 'adf-search-widget-container',\n    template: '<div #content></div>'\n})\nexport class SearchWidgetContainerComponent implements OnInit, OnDestroy {\n\n    @ViewChild('content', { read: ViewContainerRef })\n    content: ViewContainerRef;\n\n    @Input()\n    id: string;\n\n    @Input()\n    selector: string;\n\n    @Input()\n    settings: any;\n\n    @Input()\n    config: any;\n\n    private module: ModuleWithComponentFactories<SearchWidgetsModule>;\n    private componentRef: ComponentRef<any>;\n\n    constructor(compiler: Compiler, private queryBuilder: SearchQueryBuilderService) {\n        this.module = compiler.compileModuleAndAllComponentsSync(SearchWidgetsModule);\n    }\n\n    ngOnInit() {\n        const factory = this.module.componentFactories.find(f => f.selector === this.selector);\n        if (factory) {\n            this.content.clear();\n            this.componentRef = this.content.createComponent(factory, 0);\n            this.setupWidget(this.componentRef);\n        }\n    }\n\n    private setupWidget(ref: ComponentRef<any>) {\n        if (ref && ref.instance) {\n            ref.instance.id = this.id;\n            ref.instance.settings = { ...this.settings };\n            ref.instance.context = this.queryBuilder;\n        }\n    }\n\n    ngOnDestroy() {\n        if (this.componentRef) {\n            this.componentRef.destroy();\n            this.componentRef = null;\n        }\n    }\n\n}\n",
    "/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { NgModule } from '@angular/core';\nimport { MatButtonModule, MatInputModule, MatRadioModule, MatCheckboxModule, MatSelectModule } from '@angular/material';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { CommonModule } from '@angular/common';\nimport { SearchTextComponent } from '../search-text/search-text.component';\nimport { SearchRadioComponent } from '../search-radio/search-radio.component';\nimport { SearchFieldsComponent } from '../search-fields/search-fields.component';\nimport { SearchScopeLocationsComponent } from '../search-scope-locations/search-scope-locations.component';\n\n@NgModule({\n    imports: [\n        CommonModule,\n        FormsModule,\n        ReactiveFormsModule,\n        MatButtonModule,\n        MatInputModule,\n        MatRadioModule,\n        MatCheckboxModule,\n        MatSelectModule\n    ],\n    declarations: [\n        SearchTextComponent,\n        SearchRadioComponent,\n        SearchFieldsComponent,\n        SearchScopeLocationsComponent\n    ],\n    exports: [\n        SearchTextComponent,\n        SearchRadioComponent,\n        SearchFieldsComponent,\n        SearchScopeLocationsComponent\n    ],\n    entryComponents: [\n        SearchTextComponent,\n        SearchRadioComponent,\n        SearchFieldsComponent,\n        SearchScopeLocationsComponent\n    ]\n})\nexport class SearchWidgetsModule {\n}\n",
    "/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Component, ViewEncapsulation, OnInit, Input } from '@angular/core';\nimport { MatSelectChange } from '@angular/material';\n\nimport { SearchWidget } from '../../search-widget.interface';\nimport { SearchWidgetSettings } from '../../search-widget-settings.interface';\nimport { SearchQueryBuilderService } from '../../search-query-builder.service';\n\n@Component({\n    selector: 'adf-search-scope-locations',\n    template: `<mat-form-field>\n    <mat-select\n        [(value)]=\"value\"\n        (selectionChange)=\"changeHandler($event)\">\n        <mat-option\n            *ngFor=\"let option of settings.options\"\n            [value]=\"option.value\">\n            {{option.name}}\n        </mat-option>\n    </mat-select>\n</mat-form-field>\n`,\n    encapsulation: ViewEncapsulation.None,\n    host: { class: 'adf-search-scope-locations' }\n})\nexport class SearchScopeLocationsComponent implements SearchWidget, OnInit {\n\n    @Input()\n    value: string;\n\n    id: string;\n    settings: SearchWidgetSettings;\n    context: SearchQueryBuilderService;\n\n    ngOnInit() {\n\n        const defaultSelection = (this.settings.options || []).find(opt => opt.default);\n        if (defaultSelection) {\n            this.flush(defaultSelection.value);\n        }\n    }\n\n    changeHandler(event: MatSelectChange) {\n        this.flush(event.value);\n    }\n\n    flush(value: string) {\n        this.value = value;\n        this.context.scope.locations = value;\n        this.context.update();\n    }\n}\n",
    "/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Component, ViewEncapsulation, OnInit, Input } from '@angular/core';\nimport { MatCheckboxChange } from '@angular/material';\n\nimport { SearchWidget } from '../../search-widget.interface';\nimport { SearchWidgetSettings } from '../../search-widget-settings.interface';\nimport { SearchQueryBuilderService } from '../../search-query-builder.service';\n\n@Component({\n    selector: 'adf-search-fields',\n    template: `<mat-checkbox\n    *ngFor=\"let option of settings.options\"\n    [checked]=\"option.checked\"\n    (change)=\"changeHandler($event, option)\">\n    {{ option.name }}\n</mat-checkbox>\n`,\n    styles: [`.adf-search-fields{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column}.adf-search-fields .mat-checkbox{margin:5px}`],\n    encapsulation: ViewEncapsulation.None,\n    host: { class: 'adf-search-fields' }\n})\nexport class SearchFieldsComponent implements SearchWidget, OnInit {\n\n    @Input()\n    value: string;\n\n    id: string;\n    settings: SearchWidgetSettings;\n    context: SearchQueryBuilderService;\n\n    ngOnInit() {\n        const defaultOptions = (this.settings.options || [])\n            .filter(opt => opt.default)\n            .map(opt => {\n                opt.checked = true;\n                return opt;\n            });\n\n        if (defaultOptions.length > 0) {\n            this.flush(defaultOptions);\n        }\n    }\n\n    changeHandler(event: MatCheckboxChange, option: any) {\n        option.checked = event.checked;\n        this.flush(this.settings.options);\n    }\n\n    flush(opts: any[] = []) {\n        const checkedValues = opts\n            .filter(v => v.checked)\n            .map(v => v.fields)\n            .reduce((prev, curr) => {\n                return prev.concat(curr);\n            }, []);\n\n        this.context.fields[this.id] = checkedValues;\n        this.context.update();\n    }\n}\n",
    "/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Component, ViewEncapsulation, OnInit, Input } from '@angular/core';\nimport { MatRadioChange } from '@angular/material';\n\nimport { SearchWidget } from '../../search-widget.interface';\nimport { SearchWidgetSettings } from '../../search-widget-settings.interface';\nimport { SearchQueryBuilderService } from '../../search-query-builder.service';\n\n@Component({\n    selector: 'adf-search-radio',\n    template: `<mat-radio-group [(ngModel)]=\"value\" (change)=\"changeHandler($event)\">\n    <mat-radio-button\n        *ngFor=\"let option of settings.options\" [value]=\"option.value\">\n        {{ option.name }}\n    </mat-radio-button>\n</mat-radio-group>\n`,\n    styles: [`.adf-search-radio .mat-radio-group{display:-webkit-inline-box;display:-ms-inline-flexbox;display:inline-flex;-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column}.adf-search-radio .mat-radio-button{margin:5px}`],\n    encapsulation: ViewEncapsulation.None,\n    host: { class: 'adf-search-radio' }\n})\nexport class SearchRadioComponent implements SearchWidget, OnInit {\n\n    @Input()\n    value: string;\n\n    id: string;\n    settings: SearchWidgetSettings;\n    context: SearchQueryBuilderService;\n\n    ngOnInit() {\n        this.setValue(\n            this.getSelectedValue()\n        );\n    }\n\n    private getSelectedValue(): string {\n        const options: any[] = this.settings['options'] || [];\n        if (options && options.length > 0) {\n            let selected = options.find(opt => opt.default);\n            if (!selected) {\n                selected = options[0];\n            }\n            return selected.value;\n        }\n        return null;\n    }\n\n    private setValue(newValue: string) {\n        this.value = newValue;\n        this.context.queryFragments[this.id] = newValue;\n        this.context.update();\n    }\n\n    changeHandler(event: MatRadioChange) {\n        this.setValue(event.value);\n    }\n}\n",
    "/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Component, ViewEncapsulation, OnInit, Input } from '@angular/core';\nimport { SearchWidget } from '../../search-widget.interface';\nimport { SearchWidgetSettings } from '../../search-widget-settings.interface';\nimport { SearchQueryBuilderService } from '../../search-query-builder.service';\n\n@Component({\n    selector: 'adf-search-text',\n    template: `<mat-form-field>\n    <input\n        matInput\n        [placeholder]=\"settings?.placeholder\"\n        [value]=\"value\"\n        (change)=\"onChangedHandler($event)\">\n</mat-form-field>\n`,\n    encapsulation: ViewEncapsulation.None,\n    host: { class: 'adf-search-text' }\n})\nexport class SearchTextComponent implements SearchWidget, OnInit {\n\n    @Input()\n    value = '';\n\n    id: string;\n    settings: SearchWidgetSettings;\n    context: SearchQueryBuilderService;\n\n    ngOnInit() {\n        if (this.context && this.settings) {\n            const pattern = new RegExp(this.settings.pattern, 'g');\n            const match = pattern.exec(this.context.queryFragments[this.id] || '');\n\n            if (match && match.length > 1) {\n                this.value = match[1];\n            }\n        }\n    }\n\n    onChangedHandler(event) {\n        this.value = event.target.value;\n        if (this.value) {\n            this.context.queryFragments[this.id] = `${this.settings.field}:'${this.value}'`;\n            this.context.update();\n        }\n    }\n\n}\n",
    "/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Component, ViewEncapsulation, Input } from '@angular/core';\nimport { SearchFilterComponent } from '../../components/search-filter/search-filter.component';\n\n@Component({\n    selector: 'adf-search-chip-list',\n    template: `<mat-chip-list>\n    <ng-container *ngIf=\"searchFilter && searchFilter.selectedFacetQueries\">\n        <mat-chip\n            *ngFor=\"let label of searchFilter.selectedFacetQueries\"\n            [removable]=\"true\"\n            (remove)=\"searchFilter.unselectFacetQuery(label)\">\n            {{ label }}\n            <mat-icon matChipRemove>cancel</mat-icon>\n        </mat-chip>\n    </ng-container>\n    <ng-container *ngIf=\"searchFilter && searchFilter.selectedBuckets\">\n        <mat-chip\n            *ngFor=\"let bucket of searchFilter.selectedBuckets\"\n            [removable]=\"true\"\n            (remove)=\"searchFilter.unselectFacetBucket(bucket)\">\n            {{ bucket.display || bucket.label }}\n            <mat-icon matChipRemove>cancel</mat-icon>\n        </mat-chip>\n    </ng-container>\n</mat-chip-list>\n`,\n    encapsulation: ViewEncapsulation.None,\n    host: { class: 'adf-search-chip-list' }\n})\nexport class SearchChipListComponent {\n\n    @Input()\n    searchFilter: SearchFilterComponent;\n}\n",
    "/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Component, ViewEncapsulation, OnInit } from '@angular/core';\nimport { MatCheckboxChange } from '@angular/material';\nimport { SearchService } from '@alfresco/adf-core';\nimport { SearchQueryBuilderService } from '../../search-query-builder.service';\nimport { FacetQuery } from '../../facet-query.interface';\nimport { ResponseFacetField } from '../../response-facet-field.interface';\nimport { FacetFieldBucket } from '../../facet-field-bucket.interface';\nimport { SearchCategory } from '../../search-category.interface';\nimport { ResponseFacetQuery } from '../../response-facet-query.interface';\n\n@Component({\n    selector: 'adf-search-filter',\n    template: `<mat-accordion multi=\"true\" displayMode=\"flat\">\n\n    <mat-expansion-panel\n        *ngFor=\"let category of queryBuilder.categories\"\n        [expanded]=\"category.expanded\"\n        (opened)=\"onCategoryExpanded(category)\"\n        (closed)=\"onCategoryCollapsed(category)\">\n        <mat-expansion-panel-header>\n            <mat-panel-title>\n                {{ category.name | translate }}\n            </mat-panel-title>\n        </mat-expansion-panel-header>\n        <adf-search-widget-container\n            [id]=\"category.id\"\n            [selector]=\"category.component.selector\"\n            [settings]=\"category.component.settings\">\n        </adf-search-widget-container>\n    </mat-expansion-panel>\n\n    <mat-expansion-panel>\n        <mat-expansion-panel-header>\n            <mat-panel-title>Facet Queries</mat-panel-title>\n        </mat-expansion-panel-header>\n        <div class=\"checklist\">\n            <ng-container *ngFor=\"let query of responseFacetQueries\">\n                <mat-checkbox\n                    *ngIf=\"query.count > 0\"\n                    [checked]=\"query.$checked\"\n                    (change)=\"onFacetQueryToggle($event, query)\">\n                    {{ query.label }} ({{ query.count }})\n                </mat-checkbox>\n            </ng-container>\n        </div>\n    </mat-expansion-panel>\n\n    <mat-expansion-panel\n        *ngFor=\"let field of responseFacetFields\"\n        [expanded]=\"field.$expanded\"\n        (opened)=\"onFacetFieldExpanded(field)\"\n        (closed)=\"onFacetFieldCollapsed(field)\">\n        <mat-expansion-panel-header>\n            <mat-panel-title>{{ field.label }}</mat-panel-title>\n        </mat-expansion-panel-header>\n        <div class=\"checklist\">\n            <mat-checkbox\n                *ngFor=\"let bucket of field.buckets\"\n                [checked]=\"bucket.$checked\"\n                (change)=\"onFacetToggle($event, field, bucket)\">\n                {{ bucket.display || bucket.label }} ({{ bucket.count }})\n            </mat-checkbox>\n        </div>\n    </mat-expansion-panel>\n\n</mat-accordion>\n`,\n    styles: [`.checklist{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column}.checklist .mat-checkbox{margin:5px}`],\n    encapsulation: ViewEncapsulation.None,\n    host: { class: 'adf-search-filter' }\n})\nexport class SearchFilterComponent implements OnInit {\n\n    selectedFacetQueries: string[] = [];\n    selectedBuckets: FacetFieldBucket[] = [];\n    responseFacetQueries: FacetQuery[] = [];\n    responseFacetFields: ResponseFacetField[] = [];\n\n    constructor(public queryBuilder: SearchQueryBuilderService, private search: SearchService) {\n        this.queryBuilder.updated.subscribe(query => {\n            this.queryBuilder.execute();\n        });\n    }\n\n    ngOnInit() {\n        if (this.queryBuilder) {\n            this.queryBuilder.executed.subscribe(data => {\n                this.onDataLoaded(data);\n                this.search.dataLoaded.next(data);\n            });\n        }\n    }\n\n    onCategoryExpanded(category: SearchCategory) {\n        category.expanded = true;\n    }\n\n    onCategoryCollapsed(category: SearchCategory) {\n        category.expanded = false;\n    }\n\n    onFacetFieldExpanded(field: ResponseFacetField) {\n        field.$expanded = true;\n    }\n\n    onFacetFieldCollapsed(field: ResponseFacetField) {\n        field.$expanded = false;\n    }\n\n    onFacetQueryToggle(event: MatCheckboxChange, query: ResponseFacetQuery) {\n        const facetQuery = this.queryBuilder.getFacetQuery(query.label);\n\n        if (event.checked) {\n            query.$checked = true;\n            this.selectedFacetQueries.push(facetQuery.label);\n\n            if (facetQuery) {\n                this.queryBuilder.addFilterQuery(facetQuery.query);\n            }\n        } else {\n            query.$checked = false;\n            this.selectedFacetQueries = this.selectedFacetQueries.filter(q => q !== query.label);\n\n            if (facetQuery) {\n                this.queryBuilder.removeFilterQuery(facetQuery.query);\n            }\n        }\n\n        this.queryBuilder.update();\n    }\n\n    onFacetToggle(event: MatCheckboxChange, field: ResponseFacetField, bucket: FacetFieldBucket) {\n        if (event.checked) {\n            bucket.$checked = true;\n            this.selectedBuckets.push({ ...bucket });\n            this.queryBuilder.addFilterQuery(bucket.filterQuery);\n        } else {\n            bucket.$checked = false;\n            const idx = this.selectedBuckets.findIndex(\n                b => b.$field === bucket.$field && b.label === bucket.label\n            );\n\n            if (idx >= 0) {\n                this.selectedBuckets.splice(idx, 1);\n            }\n            this.queryBuilder.removeFilterQuery(bucket.filterQuery);\n        }\n\n        this.queryBuilder.update();\n    }\n\n    unselectFacetQuery(label: string) {\n        const facetQuery = this.queryBuilder.getFacetQuery(label);\n        this.selectedFacetQueries = this.selectedFacetQueries.filter(q => q !== label);\n\n        this.queryBuilder.removeFilterQuery(facetQuery.query);\n        this.queryBuilder.update();\n    }\n\n    unselectFacetBucket(bucket: FacetFieldBucket) {\n        if (bucket) {\n            const idx = this.selectedBuckets.findIndex(\n                b => b.$field === bucket.$field && b.label === bucket.label\n            );\n\n            if (idx >= 0) {\n                this.selectedBuckets.splice(idx, 1);\n            }\n            this.queryBuilder.removeFilterQuery(bucket.filterQuery);\n            this.queryBuilder.update();\n        }\n    }\n\n    onDataLoaded(data: any) {\n        const context = data.list.context;\n\n        if (context) {\n            this.responseFacetQueries = (context.facetQueries || []).map(q => {\n                q.$checked = this.selectedFacetQueries.includes(q.label);\n                return q;\n            });\n\n            const expandedFields = this.responseFacetFields.filter(f => f.$expanded).map(f => f.label);\n\n            this.responseFacetFields = (context.facetsFields || []).map(\n                (field: ResponseFacetField) => {\n                    field.$expanded = expandedFields.includes(field.label);\n\n                    (field.buckets || []).forEach(bucket => {\n                        bucket.$field = field.label;\n                        bucket.$checked = false;\n\n                        const previousBucket = this.selectedBuckets.find(\n                            b => b.$field === bucket.$field && b.label === bucket.label\n                        );\n                        if (previousBucket) {\n                           bucket.$checked = true;\n                        }\n                    });\n                    return field;\n                }\n            );\n        } else {\n            this.responseFacetQueries = [];\n            this.responseFacetFields = [];\n        }\n    }\n\n}\n",
    "/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/* tslint:disable: no-input-rename no-use-before-declare no-input-rename  */\n\nimport { ENTER, ESCAPE } from '@angular/cdk/keycodes';\nimport {\n    ChangeDetectorRef,\n    Directive,\n    ElementRef,\n    forwardRef,\n    Inject,\n    Input,\n    NgZone,\n    OnDestroy,\n    Optional\n} from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { DOCUMENT } from '@angular/platform-browser';\nimport { Observable } from 'rxjs/Observable';\nimport { fromEvent } from 'rxjs/observable/fromEvent';\nimport { merge } from 'rxjs/observable/merge';\nimport { Subject } from 'rxjs/Subject';\nimport { Subscription } from 'rxjs/Subscription';\nimport { SearchComponent } from './search.component';\n\nexport const SEARCH_AUTOCOMPLETE_VALUE_ACCESSOR: any = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => SearchTriggerDirective),\n    multi: true\n};\n\n@Directive({\n    selector: `input[searchAutocomplete], textarea[searchAutocomplete]`,\n    host: {\n        'role': 'combobox',\n        'autocomplete': 'off',\n        'aria-autocomplete': 'list',\n        '[attr.aria-expanded]': 'panelOpen.toString()',\n        '[attr.aria-owns]': 'autocomplete?.id',\n        '(blur)': 'onTouched()',\n        '(input)': 'handleInput($event)',\n        '(keydown)': 'handleKeydown($event)'\n    },\n    providers: [SEARCH_AUTOCOMPLETE_VALUE_ACCESSOR]\n})\nexport class SearchTriggerDirective implements ControlValueAccessor, OnDestroy {\n\n    @Input('searchAutocomplete')\n    searchPanel: SearchComponent;\n\n    private _panelOpen: boolean = false;\n    private closingActionsSubscription: Subscription;\n    private escapeEventStream = new Subject<void>();\n\n    onChange: (value: any) => void = () => { };\n\n    onTouched = () => { };\n\n    constructor(private element: ElementRef,\n                private ngZone: NgZone,\n                private changeDetectorRef: ChangeDetectorRef,\n                @Optional() @Inject(DOCUMENT) private document: any) { }\n\n    ngOnDestroy() {\n        if (this.escapeEventStream) {\n            this.escapeEventStream.unsubscribe();\n            this.escapeEventStream = null;\n        }\n        if ( this.closingActionsSubscription ) {\n            this.closingActionsSubscription.unsubscribe();\n        }\n    }\n\n    get panelOpen(): boolean {\n        return this._panelOpen && this.searchPanel.showPanel;\n    }\n\n    openPanel(): void {\n        this.searchPanel.isOpen = this._panelOpen = true;\n        this.closingActionsSubscription = this.subscribeToClosingActions();\n    }\n\n    closePanel(): void {\n        if (this._panelOpen) {\n            this.closingActionsSubscription.unsubscribe();\n            this._panelOpen = false;\n            this.searchPanel.resetResults();\n            this.searchPanel.hidePanel();\n            this.changeDetectorRef.detectChanges();\n        }\n    }\n\n    get panelClosingActions(): Observable<any> {\n        return merge(\n            this.escapeEventStream,\n            this.outsideClickStream\n        );\n    }\n\n    private get outsideClickStream(): Observable<any> {\n        if (!this.document) {\n            return Observable.of(null);\n        }\n\n        return merge(\n            fromEvent(this.document, 'click'),\n            fromEvent(this.document, 'touchend')\n        ).filter((event: MouseEvent | TouchEvent) => {\n            const clickTarget = event.target as HTMLElement;\n            return this._panelOpen &&\n                clickTarget !== this.element.nativeElement;\n        });\n    }\n\n    writeValue(value: any): void {\n        Promise.resolve(null).then(() => this.setTriggerValue(value));\n    }\n\n    registerOnChange(fn: (value: any) => {}): void {\n        this.onChange = fn;\n    }\n\n    registerOnTouched(fn: () => {}) {\n        this.onTouched = fn;\n    }\n\n    handleKeydown(event: KeyboardEvent): void {\n        const keyCode = event.keyCode;\n\n        if (keyCode === ESCAPE && this.panelOpen) {\n            this.escapeEventStream.next();\n            event.stopPropagation();\n        } else if (keyCode === ENTER) {\n            this.escapeEventStream.next();\n            event.preventDefault();\n        }\n\n    }\n\n    handleInput(event: KeyboardEvent): void {\n        if (document.activeElement === event.target) {\n            let inputValue: string = (event.target as HTMLInputElement).value;\n            this.onChange(inputValue);\n            if (inputValue) {\n                this.searchPanel.keyPressedStream.next(inputValue);\n                this.openPanel();\n            } else {\n                this.searchPanel.resetResults();\n                this.closePanel();\n            }\n        }\n    }\n\n    private isPanelOptionClicked(event: MouseEvent) {\n        let isPanelOption: boolean = false;\n        if ( event ) {\n            let clickTarget = event.target as HTMLElement;\n            isPanelOption = !this.isNoResultOption(event) &&\n                            !!this.searchPanel.panel &&\n                            !!this.searchPanel.panel.nativeElement.contains(clickTarget);\n        }\n        return isPanelOption;\n    }\n\n    private isNoResultOption(event: MouseEvent) {\n        return this.searchPanel.results.list ? this.searchPanel.results.list.entries.length === 0 : true;\n    }\n\n    private subscribeToClosingActions(): Subscription {\n        const firstStable = this.ngZone.onStable.asObservable();\n        const optionChanges = this.searchPanel.keyPressedStream.asObservable();\n\n        return merge(firstStable, optionChanges)\n            .switchMap(() => {\n                this.searchPanel.setVisibility();\n                return this.panelClosingActions;\n            })\n            .subscribe(event => this.setValueAndClose(event));\n    }\n\n    private setTriggerValue(value: any): void {\n        const toDisplay = this.searchPanel && this.searchPanel.displayWith ?\n            this.searchPanel.displayWith(value) : value;\n        const inputValue = toDisplay != null ? toDisplay : '';\n        this.element.nativeElement.value = inputValue;\n    }\n\n    private setValueAndClose(event: any | null): void {\n        if (this.isPanelOptionClicked(event)) {\n            this.setTriggerValue(event.target.textContent.trim());\n            this.onChange(event.target.textContent.trim());\n            this.element.nativeElement.focus();\n        }\n        this.closePanel();\n    }\n}\n",
    "/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { AuthenticationService, ThumbnailService } from '@alfresco/adf-core';\nimport { animate, state, style, transition, trigger } from '@angular/animations';\nimport { Component, EventEmitter, Input, OnDestroy, OnInit, Output,\n         QueryList, ViewEncapsulation, ViewChild, ViewChildren, ElementRef, TemplateRef, ContentChild } from '@angular/core';\nimport { MinimalNodeEntity, QueryBody } from 'alfresco-js-api';\nimport { Observable } from 'rxjs/Observable';\nimport { Subject } from 'rxjs/Subject';\nimport { SearchComponent } from './search.component';\nimport { MatListItem } from '@angular/material';\nimport { EmptySearchResultComponent } from './empty-search-result.component';\nimport { debounceTime } from 'rxjs/operators';\n\n@Component({\n    selector: 'adf-search-control',\n    template: `<div class=\"adf-search-container\">\n    <div *ngIf=\"isLoggedIn()\" [@transitionMessages]=\"subscriptAnimationState\" (@transitionMessages.done)=\"applySearchFocus($event)\">\n        <a mat-icon-button\n            *ngIf=\"expandable\"\n            id=\"adf-search-button\"\n            class=\"adf-search-button\"\n            (click)=\"toggleSearchBar($event)\"\n            (keyup.enter)=\"toggleSearchBar($event)\">\n            <mat-icon aria-label=\"search button\">search</mat-icon>\n        </a>\n        <mat-form-field class=\"adf-input-form-field-divider\">\n            <input matInput #searchInput\n                [type]=\"inputType\"\n                [autocomplete]=\"getAutoComplete()\"\n                id=\"adf-control-input\"\n                [(ngModel)]=\"searchTerm\"\n                (focus)=\"activateToolbar($event)\"\n                (blur)=\"onBlur($event)\"\n                (keyup.escape)=\"toggleSearchBar()\"\n                (keyup.arrowdown)=\"selectFirstResult()\"\n                (ngModelChange)=\"inputChange($event)\"\n                [searchAutocomplete]=\"auto\"\n                (keyup.enter)=\"searchSubmit($event)\">\n        </mat-form-field>\n    </div>\n</div>\n\n<adf-search #search\n            #auto=\"searchAutocomplete\"\n            class=\"adf-search-result-autocomplete\"\n            [maxResults]=\"liveSearchMaxResults\"\n            [queryBody]=\"customQueryBody\">\n    <ng-template let-data>\n        <mat-list *ngIf=\"isSearchBarActive()\" id=\"autocomplete-search-result-list\">\n            <mat-list-item\n                *ngFor=\"let item of data?.list?.entries; let idx = index\"\n                id=\"result_option_{{idx}}\"\n                [attr.data-automation-id]=\"'autocomplete_for_' + item.entry.name\"\n                [tabindex]=\"0\"\n                (focus)=\"onFocus($event)\"\n                (blur)=\"onBlur($event)\"\n                (keyup.arrowdown)=\"onRowArrowDown($event)\"\n                (keyup.arrowup)=\"onRowArrowUp($event)\"\n                class=\"adf-search-autocomplete-item\"\n                (click)=\"elementClicked(item)\"\n                (keyup.enter)=\"elementClicked(item)\">\n                <mat-icon mat-list-icon>\n                    <img [src]=\"getMimeTypeIcon(item)\" />\n                </mat-icon>\n                <h4 mat-line id=\"result_name_{{idx}}\"\n                    *ngIf=\"highlight; else elseBlock\"\n                    class=\"adf-search-fixed-text\"\n                    [innerHtml]=\"item.entry.name | highlight: searchTerm\">\n                    {{ item?.entry.name }}\n                </h4>\n                <ng-template #elseBlock>\n                    <h4 class=\"adf-search-fixed-text\" mat-line id=\"result_name_{{idx}}\" [innerHtml]=\"item.entry.name\"></h4>\n                </ng-template>\n                <p mat-line class=\"adf-search-fixed-text\"> {{item?.entry.createdByUser.displayName}} </p>\n            </mat-list-item>\n            <mat-list-item id=\"search_no_result\"\n                data-automation-id=\"search_no_result_found\"\n                *ngIf=\"data?.list?.entries.length === 0\">\n                <ng-content\n                    selector=\"adf-empty-search-result\"\n                    *ngIf=\"isNoSearchTemplatePresent() else defaultNoResult\">\n                </ng-content>\n                <ng-template #defaultNoResult>\n                    <p mat-line class=\"adf-search-fixed-text\">{{ 'SEARCH.RESULTS.NONE' | translate:{searchTerm: searchTerm} }}</p>\n                </ng-template>\n            </mat-list-item>\n        </mat-list>\n    </ng-template>\n</adf-search>\n`,\n    styles: [``],\n    animations: [\n        trigger('transitionMessages', [\n            state('active', style({ transform: 'translateX(0%)', 'margin-left': '13px' })),\n            state('inactive', style({ transform: 'translateX(81%)'})),\n            state('no-animation', style({ transform: 'translateX(0%)', width: '100%' })),\n            transition('inactive => active',\n                animate('300ms cubic-bezier(0.55, 0, 0.55, 0.2)')),\n            transition('active => inactive',\n                animate('300ms cubic-bezier(0.55, 0, 0.55, 0.2)'))\n        ])\n    ],\n    encapsulation: ViewEncapsulation.None,\n    host: { class: 'adf-search-control' }\n})\nexport class SearchControlComponent implements OnInit, OnDestroy {\n\n    /** Toggles whether to use an expanding search control. If false\n     * then a regular input is used.\n     */\n    @Input()\n    expandable: boolean = true;\n\n    /** Toggles highlighting of the search term in the results. */\n    @Input()\n    highlight: boolean = false;\n\n    /** Type of the input field to render, e.g. \"search\" or \"text\" (default). */\n    @Input()\n    inputType: string = 'text';\n\n    /** Toggles auto-completion of the search input field. */\n    @Input()\n    autocomplete: boolean = false;\n\n    /** Toggles \"find-as-you-type\" suggestions for possible matches. */\n    @Input()\n    liveSearchEnabled: boolean = true;\n\n    /** Maximum number of results to show in the live search. */\n    @Input()\n    liveSearchMaxResults: number = 5;\n\n    /** @deprecated in 2.1.0 */\n    @Input()\n    customQueryBody: QueryBody;\n\n    /** Emitted when the search is submitted pressing ENTER button.\n     * The search term is provided as value of the event.\n     */\n    @Output()\n    submit: EventEmitter<any> = new EventEmitter();\n\n    /** Emitted when the search term is changed. The search term is provided\n     * in the 'value' property of the returned object.  If the term is less\n     * than three characters in length then the term is truncated to an empty\n     * string.\n     */\n    @Output()\n    searchChange: EventEmitter<string> = new EventEmitter();\n\n    /** Emitted when a file item from the list of \"find-as-you-type\" results is selected. */\n    @Output()\n    optionClicked: EventEmitter<any> = new EventEmitter();\n\n    @ViewChild('search')\n    searchAutocomplete: SearchComponent;\n\n    @ViewChild('searchInput')\n    searchInput: ElementRef;\n\n    @ViewChildren(MatListItem)\n    private listResultElement: QueryList<MatListItem>;\n\n    @ContentChild(EmptySearchResultComponent)\n    emptySearchTemplate: EmptySearchResultComponent;\n\n    searchTerm: string = '';\n    subscriptAnimationState: string;\n    noSearchResultTemplate: TemplateRef <any> = null;\n\n    private toggleSearch = new Subject<any>();\n    private focusSubject = new Subject<FocusEvent>();\n\n    constructor(public authService: AuthenticationService,\n                private thumbnailService: ThumbnailService) {\n\n        this.toggleSearch.asObservable().pipe(debounceTime(200)).subscribe(() => {\n            if (this.expandable) {\n                this.subscriptAnimationState = this.subscriptAnimationState === 'inactive' ? 'active' : 'inactive';\n\n                if (this.subscriptAnimationState === 'inactive') {\n                    this.searchTerm = '';\n                    this.searchAutocomplete.resetResults();\n                    if ( document.activeElement.id === this.searchInput.nativeElement.id) {\n                        this.searchInput.nativeElement.blur();\n                    }\n                }\n            }\n        });\n    }\n\n    applySearchFocus(animationDoneEvent) {\n        if (animationDoneEvent.toState === 'active') {\n            this.searchInput.nativeElement.focus();\n        }\n    }\n\n    ngOnInit() {\n        this.subscriptAnimationState = this.expandable ? 'inactive' : 'no-animation';\n        this.setupFocusEventHandlers();\n    }\n\n    isNoSearchTemplatePresent(): boolean {\n        return this.emptySearchTemplate ? true : false;\n    }\n\n    ngOnDestroy(): void {\n        if (this.focusSubject) {\n            this.focusSubject.unsubscribe();\n            this.focusSubject = null;\n        }\n\n        if (this.toggleSearch) {\n            this.toggleSearch.unsubscribe();\n            this.toggleSearch = null;\n        }\n    }\n\n    isLoggedIn(): boolean {\n        return this.authService.isEcmLoggedIn();\n    }\n\n    searchSubmit(event: any) {\n        this.submit.emit(event);\n        this.toggleSearchBar();\n    }\n\n    inputChange(event: any) {\n        this.searchChange.emit(event);\n    }\n\n    getAutoComplete(): string {\n        return this.autocomplete ? 'on' : 'off';\n    }\n\n    getMimeTypeIcon(node: MinimalNodeEntity): string {\n        let mimeType;\n\n        if (node.entry.content && node.entry.content.mimeType) {\n            mimeType = node.entry.content.mimeType;\n        }\n        if (node.entry.isFolder) {\n            mimeType = 'folder';\n        }\n\n        return this.thumbnailService.getMimeTypeIcon(mimeType);\n    }\n\n    isSearchBarActive() {\n        return this.subscriptAnimationState === 'active' && this.liveSearchEnabled;\n    }\n\n    toggleSearchBar() {\n        if (this.toggleSearch) {\n            this.toggleSearch.next();\n        }\n    }\n\n    elementClicked(item: any) {\n        if (item.entry) {\n            this.optionClicked.next(item);\n            this.toggleSearchBar();\n        }\n    }\n\n    onFocus($event): void {\n        this.focusSubject.next($event);\n    }\n\n    onBlur($event): void {\n        this.focusSubject.next($event);\n    }\n\n    activateToolbar() {\n        if (!this.isSearchBarActive()) {\n            this.toggleSearchBar();\n        }\n    }\n\n    selectFirstResult() {\n        if ( this.listResultElement && this.listResultElement.length > 0) {\n            let firstElement: MatListItem = <MatListItem> this.listResultElement.first;\n            firstElement._getHostElement().focus();\n        }\n    }\n\n    onRowArrowDown($event: KeyboardEvent): void {\n        let nextElement: any = this.getNextElementSibling(<Element> $event.target);\n        if (nextElement) {\n            nextElement.focus();\n        }\n    }\n\n    onRowArrowUp($event: KeyboardEvent): void {\n        let previousElement: any = this.getPreviousElementSibling(<Element> $event.target);\n        if (previousElement) {\n            previousElement.focus();\n        } else {\n            this.searchInput.nativeElement.focus();\n            this.focusSubject.next(new FocusEvent('focus'));\n        }\n    }\n\n    private setupFocusEventHandlers() {\n        let focusEvents: Observable<FocusEvent> = this.focusSubject.asObservable()\n            .debounceTime(50);\n        focusEvents.filter(($event: any) => {\n            return this.isSearchBarActive() && ($event.type === 'blur' || $event.type === 'focusout');\n        }).subscribe(() => {\n            this.toggleSearchBar();\n        });\n    }\n\n    private getNextElementSibling(node: Element): Element {\n        return node.nextElementSibling;\n    }\n\n    private getPreviousElementSibling(node: Element): Element {\n        return node.previousElementSibling;\n    }\n\n}\n",
    "/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Component, ViewEncapsulation } from '@angular/core';\n\n@Component({\n    selector: 'adf-empty-search-result',\n    template: `<div class=\"adf-empty-search-result\">\n    <ng-content></ng-content>\n</div>\n`,\n    encapsulation: ViewEncapsulation.None\n})\nexport class EmptySearchResultComponent {}\n",
    "/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { SearchService } from '@alfresco/adf-core';\nimport {\n    AfterContentInit,\n    Component,\n    ContentChild,\n    ElementRef,\n    EventEmitter,\n    Input,\n    OnChanges,\n    Output,\n    TemplateRef,\n    ViewChild,\n    ViewEncapsulation\n} from '@angular/core';\nimport { NodePaging, QueryBody } from 'alfresco-js-api';\nimport { Subject } from 'rxjs/Subject';\n\n@Component({\n    selector: 'adf-search',\n    template: `<div role=\"listbox\" id=\"adf-search-results-content\" [ngClass]=\"_classList\" #panel>\n    <ng-template\n        [ngTemplateOutlet]=\"template\"\n        [ngTemplateOutletContext]=\"{ $implicit: results }\">\n    </ng-template>\n</div>\n\n\n`,\n    styles: [``],\n    encapsulation: ViewEncapsulation.None,\n    preserveWhitespaces: false,\n    exportAs: 'searchAutocomplete',\n    host: {\n        'class': 'adf-search'\n    }\n})\nexport class SearchComponent implements AfterContentInit, OnChanges {\n\n    @ViewChild('panel')\n    panel: ElementRef;\n\n    @ContentChild(TemplateRef)\n    template: TemplateRef<any>;\n\n    /** Function that maps an option's value to its display value in the trigger. */\n    @Input()\n    displayWith: ((value: any) => string) | null = null;\n\n    /** Maximum number of results to show in the search. */\n    @Input()\n    maxResults: number = 20;\n\n    /** Number of results to skip from the results pagination. */\n    @Input()\n    skipResults: number = 0;\n\n    /** @deprecated in 2.1.0 */\n    @Input()\n    queryBody: QueryBody;\n\n    /** Search term to use when executing the search. Updating this value will\n     * run a new search and update the results.\n     */\n    @Input()\n    searchTerm: string = '';\n\n    /** CSS class for display. */\n    @Input('class')\n    set classList(classList: string) {\n        if (classList && classList.length) {\n            classList.split(' ').forEach(className => this._classList[className.trim()] = true);\n            this._elementRef.nativeElement.className = '';\n        }\n    }\n\n    /** Emitted when search results have fully loaded. */\n    @Output()\n    resultLoaded: EventEmitter<NodePaging> = new EventEmitter();\n\n    /** Emitted when an error occurs. */\n    @Output()\n    error: EventEmitter<any> = new EventEmitter();\n\n    showPanel: boolean = false;\n    results: NodePaging;\n\n    get isOpen(): boolean {\n        return this._isOpen && this.showPanel;\n    }\n\n    set isOpen(value: boolean) {\n        this._isOpen = value;\n    }\n\n    _isOpen: boolean = false;\n\n    keyPressedStream: Subject<string> = new Subject();\n\n    _classList: { [key: string]: boolean } = {};\n\n    constructor(private searchService: SearchService,\n                private _elementRef: ElementRef) {\n        this.keyPressedStream.asObservable()\n            .debounceTime(200)\n            .subscribe((searchedWord: string) => {\n                this.loadSearchResults(searchedWord);\n            });\n\n        searchService.dataLoaded.subscribe(\n            data => this.onSearchDataLoaded(data),\n            error => this.onSearchDataError(error)\n        );\n    }\n\n    ngAfterContentInit() {\n        this.setVisibility();\n    }\n\n    ngOnChanges(changes) {\n        if (changes.queryBody &&\n            this.hasDifferentQueryBody(changes.queryBody.previousValue, changes.queryBody.currentValue)) {\n            this.loadSearchResults();\n        }\n        if (changes.searchTerm && changes.searchTerm.currentValue) {\n            this.loadSearchResults(changes.searchTerm.currentValue);\n        }\n    }\n\n    resetResults() {\n        this.cleanResults();\n        this.setVisibility();\n    }\n\n    reload() {\n        this.loadSearchResults(this.searchTerm);\n    }\n\n    private hasDifferentQueryBody(previousQueryBody: QueryBody, currentQueryBody: QueryBody) {\n        return JSON.stringify(previousQueryBody) !== JSON.stringify(currentQueryBody);\n    }\n\n    private cleanResults() {\n        if (this.results) {\n            this.results = {};\n        }\n    }\n\n    private loadSearchResults(searchTerm?: string) {\n        this.resetResults();\n        if (searchTerm) {\n            if (this.queryBody) {\n                this.searchService.searchByQueryBody(this.queryBody).subscribe(\n                    result => this.onSearchDataLoaded(result),\n                    err => this.onSearchDataError(err)\n                );\n            } else {\n                this.searchService.search(searchTerm, this.maxResults, this.skipResults).subscribe(\n                    result => this.onSearchDataLoaded(result),\n                    err => this.onSearchDataError(err)\n                );\n            }\n        } else {\n            this.cleanResults();\n        }\n    }\n\n    onSearchDataLoaded(data: NodePaging) {\n        if (data) {\n            this.results = data;\n            this.resultLoaded.emit(this.results);\n            this.isOpen = true;\n            this.setVisibility();\n        }\n    }\n\n    onSearchDataError(error) {\n        if (error && error.status !== 400) {\n            this.results = null;\n            this.error.emit(error);\n        }\n    }\n\n    hidePanel() {\n        if (this.isOpen) {\n            this._classList['adf-search-show'] = false;\n            this._classList['adf-search-hide'] = true;\n            this.isOpen = false;\n        }\n    }\n\n    setVisibility() {\n        this.showPanel = !!this.results && !!this.results.list;\n        this._classList['adf-search-show'] = this.showPanel;\n        this._classList['adf-search-hide'] = !this.showPanel;\n    }\n}\n",
    "/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Injectable } from '@angular/core';\nimport { Subject } from 'rxjs/Subject';\nimport { AlfrescoApiService, AppConfigService } from '@alfresco/adf-core';\nimport { QueryBody } from 'alfresco-js-api';\nimport { SearchCategory } from './search-category.interface';\nimport { FilterQuery } from './filter-query.interface';\nimport { SearchRange } from './search-range.interface';\nimport { SearchConfiguration } from './search-configuration.interface';\nimport { FacetQuery } from './facet-query.interface';\n\n@Injectable()\nexport class SearchQueryBuilderService {\n\n    updated: Subject<QueryBody> = new Subject();\n    executed: Subject<any> = new Subject();\n\n    categories: Array<SearchCategory> = [];\n    queryFragments: { [id: string]: string } = {};\n    fields: { [id: string]: string[] } = {};\n    scope: { locations?: string };\n    filterQueries: FilterQuery[] = [];\n    ranges: { [id: string]: SearchRange } = {};\n    paging: { maxItems?: number; skipCount?: number } = null;\n\n    config: SearchConfiguration;\n\n    constructor(appConfig: AppConfigService,  private api: AlfrescoApiService) {\n        this.config = appConfig.get<SearchConfiguration>('search');\n        if (!this.config) {\n            throw new Error('Search configuration not found.');\n        }\n\n        if (this.config.query && this.config.query.categories) {\n            this.categories = this.config.query.categories.filter(f => f.enabled);\n        }\n\n        this.filterQueries = this.config.filterQueries || [];\n        this.scope = {\n            locations: null\n        };\n    }\n\n    addFilterQuery(query: string): void {\n        if (query) {\n            const existing = this.filterQueries.find(q => q.query === query);\n            if (!existing) {\n                this.filterQueries.push({ query: query });\n            }\n        }\n    }\n\n    removeFilterQuery(query: string): void {\n        if (query) {\n            this.filterQueries = this.filterQueries.filter(f => f.query !== query);\n        }\n    }\n\n    getFacetQuery(label: string): FacetQuery {\n        if (label) {\n            const queries = this.config.facetQueries || [];\n            return queries.find(q => q.label === label);\n        }\n        return null;\n    }\n\n    update(): void {\n        const query = this.buildQuery();\n        this.updated.next(query);\n    }\n\n    async execute() {\n        const query = this.buildQuery();\n        const data = await this.api.searchApi.search(query);\n        this.executed.next(data);\n    }\n\n    buildQuery(): QueryBody {\n        let query = '';\n        const fields: string[] = [];\n\n        this.categories.forEach(facet => {\n            const customQuery = this.queryFragments[facet.id];\n            if (customQuery) {\n                if (query.length > 0) {\n                    query += ' AND ';\n                }\n                query += `(${customQuery})`;\n            }\n\n            const customFields = this.fields[facet.id];\n            if (customFields && customFields.length > 0) {\n                for (const field of customFields) {\n                    if (!fields.includes(field)) {\n                        fields.push(field);\n                    }\n                }\n            }\n        });\n\n        if (query) {\n\n            const result: QueryBody = {\n                query: {\n                    query: query,\n                    language: 'afts'\n                },\n                include: ['path', 'allowableOperations'],\n                fields: fields,\n                paging: this.paging,\n                filterQueries: this.filterQueries,\n                facetQueries: this.config.facetQueries,\n                facetFields: this.config.facetFields,\n                limits: this.config.limits,\n                scope: this.scope\n            };\n\n            return result;\n        }\n\n        return null;\n    }\n}\n",
    "/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { DataTableModule, PaginationModule, ToolbarModule } from '@alfresco/adf-core';\n\nimport { MaterialModule } from '../material.module';\nimport { UploadModule } from '../upload/upload.module';\n\nimport { ContentActionListComponent } from './components/content-action/content-action-list.component';\nimport { ContentActionComponent } from './components/content-action/content-action.component';\nimport { ContentColumnListComponent } from './components/content-column/content-column-list.component';\nimport { ContentColumnComponent } from './components/content-column/content-column.component';\nimport { DocumentListComponent } from './components/document-list.component';\n\nimport { EmptyFolderContentDirective } from './components/empty-folder/empty-folder-content.directive';\nimport { NoPermissionContentDirective } from './components/no-permission/no-permission-content.directive';\n\nimport { DocumentActionsService } from './services/document-actions.service';\nimport { DocumentListService } from './services/document-list.service';\nimport { FolderActionsService } from './services/folder-actions.service';\nimport { NodeActionsService } from './services/node-actions.service';\nimport { CustomResourcesService } from './services/custom-resources.service';\n\n@NgModule({\n    imports: [\n        ToolbarModule,\n        CommonModule,\n        DataTableModule,\n        FlexLayoutModule,\n        MaterialModule,\n        UploadModule,\n        TranslateModule,\n        PaginationModule\n    ],\n    declarations: [\n        DocumentListComponent,\n        ContentColumnComponent,\n        ContentColumnListComponent,\n        ContentActionComponent,\n        ContentActionListComponent,\n        EmptyFolderContentDirective,\n        NoPermissionContentDirective\n    ],\n    providers: [\n        DocumentListService,\n        FolderActionsService,\n        DocumentActionsService,\n        NodeActionsService,\n        CustomResourcesService\n    ],\n    exports: [\n        DocumentListComponent,\n        ContentColumnComponent,\n        ContentColumnListComponent,\n        ContentActionComponent,\n        ContentActionListComponent,\n        EmptyFolderContentDirective,\n        NoPermissionContentDirective\n    ]\n})\nexport class DocumentListModule {}\n",
    "/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { TranslateModule } from '@ngx-translate/core';\n\nimport { MaterialModule } from '../material.module';\nimport { FileUploadingDialogComponent } from './components/file-uploading-dialog.component';\nimport { FileUploadingListRowComponent } from './components/file-uploading-list-row.component';\nimport { FileUploadingListComponent } from './components/file-uploading-list.component';\nimport { UploadButtonComponent } from './components/upload-button.component';\nimport { UploadVersionButtonComponent } from './components/upload-version-button.component';\nimport { UploadDragAreaComponent } from './components/upload-drag-area.component';\n\nimport { PipeModule } from '@alfresco/adf-core';\nimport { FileDraggableDirective } from './directives/file-draggable.directive';\n\n@NgModule({\n    imports: [\n        CommonModule,\n        MaterialModule,\n        TranslateModule,\n        PipeModule\n    ],\n    declarations: [\n        FileDraggableDirective,\n        UploadDragAreaComponent,\n        UploadButtonComponent,\n        UploadVersionButtonComponent,\n        FileUploadingDialogComponent,\n        FileUploadingListComponent,\n        FileUploadingListRowComponent\n    ],\n    exports: [\n        FileDraggableDirective,\n        UploadDragAreaComponent,\n        UploadButtonComponent,\n        UploadVersionButtonComponent,\n        FileUploadingDialogComponent,\n        FileUploadingListComponent,\n        FileUploadingListRowComponent\n    ]\n})\nexport class UploadModule {}\n",
    "/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/* tslint:disable:no-input-rename  */\n\nimport { FileUtils } from '@alfresco/adf-core';\nimport { Directive, ElementRef, EventEmitter, Input, NgZone, OnDestroy, OnInit, Output } from '@angular/core';\n\n@Directive({\n    selector: '[file-draggable]'\n})\nexport class FileDraggableDirective implements OnInit, OnDestroy {\n\n    files: File [];\n\n    /** Enables/disables drag-and-drop functionality. */\n    @Input('file-draggable')\n    enabled: boolean = true;\n\n    /** Emitted when one or more files are dragged and dropped onto the draggable element. */\n    @Output()\n    filesDropped: EventEmitter<File[]> = new EventEmitter<File[]>();\n\n    /** Emitted when one or more files are dragged and dropped onto the draggable element. */\n    @Output()\n    filesEntityDropped: EventEmitter<any> = new EventEmitter();\n\n    /** Emitted when a directory is dragged and dropped onto the draggable element. */\n    @Output()\n    folderEntityDropped: EventEmitter<any> = new EventEmitter();\n\n    private cssClassName: string = 'file-draggable__input-focus';\n    private element: HTMLElement;\n\n    constructor(el: ElementRef, private ngZone: NgZone) {\n        this.element = el.nativeElement;\n    }\n\n    ngOnInit() {\n        this.ngZone.runOutsideAngular(() => {\n            this.element.addEventListener('dragenter', this.onDragEnter.bind(this));\n            this.element.addEventListener('dragover', this.onDragOver.bind(this));\n            this.element.addEventListener('dragleave', this.onDragLeave.bind(this));\n            this.element.addEventListener('drop', this.onDropFiles.bind(this));\n        });\n    }\n\n    ngOnDestroy() {\n        this.element.removeEventListener('dragenter', this.onDragEnter);\n        this.element.removeEventListener('dragover', this.onDragOver);\n        this.element.removeEventListener('dragleave', this.onDragLeave);\n        this.element.removeEventListener('drop', this.onDropFiles);\n    }\n\n    /**\n     * Method called when files is dropped in the drag and drop area.\n     * @param event DOM event.\n     */\n    onDropFiles(event: any): void {\n        if (this.enabled && !event.defaultPrevented) {\n            this.preventDefault(event);\n\n            let items = event.dataTransfer.items;\n            if (items) {\n                for (let i = 0; i < items.length; i++) {\n                    if (typeof items[i].webkitGetAsEntry !== 'undefined') {\n                        let item = items[i].webkitGetAsEntry();\n                        if (item) {\n                            if (item.isFile) {\n                                this.filesEntityDropped.emit(item);\n                            } else if (item.isDirectory) {\n                                this.folderEntityDropped.emit(item);\n                            }\n                        }\n                    } else {\n                        let files = FileUtils.toFileArray(event.dataTransfer.files);\n                        this.filesDropped.emit(files);\n                    }\n                }\n            } else {\n                // safari or FF\n                let files = FileUtils.toFileArray(event.dataTransfer.files);\n                this.filesDropped.emit(files);\n            }\n\n            this.element.classList.remove(this.cssClassName);\n        }\n    }\n\n    /**\n     * Change the style of the drag area when a file drag in.\n     *\n     * @param event - DOM event.\n     */\n    onDragEnter(event: Event): void {\n        if (this.enabled && !event.defaultPrevented) {\n            this.preventDefault(event);\n            this.element.classList.add(this.cssClassName);\n        }\n    }\n\n    /**\n     * Change the style of the drag area when a file drag out.\n     *\n     * @param event - DOM event.\n     */\n    onDragLeave(event: Event): void {\n        if (this.enabled && !event.defaultPrevented) {\n            this.preventDefault(event);\n            this.element.classList.remove(this.cssClassName);\n        }\n    }\n\n    /**\n     * Change the style of the drag area when a file is over the drag area.\n     *\n     * @param event\n     */\n    onDragOver(event: Event): void {\n        if (this.enabled && !event.defaultPrevented) {\n            this.preventDefault(event);\n            this.element.classList.add(this.cssClassName);\n        }\n    }\n\n    /**\n     * Prevent default and stop propagation of the DOM event.\n     *\n     * @param $event - DOM event.\n     */\n    preventDefault(event: Event): void {\n        event.stopPropagation();\n        event.preventDefault();\n    }\n}\n",
    "/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n    EXTENDIBLE_COMPONENT,\n    FileInfo,\n    FileModel,\n    FileUtils,\n    NodePermissionSubject,\n    NotificationService,\n    TranslationService,\n    UploadService\n} from '@alfresco/adf-core';\nimport { Component, EventEmitter, forwardRef, Input, Output, ViewEncapsulation } from '@angular/core';\nimport { UploadBase } from './base-upload/upload-base';\n\n@Component({\n    selector: 'adf-upload-drag-area',\n    template: `<div [file-draggable]=\"isDroppable()\" id=\"UploadBorder\" class=\"upload-border\"\n     (filesDropped)=\"onFilesDropped($event)\"\n     (filesEntityDropped)=\"onFilesEntityDropped($event)\"\n     (folderEntityDropped)=\"onFolderEntityDropped($event)\"\n     (upload-files)=\"onUploadFiles($event)\"\n     dropzone=\"\" webkitdropzone=\"*\" #droparea>\n    <ng-content></ng-content>\n</div>\n`,\n    styles: [`adf-upload-drag-area{overflow:hidden}.upload-border{vertical-align:middle;text-align:center;width:100%;-webkit-box-sizing:border-box;box-sizing:border-box}.file-draggable__input-focus{color:#2196f3;border:1px dashed #2196f3}`],\n    host: {'class': 'adf-upload-drag-area'},\n    viewProviders: [\n        { provide: EXTENDIBLE_COMPONENT, useExisting: forwardRef(() => UploadDragAreaComponent) }\n    ],\n    encapsulation: ViewEncapsulation.None\n})\nexport class UploadDragAreaComponent extends UploadBase implements NodePermissionSubject {\n\n    /** Toggle component disabled state. */\n    @Input()\n    disabled: boolean = false;\n\n    /** When false, renames the file using an integer suffix if there is a name clash.\n     * Set to true to indicate that a major version should be created instead.\n     */\n    @Input()\n    versioning: boolean = false;\n\n    /** ID of parent folder node. */\n    @Input()\n    parentId: string;\n\n    /** Emitted when the file is uploaded. */\n    @Output()\n    success = new EventEmitter();\n\n    /** Raised when the file upload goes in error. */\n    @Output()\n    error = new EventEmitter();\n\n    constructor(private uploadService: UploadService,\n                private translateService: TranslationService,\n                private notificationService: NotificationService) {\n                    super();\n    }\n\n    /**\n     * Method called when files are dropped in the drag area.\n     *\n     * @param files - files dropped in the drag area.\n     */\n    onFilesDropped(files: File[]): void {\n        if (!this.disabled && files.length) {\n            const fileModels = files.map(file => new FileModel(file, {\n                newVersion: this.versioning,\n                path: '/',\n                parentId: this.parentId\n            })).filter(this.isFileAcceptable.bind(this));\n            this.addNodeInUploadQueue(fileModels);\n        }\n    }\n\n    /**\n     * Called when the file are dropped in the drag area\n     *\n     * @param item - FileEntity\n     */\n    onFilesEntityDropped(item: any): void {\n        if (!this.disabled) {\n            item.file((file: File) => {\n                const fileModel = new FileModel(file, {\n                    newVersion: this.versioning,\n                    parentId: this.parentId,\n                    path: item.fullPath.replace(item.name, '')\n                });\n                if (this.isFileAcceptable(fileModel)) {\n                    this.addNodeInUploadQueue([fileModel]);\n                }\n            });\n        }\n    }\n\n    /**\n     * Called when a folder are dropped in the drag area\n     *\n     * @param folder - name of the dropped folder\n     */\n    onFolderEntityDropped(folder: any): void {\n        if (!this.disabled && folder.isDirectory) {\n            FileUtils.flattern(folder).then(entries => {\n                let files = entries.map(entry => {\n                    return new FileModel(entry.file, {\n                        newVersion: this.versioning,\n                        parentId: this.parentId,\n                        path: entry.relativeFolder\n                    });\n                }).filter(this.isFileAcceptable.bind(this));\n                this.addNodeInUploadQueue(files);\n            });\n        }\n    }\n\n    private addNodeInUploadQueue(files: FileModel[]) {\n        if (files.length) {\n            this.uploadService.addToQueue(...files);\n            this.uploadService.uploadFilesInTheQueue(this.success);\n            this.uploadService.fileUploadError.subscribe((error) => {\n                this.error.emit(error);\n                });\n        }\n    }\n\n    /**\n     * Show undo notification bar.\n     *\n     * @param latestFilesAdded - files in the upload queue enriched with status flag and xhr object.\n     */\n    showUndoNotificationBar(latestFilesAdded: FileModel[]) {\n        let messageTranslate: any, actionTranslate: any;\n        messageTranslate = this.translateService.get('FILE_UPLOAD.MESSAGES.PROGRESS');\n        actionTranslate = this.translateService.get('FILE_UPLOAD.ACTION.UNDO');\n\n        this.notificationService.openSnackMessageAction(messageTranslate.value, actionTranslate.value, 3000).onAction().subscribe(() => {\n            this.uploadService.cancelUpload(...latestFilesAdded);\n        });\n    }\n\n    /** Returns true or false considering the component options and node permissions */\n    isDroppable(): boolean {\n        return !this.disabled;\n    }\n\n    /**\n     * Handles 'upload-files' events raised by child components.\n     *\n     * @param event DOM event\n     */\n    onUploadFiles(event: CustomEvent) {\n        event.stopPropagation();\n        event.preventDefault();\n        let isAllowed: boolean = this.hasCreatePermission(event.detail.data.obj.entry);\n        if (isAllowed) {\n            let files: FileInfo[] = event.detail.files;\n            if (files && files.length > 0) {\n                let parentId = this.parentId;\n                if (event.detail.data && event.detail.data.obj.entry.isFolder) {\n                    parentId = event.detail.data.obj.entry.id || this.parentId;\n                }\n                const fileModels = files.map(fileInfo => new FileModel(fileInfo.file, {\n                    newVersion: this.versioning,\n                    path: fileInfo.relativeFolder,\n                    parentId: parentId\n                })).filter(this.isFileAcceptable.bind(this));\n                this.addNodeInUploadQueue(fileModels);\n            }\n        }\n    }\n\n    /**\n     * Check if \"create\" permission is present on the given node\n     *\n     * @param node\n     */\n    private hasCreatePermission(node: any): boolean {\n        let isPermitted = false;\n        if (node && node['allowableOperations']) {\n            let permFound = node['allowableOperations'].find(element => element === 'create');\n            isPermitted = permFound ? true : false;\n        }\n        return isPermitted;\n    }\n}\n",
    "/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Component, forwardRef, Input, OnChanges, SimpleChanges, ViewEncapsulation } from '@angular/core';\nimport { MinimalNodeEntryEntity } from 'alfresco-js-api';\nimport { UploadButtonComponent } from './upload-button.component';\nimport { FileModel, EXTENDIBLE_COMPONENT } from '@alfresco/adf-core';\n\n@Component({\n    selector: 'adf-upload-version-button',\n    template: `<form class=\"adf-upload-button-file-container\">\n    <!--Files Upload-->\n    <a *ngIf=\"!uploadFolders\"\n        [disabled]=\"isButtonDisabled()\"\n        mat-raised-button color=\"primary\">\n        <mat-icon>file_upload</mat-icon>\n\n        <!--Multiple Files Upload-->\n        <span *ngIf=\"multipleFiles\">\n            <label\n                id=\"upload-multiple-file-label\"\n                *ngIf=\"!staticTitle\"\n                for=\"upload-multiple-files\">{{ 'FILE_UPLOAD.BUTTON.UPLOAD_FILE' | translate }}</label>\n            <label\n                id=\"upload-multiple-file-label-static\"\n                *ngIf=\"staticTitle\"\n                for=\"upload-multiple-files\">{{ staticTitle }}</label>\n            <input #uploadFiles\n                id=\"upload-multiple-files\"\n                data-automation-id=\"upload-multiple-files\"\n                type=\"file\"\n                name=\"uploadFiles\"\n                multiple=\"multiple\"\n                accept=\"{{acceptedFilesType}}\"\n                [attr.disabled]=\"isButtonDisabled()\"\n                [title]=\"tooltip\"\n                (change)=\"onFilesAdded($event)\">\n        </span>\n\n        <!--Single Files Upload-->\n        <span *ngIf=\"!multipleFiles\">\n            <label\n                id=\"upload-single-file-label\"\n                *ngIf=\"!staticTitle\"\n                for=\"upload-single-file\">{{ 'FILE_UPLOAD.BUTTON.UPLOAD_FILE' | translate }}</label>\n            <label\n                id=\"upload-single-file-label-static\"\n                *ngIf=\"staticTitle\"\n                for=\"upload-single-file\">{{ staticTitle }}</label>\n            <input #uploadFiles\n                id=\"upload-single-file\"\n                data-automation-id=\"upload-single-file\"\n                type=\"file\"\n                name=\"uploadFiles\"\n                accept=\"{{acceptedFilesType}}\"\n                [attr.disabled]=\"isButtonDisabled()\"\n                [title]=\"tooltip\"\n                (change)=\"onFilesAdded($event)\">\n        </span>\n    </a>\n\n    <!--Folders Upload-->\n    <a *ngIf=\"uploadFolders\"\n        [disabled]=\"isButtonDisabled()\" mat-raised-button color=\"primary\">\n        <mat-icon>file_upload</mat-icon>\n        <label\n            id=\"uploadFolder-label\"\n            *ngIf=\"!staticTitle\"\n            for=\"uploadFolder\">{{ 'FILE_UPLOAD.BUTTON.UPLOAD_FOLDER' | translate }}</label>\n        <label\n            id=\"uploadFolder-label-static\"\n            *ngIf=\"staticTitle\"\n            for=\"uploadFolder\">{{ staticTitle }}</label>\n        <input #uploadFolders\n            id=\"uploadFolder\"\n            data-automation-id=\"uploadFolder\"\n            type=\"file\"\n            name=\"uploadFiles\"\n            multiple=\"multiple\"\n            accept=\"{{acceptedFilesType}}\"\n            webkitdirectory directory\n            [attr.disabled]=\"isButtonDisabled()\"\n            [title]=\"tooltip\"\n            (change)=\"onDirectoryAdded($event)\">\n    </a>\n</form>\n`,\n    styles: [`.adf-upload-button-file-container input{cursor:pointer;height:100%;right:0;opacity:0;position:absolute;top:0;width:300px;z-index:4}`],\n    viewProviders: [\n        { provide: EXTENDIBLE_COMPONENT, useExisting: forwardRef(() => UploadVersionButtonComponent) }\n    ],\n    encapsulation: ViewEncapsulation.None\n})\nexport class UploadVersionButtonComponent extends UploadButtonComponent implements OnChanges {\n\n    /** (**Required**) The node to be versioned. */\n    @Input()\n    node: MinimalNodeEntryEntity;\n\n    ngOnChanges(changes: SimpleChanges) {\n        super.ngOnChanges(changes);\n\n        if (changes['acceptedFilesType']) {\n            const message = this.translateService.instant('FILE_UPLOAD.VERSION.MESSAGES.NO_ACCEPTED_FILE_TYPES');\n            this.logService.error(message);\n        }\n        this.acceptedFilesType = '.' + this.node.name.split('.').pop();\n    }\n\n    protected createFileModel(file: File): FileModel {\n        const fileModel = super.createFileModel(file);\n        fileModel.options.newVersionBaseName = this.node.name;\n\n        if (!this.isFileAcceptable(fileModel)) {\n            const message = this.translateService.instant('FILE_UPLOAD.VERSION.MESSAGES.INCOMPATIBLE_VERSION');\n            this.error.emit(message);\n        }\n\n        return fileModel;\n    }\n}\n",
    "/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ContentService, EXTENDIBLE_COMPONENT, FileModel, FileUtils,\n    LogService, NodePermissionSubject, TranslationService, UploadService\n} from '@alfresco/adf-core';\nimport { Component, EventEmitter, forwardRef, Input,\n    OnChanges, OnInit, Output, SimpleChanges, ViewEncapsulation } from '@angular/core';\nimport { Subject } from 'rxjs/Subject';\nimport { PermissionModel } from '../../document-list/models/permissions.model';\nimport 'rxjs/add/observable/throw';\nimport { UploadBase } from './base-upload/upload-base';\n\n@Component({\n    selector: 'adf-upload-button',\n    template: `<form class=\"adf-upload-button-file-container\">\n    <!--Files Upload-->\n    <a *ngIf=\"!uploadFolders\"\n        [disabled]=\"isButtonDisabled()\"\n        mat-raised-button color=\"primary\">\n        <mat-icon>file_upload</mat-icon>\n\n        <!--Multiple Files Upload-->\n        <span *ngIf=\"multipleFiles\">\n            <label\n                id=\"upload-multiple-file-label\"\n                *ngIf=\"!staticTitle\"\n                for=\"upload-multiple-files\">{{ 'FILE_UPLOAD.BUTTON.UPLOAD_FILE' | translate }}</label>\n            <label\n                id=\"upload-multiple-file-label-static\"\n                *ngIf=\"staticTitle\"\n                for=\"upload-multiple-files\">{{ staticTitle }}</label>\n            <input #uploadFiles\n                id=\"upload-multiple-files\"\n                data-automation-id=\"upload-multiple-files\"\n                type=\"file\"\n                name=\"uploadFiles\"\n                multiple=\"multiple\"\n                accept=\"{{acceptedFilesType}}\"\n                [attr.disabled]=\"isButtonDisabled()\"\n                [title]=\"tooltip\"\n                (change)=\"onFilesAdded($event)\">\n        </span>\n\n        <!--Single Files Upload-->\n        <span *ngIf=\"!multipleFiles\">\n            <label\n                id=\"upload-single-file-label\"\n                *ngIf=\"!staticTitle\"\n                for=\"upload-single-file\">{{ 'FILE_UPLOAD.BUTTON.UPLOAD_FILE' | translate }}</label>\n            <label\n                id=\"upload-single-file-label-static\"\n                *ngIf=\"staticTitle\"\n                for=\"upload-single-file\">{{ staticTitle }}</label>\n            <input #uploadFiles\n                id=\"upload-single-file\"\n                data-automation-id=\"upload-single-file\"\n                type=\"file\"\n                name=\"uploadFiles\"\n                accept=\"{{acceptedFilesType}}\"\n                [attr.disabled]=\"isButtonDisabled()\"\n                [title]=\"tooltip\"\n                (change)=\"onFilesAdded($event)\">\n        </span>\n    </a>\n\n    <!--Folders Upload-->\n    <a *ngIf=\"uploadFolders\"\n        [disabled]=\"isButtonDisabled()\" mat-raised-button color=\"primary\">\n        <mat-icon>file_upload</mat-icon>\n        <label\n            id=\"uploadFolder-label\"\n            *ngIf=\"!staticTitle\"\n            for=\"uploadFolder\">{{ 'FILE_UPLOAD.BUTTON.UPLOAD_FOLDER' | translate }}</label>\n        <label\n            id=\"uploadFolder-label-static\"\n            *ngIf=\"staticTitle\"\n            for=\"uploadFolder\">{{ staticTitle }}</label>\n        <input #uploadFolders\n            id=\"uploadFolder\"\n            data-automation-id=\"uploadFolder\"\n            type=\"file\"\n            name=\"uploadFiles\"\n            multiple=\"multiple\"\n            accept=\"{{acceptedFilesType}}\"\n            webkitdirectory directory\n            [attr.disabled]=\"isButtonDisabled()\"\n            [title]=\"tooltip\"\n            (change)=\"onDirectoryAdded($event)\">\n    </a>\n</form>\n`,\n    styles: [`.adf-upload-button-file-container input{cursor:pointer;height:100%;right:0;opacity:0;position:absolute;top:0;width:300px;z-index:4}`],\n    viewProviders: [\n        { provide: EXTENDIBLE_COMPONENT, useExisting: forwardRef(() => UploadButtonComponent) }\n    ],\n    encapsulation: ViewEncapsulation.None\n})\nexport class UploadButtonComponent extends UploadBase implements OnInit, OnChanges, NodePermissionSubject {\n\n    /** Toggles component disabled state (if there is no node permission checking). */\n    @Input()\n    disabled: boolean = false;\n\n    /** Allows/disallows upload folders (only for Chrome). */\n    @Input()\n    uploadFolders: boolean = false;\n\n    /** Allows/disallows multiple files */\n    @Input()\n    multipleFiles: boolean = false;\n\n    /** Toggles versioning. */\n    @Input()\n    versioning: boolean = false;\n\n    /** Sets a limit on the maximum size (in bytes) of a file to be uploaded.\n     * Has no effect if undefined.\n     */\n    @Input()\n    maxFilesSize: number;\n\n    /** Defines the text of the upload button. */\n    @Input()\n    staticTitle: string;\n\n    /** Custom tooltip text. */\n    @Input()\n    tooltip: string = null;\n\n    /** The ID of the root. Use the nodeId for\n     * Content Services or the taskId/processId for Process Services.\n     */\n    @Input()\n    rootFolderId: string = '-root-';\n\n    /** Emitted when the file is uploaded successfully. */\n    @Output()\n    success = new EventEmitter();\n\n    /** Emitted when an error occurs. */\n    @Output()\n    error = new EventEmitter();\n\n    /** Emitted when a folder is created. */\n    @Output()\n    createFolder = new EventEmitter();\n\n    /** Emitted when delete permission is missing. */\n    @Output()\n    permissionEvent: EventEmitter<PermissionModel> = new EventEmitter<PermissionModel>();\n\n    private hasPermission: boolean = false;\n\n    private permissionValue: Subject<boolean> = new Subject<boolean>();\n\n    constructor(private uploadService: UploadService,\n                private contentService: ContentService,\n                protected translateService: TranslationService,\n                protected logService: LogService\n            ) {\n                super();\n    }\n\n    ngOnInit() {\n        this.permissionValue.subscribe((permission: boolean) => {\n            this.hasPermission = permission;\n        });\n    }\n\n    ngOnChanges(changes: SimpleChanges) {\n        let rootFolderId = changes['rootFolderId'];\n        if (rootFolderId && rootFolderId.currentValue) {\n            this.checkPermission();\n        }\n    }\n\n    isButtonDisabled(): boolean {\n        return this.disabled ? true : undefined;\n    }\n\n    onFilesAdded($event: any): void {\n        let files: File[] = FileUtils.toFileArray($event.currentTarget.files);\n\n        if (this.hasPermission) {\n            this.uploadFiles(files);\n        } else {\n            this.permissionEvent.emit(new PermissionModel({type: 'content', action: 'upload', permission: 'create'}));\n        }\n        // reset the value of the input file\n        $event.target.value = '';\n    }\n\n    onDirectoryAdded($event: any): void {\n        if (this.hasPermission) {\n            let files: File[] = FileUtils.toFileArray($event.currentTarget.files);\n            this.uploadFiles(files);\n        } else {\n            this.permissionEvent.emit(new PermissionModel({type: 'content', action: 'upload', permission: 'create'}));\n        }\n        // reset the value of the input file\n        $event.target.value = '';\n    }\n\n    /**\n     * Upload a list of file in the specified path\n     * @param files\n     * @param path\n     */\n    uploadFiles(files: File[]): void {\n        const latestFilesAdded: FileModel[] = files\n            .map<FileModel>(this.createFileModel.bind(this))\n            .filter(this.isFileAcceptable.bind(this))\n            .filter(this.isFileSizeAcceptable.bind(this));\n\n        if (latestFilesAdded.length > 0) {\n            this.uploadService.addToQueue(...latestFilesAdded);\n            this.uploadService.uploadFilesInTheQueue(this.success);\n        }\n    }\n\n    /**\n     * Creates FileModel from File\n     *\n     * @param file\n     */\n    protected createFileModel(file: File): FileModel {\n        return new FileModel(file, {\n            newVersion: this.versioning,\n            parentId: this.rootFolderId,\n            path: (file.webkitRelativePath || '').replace(/\\/[^\\/]*$/, '')\n        });\n    }\n\n    /**\n     * Checks if the given file is an acceptable size\n     *\n     * @param file FileModel\n     */\n    private isFileSizeAcceptable(file: FileModel): boolean {\n        let acceptableSize = true;\n\n        if (this.isFileSizeAllowed(file)) {\n            acceptableSize = false;\n\n            this.translateService.get('FILE_UPLOAD.MESSAGES.EXCEED_MAX_FILE_SIZE', {fileName: file.name}).subscribe((message: string) => {\n                this.error.emit(message);\n            });\n        }\n\n        return acceptableSize;\n    }\n\n    private isFileSizeAllowed(file: FileModel) {\n        return this.isMaxFileSizeDefined() && this.isFileSizeCorrect(file);\n    }\n\n    private isMaxFileSizeDefined() {\n        return this.maxFilesSize !== undefined && this.maxFilesSize !== null;\n    }\n\n    private isFileSizeCorrect(file: FileModel) {\n        return this.maxFilesSize < 0 || file.size > this.maxFilesSize;\n    }\n\n    checkPermission() {\n        if (this.rootFolderId) {\n            let opts: any = {\n                includeSource: true,\n                include: ['allowableOperations']\n            };\n\n            this.contentService.getNode(this.rootFolderId, opts).subscribe(\n                res => this.permissionValue.next(this.hasCreatePermission(res.entry)),\n                error => this.error.emit(error)\n            );\n        }\n    }\n\n    private hasCreatePermission(node: any): boolean {\n        if (node && node.allowableOperations) {\n            return node.allowableOperations.find(permission => permission === 'create') ? true : false;\n        }\n        return false;\n    }\n}\n",
    "/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { FileModel } from '@alfresco/adf-core';\nimport { Input } from '@angular/core';\n\nexport abstract class UploadBase {\n\n    /** Filter for accepted file types. */\n    @Input()\n    acceptedFilesType: string = '*';\n\n    constructor() {}\n    /**\n     * Checks if the given file is allowed by the extension filters\n     *\n     * @param file FileModel\n     */\n    protected isFileAcceptable(file: FileModel): boolean {\n        if (this.acceptedFilesType === '*') {\n            return true;\n        }\n\n        const allowedExtensions = this.acceptedFilesType\n            .split(',')\n            .map(ext => ext.replace(/^\\./, ''));\n\n        if (allowedExtensions.indexOf(file.extension) !== -1) {\n            return true;\n        }\n\n        return false;\n    }\n}\n",
    "/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { FileModel, FileUploadStatus } from '@alfresco/adf-core';\nimport { Component, EventEmitter, Input, Output } from '@angular/core';\n\n@Component({\n    selector: 'adf-file-uploading-list-row',\n    template: `<div class=\"adf-file-uploading-row\">\n    <mat-icon\n        mat-list-icon\n        class=\"adf-file-uploading-row__type\">\n        insert_drive_file\n    </mat-icon>\n\n    <span\n        class=\"adf-file-uploading-row__name\"\n        title=\"{{ file.name }}\">\n        {{ file.name }}\n    </span>\n\n    <div\n        *ngIf=\"file.status === FileUploadStatus.Progress || file.status === FileUploadStatus.Starting\"\n        (click)=\"onCancel(file)\"\n        class=\"adf-file-uploading-row__group adf-file-uploading-row__group--toggle\"\n        title=\"{{ 'ADF_FILE_UPLOAD.BUTTON.CANCEL_FILE' | translate }}\">\n        <span class=\"adf-file-uploading-row__status\">\n            {{ file.progress.loaded | adfFileSize }} / {{ file.progress.total | adfFileSize }}\n        </span>\n\n        <mat-icon\n            mat-list-icon\n            class=\"adf-file-uploading-row__action adf-file-uploading-row__action--cancel\">\n            clear\n        </mat-icon>\n    </div>\n\n    <div\n        *ngIf=\"file.status === FileUploadStatus.Complete\"\n        (click)=\"onRemove(file)\"\n        class=\"adf-file-uploading-row__group adf-file-uploading-row__group--toggle\"\n        title=\"{{ 'ADF_FILE_UPLOAD.BUTTON.REMOVE_FILE' | translate }}\">\n        <mat-icon\n            mat-list-icon\n            class=\"adf-file-uploading-row__status adf-file-uploading-row__status--done\">\n            check_circle\n        </mat-icon>\n\n        <mat-icon\n            mat-list-icon\n            class=\"adf-file-uploading-row__action adf-file-uploading-row__action--remove\">\n            remove_circle\n        </mat-icon>\n    </div>\n\n    <div\n        *ngIf=\"file.status === FileUploadStatus.Pending\"\n        (click)=\"onCancel(file)\"\n        class=\"adf-file-uploading-row__group adf-file-uploading-row__group--toggle\">\n        <mat-icon\n            mat-list-icon\n            class=\"adf-file-uploading-row__status adf-file-uploading-row__status--pending\">\n            schedule\n        </mat-icon>\n\n        <mat-icon\n            mat-list-icon\n            class=\"adf-file-uploading-row__action adf-file-uploading-row__action--remove\">\n            remove_circle\n        </mat-icon>\n    </div>\n\n    <div\n        *ngIf=\"file.status === FileUploadStatus.Error\"\n        class=\"adf-file-uploading-row__block adf-file-uploading-row__status--error\"\n        title=\"{{ file.response }}\">\n        <mat-icon mat-list-icon>\n            report_problem\n        </mat-icon>\n    </div>\n\n    <div\n        *ngIf=\"file.status === FileUploadStatus.Cancelled  ||\n            file.status === FileUploadStatus.Aborted ||\n            file.status === FileUploadStatus.Deleted\"\n        class=\"adf-file-uploading-row__block adf-file-uploading-row__status--cancelled\">\n        {{ 'ADF_FILE_UPLOAD.STATUS.FILE_CANCELED_STATUS' | translate }}\n    </div>\n<div>`,\n    styles: [``]\n})\nexport class FileUploadingListRowComponent {\n    @Input()\n    file: FileModel;\n\n    @Output()\n    cancel: EventEmitter<FileModel> = new EventEmitter<FileModel>();\n\n    @Output()\n    remove: EventEmitter<FileModel> = new EventEmitter<FileModel>();\n\n    FileUploadStatus = FileUploadStatus;\n\n    onCancel(file: FileModel): void {\n        this.cancel.emit(file);\n    }\n\n    onRemove(file: FileModel): void {\n        this.remove.emit(file);\n    }\n}\n",
    "/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n    FileModel, FileUploadCompleteEvent, FileUploadDeleteEvent,\n    FileUploadErrorEvent, FileUploadStatus, UploadService\n} from '@alfresco/adf-core';\nimport { ChangeDetectorRef, Component, Input, Output, EventEmitter, OnDestroy, OnInit, ViewChild } from '@angular/core';\nimport { Observable } from 'rxjs/Observable';\nimport { Subscription } from 'rxjs/Subscription';\nimport { FileUploadingListComponent } from './file-uploading-list.component';\nimport 'rxjs/add/observable/merge';\n\n// @deprecated file-uploading-dialog TODO remove in 3.0.0\n@Component({\n    selector: 'adf-file-uploading-dialog, file-uploading-dialog',\n    template: `<div *ngIf=\"isDialogActive\"\n     class=\"upload-dialog\"\n     [class.upload-dialog--minimized]=\"isDialogMinimized\"\n     [class.upload-dialog--position-left]=\"position === 'left'\"\n     [class.upload-dialog--position-right]=\"position === 'right'\">\n    <header class=\"upload-dialog__header\">\n        <button\n            mat-button\n            color=\"secondary\"\n            [disabled]=\"isConfirmation\"\n            (click)=\"toggleMinimized()\">\n            <mat-icon\n                mat-list-icon\n                title=\"{{ (isDialogMinimized ? 'ADF_FILE_UPLOAD.BUTTON.MAXIMIZE': 'ADF_FILE_UPLOAD.BUTTON.MINIMIZE') | translate }}\">\n                    {{ isDialogMinimized ? 'keyboard_arrow_up' : 'keyboard_arrow_down' }}\n            </mat-icon>\n        </button>\n\n        <span\n            class=\"upload-dialog__title\"\n            *ngIf=\"!uploadList.isUploadCompleted() && !uploadList.isUploadCancelled()\">\n            {{ 'FILE_UPLOAD.MESSAGES.UPLOAD_PROGRESS'\n                | translate: {\n                    completed: totalCompleted,\n                    total: filesUploadingList.length\n                }\n            }}\n        </span>\n\n        <span\n            class=\"upload-dialog__title\"\n            *ngIf=\"uploadList.isUploadCompleted()\">\n            {{ 'FILE_UPLOAD.MESSAGES.UPLOAD_COMPLETED'\n                | translate: {\n                    completed: totalCompleted,\n                    total: filesUploadingList.length\n                }\n            }}\n        </span>\n\n        <span\n            class=\"upload-dialog__title\"\n            *ngIf=\"uploadList.isUploadCancelled()\">\n            {{ 'FILE_UPLOAD.MESSAGES.UPLOAD_CANCELED' | translate }}\n        </span>\n    </header>\n\n    <section\n        class=\"upload-dialog__info\"\n        *ngIf=\"totalErrors\">\n        {{\n            (totalErrors > 1\n                 ? 'FILE_UPLOAD.MESSAGES.UPLOAD_ERRORS'\n                 : 'FILE_UPLOAD.MESSAGES.UPLOAD_ERROR')\n                 | translate: { total: totalErrors }\n        }}\n    </section>\n\n    <section\n        class=\"upload-dialog__content\"\n        [class.upload-dialog--padding]=\"isConfirmation\">\n        <adf-file-uploading-list\n            (error)=\"onError($event)\"\n            [class.upload-dialog--hide]=\"isConfirmation\"\n            #uploadList\n            [files]=\"filesUploadingList\">\n                <ng-template let-file=\"$implicit\">\n                     <adf-file-uploading-list-row\n                        [file]=\"file\"\n                        (remove)=\"uploadList.removeFile(file)\"\n                        (cancel)=\"uploadList.cancelFile(file)\">\n                    </adf-file-uploading-list-row>\n                </ng-template>\n        </adf-file-uploading-list>\n\n        <div\n            class=\"upload-dialog__confirmation\"\n            [class.upload-dialog--hide]=\"!isConfirmation\">\n                <p class=\"upload-dialog__confirmation--title\">\n                    {{ 'ADF_FILE_UPLOAD.CONFIRMATION.MESSAGE.TITLE' | translate }}\n                </p>\n\n                <p class=\"upload-dialog__confirmation--text\">\n                    {{ 'ADF_FILE_UPLOAD.CONFIRMATION.MESSAGE.TEXT' | translate }}\n                </p>\n        </div>\n    </section>\n\n    <footer\n        class=\"upload-dialog__actions\"\n        [class.upload-dialog--hide]=\"isConfirmation\">\n        <button\n            color=\"primary\"\n            mat-button\n            *ngIf=\"!uploadList.isUploadCompleted() && !uploadList.isUploadCancelled()\"\n            (click)=\"toggleConfirmation()\">\n            {{ 'ADF_FILE_UPLOAD.BUTTON.CANCEL_ALL' | translate }}\n        </button>\n\n        <button\n            *ngIf=\"uploadList.isUploadCompleted() || uploadList.isUploadCancelled()\"\n            mat-button\n            color=\"primary\"\n            (click)=\"close($event)\">\n            {{ 'ADF_FILE_UPLOAD.BUTTON.CLOSE' | translate }}\n        </button>\n    </footer>\n\n    <footer\n        class=\"upload-dialog__actions\"\n        [class.upload-dialog--hide]=\"!isConfirmation\">\n        <button\n            color=\"secondary\"\n            mat-button\n            (click)=\"cancelAllUploads()\">\n            {{ 'ADF_FILE_UPLOAD.CONFIRMATION.BUTTON.CANCEL' | translate }}\n        </button>\n\n        <button\n            mat-button\n            color=\"primary\"\n            (click)=\"toggleConfirmation()\">\n            {{ 'ADF_FILE_UPLOAD.CONFIRMATION.BUTTON.CONTINUE' | translate }}\n        </button>\n    </footer>\n</div>\n`,\n    styles: [``]\n})\nexport class FileUploadingDialogComponent implements OnInit, OnDestroy {\n    @ViewChild('uploadList')\n    uploadList: FileUploadingListComponent;\n\n    /** Dialog position. Can be 'left' or 'right'. */\n    @Input()\n    position: string = 'right';\n\n    /** Emitted when a file in the list has an error. */\n    @Output()\n    error: EventEmitter<any> = new EventEmitter();\n\n    filesUploadingList: FileModel[] = [];\n    isDialogActive: boolean = false;\n    totalCompleted: number = 0;\n    totalErrors: number = 0;\n    isDialogMinimized: boolean = false;\n    isConfirmation: boolean = false;\n\n    private listSubscription: Subscription;\n    private counterSubscription: Subscription;\n    private fileUploadSubscription: Subscription;\n    private errorSubscription: Subscription;\n\n    constructor(private uploadService: UploadService,\n                private changeDetecor: ChangeDetectorRef) {\n    }\n\n    ngOnInit() {\n        this.listSubscription = this.uploadService\n            .queueChanged.subscribe((fileList: FileModel[]) => {\n                this.filesUploadingList = fileList;\n\n                if (this.filesUploadingList.length) {\n                    this.isDialogActive = true;\n                }\n            });\n\n        this.counterSubscription = Observable\n            .merge(\n                this.uploadService.fileUploadComplete,\n                this.uploadService.fileUploadDeleted\n            )\n            .subscribe((event: (FileUploadDeleteEvent | FileUploadCompleteEvent)) => {\n                this.totalCompleted = event.totalComplete;\n                this.changeDetecor.detectChanges();\n            });\n\n        this.errorSubscription = this.uploadService.fileUploadError\n            .subscribe((event: FileUploadErrorEvent) => {\n                this.totalErrors = event.totalError;\n                this.changeDetecor.detectChanges();\n            });\n\n        this.fileUploadSubscription = this.uploadService\n            .fileUpload.subscribe(() => {\n                this.changeDetecor.detectChanges();\n            });\n\n        this.uploadService.fileDeleted.subscribe((objId) => {\n            if (this.filesUploadingList) {\n                let file = this.filesUploadingList.find((item) => {\n                    return item.data.entry.id === objId;\n                });\n                if (file) {\n                    file.status = FileUploadStatus.Cancelled;\n                    this.changeDetecor.detectChanges();\n                }\n            }\n        });\n    }\n\n    /**\n     * Toggle confirmation message.\n     */\n    toggleConfirmation() {\n        this.isConfirmation = !this.isConfirmation;\n\n        if (this.isDialogMinimized) {\n            this.isDialogMinimized = false;\n        }\n    }\n\n    /**\n     * Cancel uploads and hide confiramtion\n     */\n    cancelAllUploads() {\n        this.toggleConfirmation();\n\n        this.uploadList.cancelAllFiles();\n    }\n\n    /**\n     * Toggle dialog minimized state.\n     */\n    toggleMinimized(): void {\n        this.isDialogMinimized = !this.isDialogMinimized;\n        this.changeDetecor.detectChanges();\n    }\n\n    /**\n     * Dismiss dialog\n     */\n    close(): void {\n        this.isConfirmation = false;\n        this.totalCompleted = 0;\n        this.totalErrors = 0;\n        this.filesUploadingList = [];\n        this.isDialogActive = false;\n        this.isDialogMinimized = false;\n        this.uploadService.clearQueue();\n        this.changeDetecor.detectChanges();\n    }\n\n    ngOnDestroy() {\n        this.uploadService.clearQueue();\n        this.listSubscription.unsubscribe();\n        this.counterSubscription.unsubscribe();\n        this.fileUploadSubscription.unsubscribe();\n        this.errorSubscription.unsubscribe();\n    }\n}\n",
    "/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { FileModel, FileUploadStatus, NodesApiService, TranslationService, UploadService } from '@alfresco/adf-core';\nimport { Component, ContentChild, Input, Output, TemplateRef, EventEmitter } from '@angular/core';\nimport { Observable } from 'rxjs/Observable';\n\n@Component({\n    selector: 'adf-file-uploading-list',\n    template: `<div class=\"upload-list\">\n    <ng-template\n        ngFor\n        [ngForOf]=\"files\"\n        [ngForTemplate]=\"template\">\n    </ng-template>\n</div>\n`,\n    styles: [`:host{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column}`]\n})\nexport class FileUploadingListComponent {\n\n    FileUploadStatus = FileUploadStatus;\n\n    @ContentChild(TemplateRef)\n    template: any;\n\n    @Input()\n    files: FileModel[] = [];\n\n    /** Emitted when a file in the list has an error. */\n    @Output()\n    error: EventEmitter<any> = new EventEmitter();\n\n    constructor(\n        private uploadService: UploadService,\n        private nodesApi: NodesApiService,\n        private translateService: TranslationService) {\n    }\n\n    /**\n     * Cancel file upload\n     *\n     * @param file File model to cancel upload for.\n     *\n     * @memberOf FileUploadingListComponent\n     */\n    cancelFile(file: FileModel): void {\n        this.uploadService.cancelUpload(file);\n    }\n\n    removeFile(file: FileModel): void {\n        this.deleteNode(file)\n            .subscribe(() => {\n                if ( file.status === FileUploadStatus.Error) {\n                    this.notifyError(file);\n                }\n\n                this.uploadService.cancelUpload(file);\n            });\n    }\n\n    /**\n     * Call the appropriate method for each file, depending on state\n     */\n    cancelAllFiles(): void {\n        this.getUploadingFiles()\n            .forEach((file) => this.uploadService.cancelUpload(file));\n\n        const deletedFiles = this.files\n            .filter((file) => file.status === FileUploadStatus.Complete)\n            .map((file) => this.deleteNode(file));\n\n        Observable.forkJoin(...deletedFiles)\n            .subscribe((files: FileModel[]) => {\n                const errors = files\n                    .filter((file) => file.status === FileUploadStatus.Error);\n\n                if (errors.length) {\n                    this.notifyError(...errors);\n                }\n\n                this.uploadService.cancelUpload(...files);\n            });\n    }\n\n    /**\n     * Checks if all the files are uploaded false if there is at least one file in Progress | Starting | Pending\n     */\n    isUploadCompleted(): boolean {\n         return !this.isUploadCancelled() &&\n            Boolean(this.files.length) &&\n            !this.files\n                .some(({status}) =>\n                    status === FileUploadStatus.Starting ||\n                    status === FileUploadStatus.Progress ||\n                    status === FileUploadStatus.Pending\n                );\n    }\n\n    /**\n     * Check if all the files are Cancelled | Aborted | Error. false if there is at least one file in uploading states\n     */\n    isUploadCancelled(): boolean {\n        return !!this.files.length &&\n            this.files\n                .every(({status}) =>\n                    status === FileUploadStatus.Aborted ||\n                    status === FileUploadStatus.Cancelled ||\n                    status === FileUploadStatus.Deleted\n                );\n    }\n\n    private deleteNode(file: FileModel): Observable<FileModel> {\n        const { id } = file.data.entry;\n\n        return this.nodesApi\n            .deleteNode(id, { permanent: true })\n            .map(() => {\n                file.status = FileUploadStatus.Deleted;\n                return file;\n            })\n            .catch((error) => {\n                file.status = FileUploadStatus.Error;\n                return Observable.of(file);\n            });\n    }\n\n    private notifyError(...files: FileModel[]) {\n        let messageError: string = null;\n\n        if (files.length === 1) {\n            messageError = this.translateService\n                .instant(\n                    'FILE_UPLOAD.MESSAGES.REMOVE_FILE_ERROR',\n                    { fileName: files[0].name}\n                );\n        } else {\n            messageError = this.translateService\n                .instant(\n                    'FILE_UPLOAD.MESSAGES.REMOVE_FILES_ERROR',\n                    { total: files.length }\n                );\n        }\n\n        this.error.emit(messageError);\n    }\n\n    private getUploadingFiles() {\n        return this.files.filter((item) => {\n            if (\n                item.status === FileUploadStatus.Pending ||\n                item.status === FileUploadStatus.Progress ||\n                item.status === FileUploadStatus.Starting\n            ) {\n                return item;\n            }\n        });\n    }\n}\n",
    "/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { PermissionsEnum } from '@alfresco/adf-core';\n\nexport class PermissionStyleModel {\n    css: string;\n    permission: PermissionsEnum;\n    isFolder: boolean = true;\n    isFile: boolean = true;\n\n    constructor(css: string, permission: PermissionsEnum, isFile: boolean = true, isFolder: boolean = true) {\n        this.css = css;\n        this.permission = permission;\n        this.isFile = isFile;\n        this.isFolder = isFolder;\n    }\n}\n",
    "/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n// note: contains only limited subset of available fields\n\nimport { MinimalNodeEntity, MinimalNodeEntryEntity } from 'alfresco-js-api';\n\nexport class NodePaging {\n    list: NodePagingList;\n}\n\nexport class NodePagingList {\n    pagination: Pagination;\n    entries: NodeMinimalEntry[];\n}\n\nexport class NodeMinimalEntry implements MinimalNodeEntity {\n    entry: NodeMinimal;\n}\n\nexport class Pagination {\n    count: number;\n    hasMoreItems: boolean;\n    totalItems: number;\n    skipCount: number;\n    maxItems: number;\n}\n\nexport class NodeMinimal implements MinimalNodeEntryEntity {\n    id: string;\n    parentId: string;\n    name: string;\n    nodeType: string;\n    isFolder: boolean;\n    isFile: boolean;\n    modifiedAt: Date;\n    modifiedByUser: UserInfo;\n    createdAt: Date;\n    createdByUser: UserInfo;\n    content: ContentInfo;\n    path: PathInfoEntity;\n    properties: NodeProperties = {};\n}\n\nexport class UserInfo {\n    displayName: string;\n    id: string;\n}\n\nexport class ContentInfo {\n    mimeType: string;\n    mimeTypeName: string;\n    sizeInBytes: number;\n    encoding: string;\n}\n\nexport class PathInfoEntity {\n    elements: PathElementEntity[];\n    isComplete: boolean;\n    name: string;\n}\n\nexport class PathElementEntity {\n    id: string;\n    name: string;\n}\n\nexport interface NodeProperties {\n    [key: string]: any;\n}\n",
    "/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { AfterContentInit, ContentChild, Directive, TemplateRef } from '@angular/core';\nimport { DocumentListComponent } from './../document-list.component';\n\n@Directive({\n    selector: 'no-permission-content'\n})\nexport class NoPermissionContentDirective implements AfterContentInit {\n\n    @ContentChild(TemplateRef)\n    template: any;\n\n    constructor(private documentList: DocumentListComponent) {\n    }\n\n    ngAfterContentInit() {\n        this.documentList.noPermissionTemplate = this.template;\n        this.documentList.dataTable.noPermissionTemplate = this.template;\n    }\n}\n",
    "/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { AfterContentInit, ContentChild, Directive, TemplateRef } from '@angular/core';\nimport { DocumentListComponent } from './../document-list.component';\n\n@Directive({\n    selector: 'empty-folder-content'\n})\nexport class EmptyFolderContentDirective implements AfterContentInit {\n\n    @ContentChild(TemplateRef)\n    template: any;\n\n    constructor(private documentList: DocumentListComponent) {\n    }\n\n    ngAfterContentInit() {\n        this.documentList.emptyFolderTemplate = this.template;\n        this.documentList.dataTable.noContentTemplate = this.template;\n    }\n}\n",
    "/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n /* tslint:disable:component-selector  */\n\nimport { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\n\nimport { ContentActionHandler } from '../../models/content-action.model';\nimport { DocumentActionsService } from '../../services/document-actions.service';\nimport { FolderActionsService } from '../../services/folder-actions.service';\nimport { ContentActionModel, ContentActionTarget } from './../../models/content-action.model';\nimport { ContentActionListComponent } from './content-action-list.component';\n\n@Component({\n    selector: 'content-action',\n    template: '',\n    providers: [\n        DocumentActionsService,\n        FolderActionsService\n    ]\n})\nexport class ContentActionComponent implements OnInit {\n\n    /** The title of the action as shown in the menu. */\n    @Input()\n    title: string = 'Action';\n\n    /** The name of the icon to display next to the menu command (can be left blank). */\n    @Input()\n    icon: string;\n\n    /** System actions. Can be \"delete\", \"download\", \"copy\" or \"move\". */\n    @Input()\n    handler: string;\n\n    /** Type of item that the action appies to. Can be \"document\" or \"folder\" */\n    @Input()\n    target: string = ContentActionTarget.All;\n\n    /** The permission type. */\n    @Input()\n    permission: string;\n\n    /** Should this action be disabled in the menu if the user doesn't have permission for it? */\n    @Input()\n    disableWithNoPermission: boolean;\n\n    /** Is the menu item disabled? */\n    @Input()\n    disabled: boolean = false;\n\n    /** Emitted when the user selects the action from the menu. */\n    @Output()\n    execute = new EventEmitter();\n\n    /** Emitted when a permission error occurs */\n    @Output()\n    permissionEvent = new EventEmitter();\n\n    /** Emitted when an error occurs during the action.\n     * Applies to copy and move actions.\n     */\n    @Output()\n    error = new EventEmitter();\n\n    /** Emitted when the action succeeds with the success string message.\n     * Applies to copy, move and delete actions.\n     */\n    @Output()\n    success = new EventEmitter();\n\n    constructor(\n        private list: ContentActionListComponent,\n        private documentActions: DocumentActionsService,\n        private folderActions: FolderActionsService) {\n    }\n\n    ngOnInit() {\n        if (this.target === ContentActionTarget.All) {\n            this.generateAction(ContentActionTarget.Folder);\n            this.generateAction(ContentActionTarget.Document);\n        } else {\n            this.generateAction(this.target);\n        }\n    }\n\n    register(model: ContentActionModel): boolean {\n        if (this.list) {\n            return this.list.registerAction(model);\n        }\n        return false;\n    }\n\n    private generateAction(target: string) {\n        let model = new ContentActionModel({\n            title: this.title,\n            icon: this.icon,\n            permission: this.permission,\n            disableWithNoPermission: this.disableWithNoPermission,\n            target: target,\n            disabled: this.disabled\n        });\n        if (this.handler) {\n            model.handler = this.getSystemHandler(target, this.handler);\n        }\n\n        if (this.execute) {\n            model.execute = (value: any): void => {\n                this.execute.emit({ value });\n            };\n        }\n\n        this.register(model);\n    }\n\n    getSystemHandler(target: string, name: string): ContentActionHandler {\n        if (target) {\n            let ltarget = target.toLowerCase();\n\n            if (ltarget === ContentActionTarget.Document) {\n                if (this.documentActions) {\n                    this.documentActions.permissionEvent.subscribe((permission) => {\n                        this.permissionEvent.emit(permission);\n                    });\n\n                    this.documentActions.error.subscribe((errors) => {\n                        this.error.emit(errors);\n                    });\n\n                    this.documentActions.success.subscribe((message) => {\n                        this.success.emit(message);\n                    });\n\n                    return this.documentActions.getHandler(name);\n                }\n                return null;\n            }\n\n            if (ltarget === ContentActionTarget.Folder) {\n                if (this.folderActions) {\n                    this.folderActions.permissionEvent.subscribe((permission) => {\n                        this.permissionEvent.emit(permission);\n                    });\n\n                    this.folderActions.error.subscribe((errors) => {\n                        this.error.emit(errors);\n                    });\n\n                    this.folderActions.success.subscribe((message) => {\n                        this.success.emit(message);\n                    });\n\n                    return this.folderActions.getHandler(name);\n                }\n                return null;\n            }\n        }\n        return null;\n    }\n}\n",
    "/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n /* tslint:disable:component-selector  */\n\nimport { Component } from '@angular/core';\n\nimport { ContentActionModel } from './../../models/content-action.model';\nimport { DocumentListComponent } from './../document-list.component';\n\n@Component({\n    selector: 'content-actions',\n    template: ''\n})\nexport class ContentActionListComponent {\n\n    constructor(private documentList: DocumentListComponent) {\n    }\n\n    /**\n     * Registers action handler within the parent document list component.\n     * @param action Action model to register.\n     */\n    registerAction(action: ContentActionModel): boolean {\n        if (this.documentList && action) {\n            this.documentList.actions.push(action);\n            return true;\n        }\n        return false;\n    }\n}\n",
    "/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ContentService, TranslationService } from '@alfresco/adf-core';\nimport { Injectable } from '@angular/core';\nimport { MinimalNodeEntity } from 'alfresco-js-api';\nimport { Observable } from 'rxjs/Observable';\nimport { Subject } from 'rxjs/Subject';\nimport { ContentActionHandler } from '../models/content-action.model';\nimport { PermissionModel } from '../models/permissions.model';\nimport { DocumentListService } from './document-list.service';\nimport { NodeActionsService } from './node-actions.service';\nimport 'rxjs/add/observable/throw';\n\n@Injectable()\nexport class FolderActionsService {\n\n    permissionEvent: Subject<PermissionModel> = new Subject<PermissionModel>();\n    error: Subject<Error> = new Subject<Error>();\n    success: Subject<string> = new Subject<string>();\n\n    private handlers: { [id: string]: ContentActionHandler; } = {};\n\n    constructor(private nodeActionsService: NodeActionsService,\n                private documentListService: DocumentListService,\n                private contentService: ContentService,\n                private translation: TranslationService) {\n        this.setupActionHandlers();\n    }\n\n    /**\n     * Gets the handler function for an action.\n     * @param key Identifier for the action\n     * @returns The handler function\n     */\n    getHandler(key: string): ContentActionHandler {\n        if (key) {\n            let lkey = key.toLowerCase();\n            return this.handlers[lkey] || null;\n        }\n        return null;\n    }\n\n    /**\n     * Sets a new handler function for an action.\n     * @param key Identifier for the action\n     * @param handler The new handler function\n     * @returns True if the key was a valid action identifier, false otherwise\n     */\n    setHandler(key: string, handler: ContentActionHandler): boolean {\n        if (key) {\n            let lkey = key.toLowerCase();\n            this.handlers[lkey] = handler;\n            return true;\n        }\n        return false;\n    }\n\n    /**\n     * Checks if an action is available for a particular item.\n     * @param obj Item to check\n     * @returns True if the action is available, false otherwise\n     */\n    canExecuteAction(obj: any): boolean {\n        return this.documentListService && obj && obj.entry.isFolder === true;\n    }\n\n    private setupActionHandlers() {\n        this.handlers['copy'] = this.copyNode.bind(this);\n        this.handlers['move'] = this.moveNode.bind(this);\n        this.handlers['delete'] = this.deleteNode.bind(this);\n        this.handlers['download'] = this.downloadNode.bind(this);\n    }\n\n    private downloadNode(obj: MinimalNodeEntity, target?: any, permission?: string) {\n        this.nodeActionsService.downloadNode(obj);\n    }\n\n    private copyNode(obj: MinimalNodeEntity, target?: any, permission?: string) {\n        const actionObservable = this.nodeActionsService.copyFolder(obj.entry, permission);\n        this.prepareHandlers(actionObservable, 'folder', 'copy', target, permission);\n        return actionObservable;\n    }\n\n    private moveNode(obj: MinimalNodeEntity, target?: any, permission?: string) {\n        const actionObservable = this.nodeActionsService.moveFolder(obj.entry, permission);\n        this.prepareHandlers(actionObservable, 'folder', 'move', target, permission);\n        return actionObservable;\n    }\n\n    private prepareHandlers(actionObservable, type: string, action: string, target?: any, permission?: string): void {\n        actionObservable.subscribe(\n            (fileOperationMessage) => {\n                if (target && typeof target.reload === 'function') {\n                    target.reload();\n                }\n                this.success.next(fileOperationMessage);\n            },\n            this.error.next.bind(this.error)\n        );\n    }\n\n    private deleteNode(node: MinimalNodeEntity, target?: any, permission?: string): Observable<any> {\n        let handlerObservable: Observable<any>;\n\n        if (this.canExecuteAction(node)) {\n            if (this.contentService.hasPermission(node.entry, permission)) {\n                handlerObservable = this.documentListService.deleteNode(node.entry.id);\n                handlerObservable.subscribe(() => {\n                    if (target && typeof target.reload === 'function') {\n                        target.reload();\n                    }\n\n                    let message = this.translation.instant('CORE.DELETE_NODE.SINGULAR', { name: node.entry.name });\n                    this.success.next(message);\n                }, () => {\n                    let message = this.translation.instant('CORE.DELETE_NODE.ERROR_SINGULAR', { name: node.entry.name });\n                    this.error.next(message);\n                });\n\n                return handlerObservable;\n            } else {\n                this.permissionEvent.next(new PermissionModel({type: 'folder', action: 'delete', permission: permission}));\n                return Observable.throw(new Error('No permission to delete'));\n            }\n        }\n    }\n}\n",
    "/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ContentService, TranslationService } from '@alfresco/adf-core';\nimport { Injectable } from '@angular/core';\nimport { MinimalNodeEntity } from 'alfresco-js-api';\nimport { Observable } from 'rxjs/Observable';\nimport { Subject } from 'rxjs/Subject';\nimport { ContentActionHandler } from '../models/content-action.model';\nimport { PermissionModel } from '../models/permissions.model';\nimport { DocumentListService } from './document-list.service';\nimport { NodeActionsService } from './node-actions.service';\nimport { ContentNodeDialogService } from '../../content-node-selector/content-node-dialog.service';\nimport 'rxjs/add/observable/throw';\n\n@Injectable()\nexport class DocumentActionsService {\n\n    permissionEvent: Subject<PermissionModel> = new Subject<PermissionModel>();\n    error: Subject<Error> = new Subject<Error>();\n    success: Subject<string> = new Subject<string>();\n\n    private handlers: { [id: string]: ContentActionHandler; } = {};\n\n    constructor(private nodeActionsService: NodeActionsService,\n                private contentNodeDialogService: ContentNodeDialogService,\n                private translation: TranslationService,\n                private documentListService?: DocumentListService,\n                private contentService?: ContentService) {\n        this.setupActionHandlers();\n    }\n\n    /**\n     * Gets the handler for an action.\n     * @param key Identifier of the action\n     * @returns The handler for the action\n     */\n    getHandler(key: string): ContentActionHandler {\n        if (key) {\n            let lkey = key.toLowerCase();\n            return this.handlers[lkey] || null;\n        }\n        return null;\n    }\n\n    /**\n     * Sets a new handler for an action.\n     * @param key Identifier of the action\n     * @param handler Handler for the action\n     * @returns False if the key was an empty/null string, true otherwise\n     */\n    setHandler(key: string, handler: ContentActionHandler): boolean {\n        if (key) {\n            let lkey = key.toLowerCase();\n            this.handlers[lkey] = handler;\n            return true;\n        }\n        return false;\n    }\n\n    /**\n     * Checks if actions can be executed for an item.\n     * @param obj Item to receive an action\n     * @returns True if the action can be executed on this item, false otherwise\n     */\n    canExecuteAction(obj: any): boolean {\n        return this.documentListService && obj && obj.entry.isFile === true;\n    }\n\n    private setupActionHandlers() {\n        this.handlers['copy'] = this.copyNode.bind(this);\n        this.handlers['move'] = this.moveNode.bind(this);\n        this.handlers['delete'] = this.deleteNode.bind(this);\n        this.handlers['download'] = this.downloadNode.bind(this);\n        this.handlers['lock'] = this.lockNode.bind(this);\n    }\n\n    private lockNode(node: MinimalNodeEntity, target?: any, permission?: string) {\n        return this.contentNodeDialogService.openLockNodeDialog(node.entry);\n    }\n\n    private downloadNode(obj: MinimalNodeEntity, target?: any, permission?: string) {\n        this.nodeActionsService.downloadNode(obj);\n    }\n\n    private copyNode(node: MinimalNodeEntity, target?: any, permission?: string) {\n        const actionObservable = this.nodeActionsService.copyContent(node.entry, permission);\n        this.prepareHandlers(actionObservable, 'content', 'copy', target, permission);\n        return actionObservable;\n    }\n\n    private moveNode(node: MinimalNodeEntity, target?: any, permission?: string) {\n        const actionObservable = this.nodeActionsService.moveContent(node.entry, permission);\n        this.prepareHandlers(actionObservable, 'content', 'move', target, permission);\n        return actionObservable;\n    }\n\n    private prepareHandlers(actionObservable, type: string, action: string, target?: any, permission?: string): void {\n        actionObservable.subscribe(\n            (fileOperationMessage) => {\n                this.success.next(fileOperationMessage);\n            },\n            this.error.next.bind(this.error)\n        );\n    }\n\n    private deleteNode(node: MinimalNodeEntity, target?: any, permission?: string): Observable<any> {\n        let handlerObservable;\n\n        if (this.canExecuteAction(node)) {\n            if (this.contentService.hasPermission(node.entry, permission)) {\n                handlerObservable = this.documentListService.deleteNode(node.entry.id);\n                handlerObservable.subscribe(() => {\n                    let message = this.translation.instant('CORE.DELETE_NODE.SINGULAR', { name: node.entry.name });\n                    this.success.next(message);\n                }, () => {\n                    let message = this.translation.instant('CORE.DELETE_NODE.ERROR_SINGULAR', { name: node.entry.name });\n                    this.error.next(message);\n                });\n                return handlerObservable;\n            } else {\n                this.permissionEvent.next(new PermissionModel({\n                    type: 'content',\n                    action: 'delete',\n                    permission: permission\n                }));\n                return Observable.throw(new Error('No permission to delete'));\n            }\n        }\n    }\n}\n",
    "/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Injectable, Output, EventEmitter } from '@angular/core';\nimport { MinimalNodeEntryEntity, MinimalNodeEntity } from 'alfresco-js-api';\nimport { Subject } from 'rxjs/Subject';\nimport { AlfrescoApiService, ContentService } from '@alfresco/adf-core';\nimport { MatDialog } from '@angular/material';\n\nimport { DocumentListService } from './document-list.service';\nimport { ContentNodeDialogService } from '../../content-node-selector/content-node-dialog.service';\nimport { NodeDownloadDirective } from '../../directives/node-download.directive';\n\n@Injectable()\nexport class NodeActionsService {\n\n    @Output()\n    error: EventEmitter<any> = new EventEmitter<any>();\n\n    constructor(private contentDialogService: ContentNodeDialogService,\n                public dialogRef: MatDialog,\n                public content: ContentService,\n                private documentListService?: DocumentListService,\n                private apiService?: AlfrescoApiService,\n                private dialog?: MatDialog) {}\n\n    downloadNode(node: MinimalNodeEntity) {\n        new NodeDownloadDirective(this.apiService, this.dialog)\n            .downloadNode(node);\n    }\n\n    /**\n     * Copy content node\n     *\n     * @param contentEntry node to copy\n     * @param permission permission which is needed to apply the action\n     */\n    public copyContent(contentEntry: MinimalNodeEntryEntity, permission?: string): Subject<string> {\n        return this.doFileOperation('copy', 'content', contentEntry, permission);\n    }\n\n    /**\n     * Copy folder node\n     *\n     * @param contentEntry node to copy\n     * @param permission permission which is needed to apply the action\n     */\n    public copyFolder(contentEntry: MinimalNodeEntryEntity, permission?: string): Subject<string> {\n        return this.doFileOperation('copy', 'folder', contentEntry, permission);\n    }\n\n    /**\n     * Move content node\n     *\n     * @param contentEntry node to move\n     * @param permission permission which is needed to apply the action\n     */\n    public moveContent(contentEntry: MinimalNodeEntryEntity, permission?: string): Subject<string> {\n        return this.doFileOperation('move', 'content', contentEntry, permission);\n    }\n\n    /**\n     * Move folder node\n     *\n     * @param contentEntry node to move\n     * @param permission permission which is needed to apply the action\n     */\n    public moveFolder(contentEntry: MinimalNodeEntryEntity, permission?: string): Subject<string> {\n        return this.doFileOperation('move', 'folder', contentEntry, permission);\n    }\n\n    /**\n     * General method for performing the given operation (copy|move)\n     *\n     * @param action the action to perform (copy|move)\n     * @param type type of the content (content|folder)\n     * @param contentEntry the contentEntry which has to have the action performed on\n     * @param permission permission which is needed to apply the action\n     */\n    private doFileOperation(action: string, type: string, contentEntry: MinimalNodeEntryEntity, permission?: string): Subject<string> {\n        const observable: Subject<string> = new Subject<string>();\n\n        this.contentDialogService\n            .openCopyMoveDialog(action, contentEntry, permission)\n            .subscribe((selections: MinimalNodeEntryEntity[]) => {\n                const selection = selections[0];\n                this.documentListService[`${action}Node`].call(this.documentListService, contentEntry.id, selection.id)\n                    .subscribe(\n                    observable.next.bind(observable, `OPERATION.SUCCES.${type.toUpperCase()}.${action.toUpperCase()}`),\n                    observable.error.bind(observable)\n                    );\n            },\n            (error) => {\n                observable.error(error);\n                return observable;\n            });\n        return observable;\n    }\n}\n",
    "/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport class PermissionModel {\n    type: string;\n    action: string;\n    permission: string;\n\n    constructor(obj?: any) {\n        if (obj) {\n            this.type = obj.type || null;\n            this.action = obj.action || null;\n            this.permission = obj.permission || null;\n        }\n    }\n}\n",
    "/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n /* tslint:disable:component-selector no-input-rename  */\n\nimport { DataColumn } from '@alfresco/adf-core';\nimport { LogService } from '@alfresco/adf-core';\nimport { AfterContentInit, Component, ContentChild, Input, OnInit, TemplateRef } from '@angular/core';\n\nimport { ContentColumnListComponent } from './content-column-list.component';\n\n@Component({\n    selector: 'content-column',\n    template: ''\n})\nexport class ContentColumnComponent implements OnInit, AfterContentInit, DataColumn {\n\n    @Input()\n    key: string;\n\n    @Input()\n    type: string = 'text';\n\n    @Input()\n    format: string;\n\n    @Input()\n    sortable: boolean = false;\n\n    @Input()\n    title: string = '';\n\n    @ContentChild(TemplateRef)\n    template: any;\n\n    /**\n     * Title to be used for screen readers.\n     */\n    @Input('sr-title')\n    srTitle: string;\n\n    @Input('class')\n    cssClass: string;\n\n    constructor(private list: ContentColumnListComponent, private logService: LogService) {\n        this.logService.log('ContentColumnComponent is deprecated starting with 1.7.0 and may be removed in future versions. Use DataColumnComponent instead.');\n    }\n\n    ngOnInit() {\n        if (!this.srTitle && this.key === '$thumbnail') {\n            this.srTitle = 'Thumbnail';\n        }\n    }\n\n    ngAfterContentInit() {\n        this.register();\n    }\n\n    register(): boolean {\n        if (this.list) {\n            return this.list.registerColumn(this);\n        }\n        return false;\n    }\n}\n",
    "/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n /* tslint:disable:component-selector  */\n\nimport { DataColumn } from '@alfresco/adf-core';\nimport { LogService } from '@alfresco/adf-core';\nimport { Component } from '@angular/core';\n\nimport { DocumentListComponent } from './../document-list.component';\n\n@Component({\n    selector: 'content-columns',\n    template: ''\n})\nexport class ContentColumnListComponent {\n\n    constructor(private documentList: DocumentListComponent, private logService: LogService ) {\n        this.logService.log('ContentColumnListComponent is deprecated starting with 1.7.0 and may be removed in future versions. Use DataColumnListComponent instead.');\n    }\n\n    /**\n     * Registers column model within the parent document list component.\n     * @param column Column definition model to register.\n     */\n    registerColumn(column: DataColumn): boolean {\n        if (this.documentList && column) {\n            let columns = this.documentList.data.getColumns();\n            columns.push(column);\n            return true;\n        }\n        return false;\n    }\n}\n",
    "/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n    AfterContentInit, Component, ContentChild, ElementRef, EventEmitter, HostListener, Input, NgZone,\n    OnChanges, OnDestroy, OnInit, Output, SimpleChanges, TemplateRef, ViewChild, ViewEncapsulation\n} from '@angular/core';\n\nimport {\n    ContentService, DataCellEvent, DataColumn, DataRowActionEvent, DataSorting, DataTableComponent,\n    DisplayMode, ObjectDataColumn, PaginatedComponent, AppConfigService, DataColumnListComponent,\n    UserPreferencesService, PaginationModel\n} from '@alfresco/adf-core';\n\nimport { MinimalNodeEntity, MinimalNodeEntryEntity, NodePaging } from 'alfresco-js-api';\n\nimport { Observable } from 'rxjs/Observable';\nimport { Subject } from 'rxjs/Subject';\nimport { BehaviorSubject } from 'rxjs/BehaviorSubject';\nimport { Subscription } from 'rxjs/Subscription';\n\nimport { ShareDataRow } from './../data/share-data-row.model';\nimport { ShareDataTableAdapter } from './../data/share-datatable-adapter';\n\nimport { presetsDefaultModel } from '../models/preset.model';\nimport { ContentActionModel } from './../models/content-action.model';\nimport { PermissionStyleModel } from './../models/permissions-style.model';\nimport { DocumentListService } from './../services/document-list.service';\nimport { NodeEntityEvent, NodeEntryEvent } from './node.event';\nimport { CustomResourcesService } from './../services/custom-resources.service';\nimport { NavigableComponentInterface } from '../../breadcrumb/navigable-component.interface';\n\nexport enum PaginationStrategy {\n    Finite,\n    Infinite\n}\n\n@Component({\n    selector: 'adf-document-list',\n    styles: [``],\n    template: `<adf-datatable\n    #dataTable\n    [selectionMode]=\"selectionMode\"\n    [data]=\"data\"\n    [actions]=\"contentActions\"\n    [actionsPosition]=\"contentActionsPosition\"\n    [multiselect]=\"multiselect\"\n    [allowDropFiles]=\"allowDropFiles\"\n    [contextMenu]=\"contextMenuActions\"\n    [rowStyle]=\"rowStyle\"\n    [rowStyleClass]=\"rowStyleClass\"\n    [loading]=\"loading\"\n    [display]=\"display\"\n    [noPermission]=\"noPermission\"\n    [showHeader]=\"!isEmpty() && showHeader\"\n    (showRowContextMenu)=\"onShowRowContextMenu($event)\"\n    (showRowActionsMenu)=\"onShowRowActionsMenu($event)\"\n    (executeRowAction)=\"onExecuteRowAction($event)\"\n    (rowClick)=\"onNodeClick($event.value?.node)\"\n    (rowDblClick)=\"onNodeDblClick($event.value?.node)\"\n    (row-select)=\"onNodeSelect($event.detail)\"\n    (row-unselect)=\"onNodeUnselect($event.detail)\">\n\n    <div *ngIf=\"!isEmptyTemplateDefined()\">\n        <no-content-template>\n            <ng-template>\n                <adf-empty-list>\n                    <div class=\"adf-empty-list_template adf-empty-folder\">\n                        <div class=\"adf-empty-folder-this-space-is-empty\">{{'ADF-DOCUMENT-LIST.EMPTY.HEADER' | translate}}</div>\n                        <div fxHide.lt-md=\"true\" class=\"adf-empty-folder-drag-drop\">{{ 'ADF-DATATABLE.EMPTY.DRAG-AND-DROP.TITLE' | translate }}</div>\n                        <div fxHide.lt-md=\"true\" class=\"adf-empty-folder-any-files-here-to-add\">{{ 'ADF-DATATABLE.EMPTY.DRAG-AND-DROP.SUBTITLE' | translate }}</div>\n                        <img class=\"adf-empty-folder-image\" [src]=\"emptyFolderImageUrl\">\n                    </div>\n                    <!-- <div adf-empty-list-header class=\"adf-empty-list-header\"> {{'ADF-DOCUMENT-LIST.EMPTY.HEADER' | translate}} </div> -->\n                </adf-empty-list>\n            </ng-template>\n        </no-content-template>\n    </div>\n\n    <div *ngIf=\"!isNoPermissionTemplateDefined()\">\n        <no-permission-template>\n            <ng-template>\n                <div class=\"adf-no-permission__template\">\n                    <mat-icon>ic_error</mat-icon>\n                    <p class=\"adf-no-permission__template--text\">{{ 'ADF-DOCUMENT-LIST.NO_PERMISSION' | translate }}</p>\n                </div>\n            </ng-template>\n        </no-permission-template>\n    </div>\n\n    <div>\n        <loading-content-template>\n            <ng-template>\n                <div class=\"adf-document-list-loading-container\">\n                    <mat-progress-spinner\n                        id=\"adf-document-list-loading\"\n                        class=\"adf-document-list-loading-margin\"\n                        [color]=\"'primary'\"\n                        [mode]=\"'indeterminate'\">\n                    </mat-progress-spinner>\n                </div>\n            </ng-template>\n        </loading-content-template>\n    </div>\n</adf-datatable>\n`,\n    encapsulation: ViewEncapsulation.None\n})\nexport class DocumentListComponent implements OnInit, OnChanges, OnDestroy, AfterContentInit, PaginatedComponent, NavigableComponentInterface {\n\n    static SINGLE_CLICK_NAVIGATION: string = 'click';\n    static DOUBLE_CLICK_NAVIGATION: string = 'dblclick';\n    static DEFAULT_PAGE_SIZE: number = 20;\n\n    @ContentChild(DataColumnListComponent)\n    columnList: DataColumnListComponent;\n\n    /** Include additional information about the node in the server request.for example: association, isLink, isLocked and others. */\n    @Input()\n    includeFields: string[];\n\n    /** Change the display mode of the table. Can be \"list\" or \"gallery\". */\n    @Input()\n    display: string = DisplayMode.List;\n\n    /** Define a set of CSS styles styles to apply depending on the permission\n     * of the user on that node. See the Permission Style model\n     * page for further details and examples.\n     */\n    @Input()\n    permissionsStyle: PermissionStyleModel[] = [];\n\n    /** The default route for all the location-based columns (if declared). */\n    @Input()\n    locationFormat: string = '/';\n\n    /** Toggles navigation to folder content or file preview */\n    @Input()\n    navigate: boolean = true;\n\n    /** Toggles the header */\n    @Input()\n    showHeader: boolean = true;\n\n    /** User interaction for folder navigation or file preview.\n     * Valid values are \"click\" and \"dblclick\". Default value: \"dblclick\"\n     */\n    @Input()\n    navigationMode: string = DocumentListComponent.DOUBLE_CLICK_NAVIGATION; // click|dblclick\n\n    /** Show document thumbnails rather than icons */\n    @Input()\n    thumbnails: boolean = false;\n\n    /** Row selection mode. Can be null, `single` or `multiple`. For `multiple` mode,\n     * you can use Cmd (macOS) or Ctrl (Win) modifier key to toggle selection for multiple rows.\n     */\n    @Input()\n    selectionMode: string = 'single'; // null|single|multiple\n\n    /** Toggles multiselect mode */\n    @Input()\n    multiselect: boolean = false;\n\n    /** Toggles content actions for each row */\n    @Input()\n    contentActions: boolean = false;\n\n    /** Position of the content actions dropdown menu. Can be set to \"left\" or \"right\". */\n    @Input()\n    contentActionsPosition: string = 'right'; // left|right\n\n    /** Toggles context menus for each row */\n    @Input()\n    contextMenuActions: boolean = false;\n\n    /** Custom image for empty folder. Default value: './assets/images/empty_doc_lib.svg' */\n    @Input()\n    emptyFolderImageUrl: string = './assets/images/empty_doc_lib.svg';\n\n    /** Toggle file drop support for rows (see Upload Directive for further details */\n    @Input()\n    allowDropFiles: boolean = false;\n\n    /** Defines default sorting. The format is an array of 2 strings `[key, direction]`\n     * i.e. `['name', 'desc']` or `['name', 'asc']`. Set this value only if you want to\n     * override the default sorting detected by the component based on columns.\n     */\n    @Input()\n    sorting: string[];\n\n    /** The inline style to apply to every row. See\n     * the Angular NgStyle\n     * docs for more details and usage examples.\n     */\n    @Input()\n    rowStyle: string;\n\n    /** The CSS class to apply to every row */\n    @Input()\n    rowStyleClass: string;\n\n    /** Toggles the loading state and animated spinners for the component. Used in\n     * combination with `navigate=false` to perform custom navigation and loading\n     * state indication.\n     */\n    @Input()\n    loading: boolean = false;\n\n    /** Custom row filter */\n    @Input()\n    rowFilter: any | null = null;\n\n    /** Custom image resolver */\n    @Input()\n    imageResolver: any | null = null;\n\n    /** The ID of the folder node to display or a reserved string alias for special sources */\n    @Input()\n    currentFolderId: string = null;\n\n    /** @deprecated 2.3.0 use currentFolderId or node */\n    /** Currently displayed folder node */\n    @Input()\n    folderNode: MinimalNodeEntryEntity = null;\n\n    /** The Document list will show all the nodes contained in the NodePaging entity */\n    @Input()\n    node: NodePaging = null;\n\n    /** Default value is stored into user preference settings use it only if you are not using the pagination */\n    @Input()\n    maxItems: number;\n\n    /** @deprecated 2.3.0 define it in pagination */\n    /** Number of elements to skip over for pagination purposes */\n    @Input()\n    skipCount: number = 0;\n\n    /** @deprecated 2.3.0 */\n    /** Set document list to work in infinite scrolling mode */\n    @Input()\n    enableInfiniteScrolling: boolean = false;\n\n    /** Emitted when the user clicks a list node */\n    @Output()\n    nodeClick: EventEmitter<NodeEntityEvent> = new EventEmitter<NodeEntityEvent>();\n\n    /** Emitted when the user double-clicks a list node */\n    @Output()\n    nodeDblClick: EventEmitter<NodeEntityEvent> = new EventEmitter<NodeEntityEvent>();\n\n    /** Emitted when the current display folder changes */\n    @Output()\n    folderChange: EventEmitter<NodeEntryEvent> = new EventEmitter<NodeEntryEvent>();\n\n    /** Emitted when the user acts upon files with either single or double click\n     * (depends on `navigation-mode`). Useful for integration with the\n     * Viewer component.\n     */\n    @Output()\n    preview: EventEmitter<NodeEntityEvent> = new EventEmitter<NodeEntityEvent>();\n\n    /** Emitted when the Document List has loaded all items and is ready for use */\n    @Output()\n    ready: EventEmitter<NodePaging> = new EventEmitter();\n\n    /** Emitted when the API fails to get the Document List data */\n    @Output()\n    error: EventEmitter<any> = new EventEmitter();\n\n    @ViewChild('dataTable')\n    dataTable: DataTableComponent;\n\n    actions: ContentActionModel[] = [];\n    emptyFolderTemplate: TemplateRef<any>;\n    noPermissionTemplate: TemplateRef<any>;\n    contextActionHandler: Subject<any> = new Subject();\n    data: ShareDataTableAdapter;\n    noPermission: boolean = false;\n    selection = new Array<MinimalNodeEntity>();\n\n    private _pagination: BehaviorSubject<PaginationModel>;\n    private layoutPresets = {};\n\n    private contextActionHandlerSubscription: Subscription;\n\n    constructor(private documentListService: DocumentListService,\n                private ngZone: NgZone,\n                private elementRef: ElementRef,\n                private appConfig: AppConfigService,\n                private preferences: UserPreferencesService,\n                private customResourcesService: CustomResourcesService,\n                private contentService: ContentService) {\n    }\n\n    getContextActions(node: MinimalNodeEntity) {\n        if (node && node.entry) {\n            let actions = this.getNodeActions(node);\n            if (actions && actions.length > 0) {\n                return actions.map((currentAction: ContentActionModel) => {\n                    return {\n                        model: currentAction,\n                        node: node,\n                        subject: this.contextActionHandler\n                    };\n                });\n            }\n        }\n        return null;\n    }\n\n    /** @deprecated 2.3.0 define it in pagination */\n    get supportedPageSizes(): number[] {\n        return this.preferences.getDefaultPageSizes();\n    }\n\n    get hasCustomLayout(): boolean {\n        return this.columnList && this.columnList.columns && this.columnList.columns.length > 0;\n    }\n\n    private getDefaultSorting(): DataSorting {\n        let defaultSorting: DataSorting;\n        if (this.sorting) {\n            const [key, direction] = this.sorting;\n            defaultSorting = new DataSorting(key, direction);\n        }\n        return defaultSorting;\n    }\n\n    private getLayoutPreset(name: string = 'default'): DataColumn[] {\n        return (this.layoutPresets[name] || this.layoutPresets['default']).map(col => new ObjectDataColumn(col));\n    }\n\n    get pagination(): BehaviorSubject<PaginationModel> {\n        let maxItems = this.preferences.paginationSize;\n\n        if (!this._pagination) {\n            if (this.maxItems) {\n                maxItems = this.maxItems;\n            }\n\n            let defaultPagination = <PaginationModel> {\n                maxItems: maxItems,\n                skipCount: 0,\n                totalItems: 0,\n                hasMoreItems: false\n            };\n\n            this._pagination = new BehaviorSubject<PaginationModel>(defaultPagination);\n        }\n\n        return this._pagination;\n    }\n\n    isEmptyTemplateDefined(): boolean {\n        if (this.dataTable) {\n            if (this.emptyFolderTemplate) {\n                return true;\n            }\n        }\n        return false;\n    }\n\n    isNoPermissionTemplateDefined(): boolean {\n        if (this.dataTable) {\n            if (this.noPermissionTemplate) {\n                return true;\n            }\n        }\n        return false;\n    }\n\n    isMobile(): boolean {\n        return !!/Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent);\n    }\n\n    isEmpty() {\n        return !this.data || this.data.getRows().length === 0;\n    }\n\n    ngOnInit() {\n        this.loadLayoutPresets();\n        this.data = new ShareDataTableAdapter(this.documentListService, null, this.getDefaultSorting());\n        this.data.thumbnails = this.thumbnails;\n        this.data.permissionsStyle = this.permissionsStyle;\n\n        if (this.rowFilter) {\n            this.data.setFilter(this.rowFilter);\n        }\n\n        if (this.imageResolver) {\n            this.data.setImageResolver(this.imageResolver);\n        }\n\n        this.contextActionHandlerSubscription = this.contextActionHandler.subscribe(val => this.contextActionCallback(val));\n\n        this.enforceSingleClickNavigationForMobile();\n    }\n\n    ngAfterContentInit() {\n        let schema: DataColumn[] = [];\n\n        if (this.hasCustomLayout) {\n            schema = this.columnList.columns.map(c => <DataColumn> c);\n        }\n\n        if (!this.data) {\n            this.data = new ShareDataTableAdapter(this.documentListService, schema, this.getDefaultSorting());\n        } else if (schema && schema.length > 0) {\n            this.data.setColumns(schema);\n        }\n\n        let columns = this.data.getColumns();\n        if (!columns || columns.length === 0) {\n            this.setupDefaultColumns(this.currentFolderId);\n        }\n    }\n\n    ngOnChanges(changes: SimpleChanges) {\n        this.resetSelection();\n\n        if (changes.folderNode && changes.folderNode.currentValue) {\n            this.currentFolderId = changes.folderNode.currentValue.id;\n            this.resetNewFolderPagination();\n            this.loadFolder();\n        } else if (changes.currentFolderId &&\n            changes.currentFolderId.currentValue &&\n            changes.currentFolderId.currentValue !== changes.currentFolderId.previousValue) {\n            this.resetNewFolderPagination();\n            this.loadFolder();\n        } else if (this.data) {\n            if (changes.node && changes.node.currentValue) {\n                if (changes.node.currentValue.list.pagination) {\n                    changes.node.currentValue.list.pagination.skipCount = 0;\n                }\n                this.data.loadPage(changes.node.currentValue);\n                this.onDataReady(changes.node.currentValue);\n            } else if (changes.rowFilter) {\n                this.data.setFilter(changes.rowFilter.currentValue);\n                if (this.currentFolderId) {\n                    this.loadFolderNodesByFolderNodeId(this.currentFolderId, this.pagination.getValue()).catch(err => this.error.emit(err));\n                }\n            } else if (changes.imageResolver) {\n                this.data.setImageResolver(changes.imageResolver.currentValue);\n            }\n        }\n    }\n\n    reload() {\n        this.ngZone.run(() => {\n            this.resetSelection();\n            if (this.node) {\n                this.data.loadPage(this.node);\n                this.onDataReady(this.node);\n            } else {\n                this.loadFolder();\n            }\n        });\n    }\n\n    contextActionCallback(action) {\n        if (action) {\n            this.executeContentAction(action.node, action.model);\n        }\n    }\n\n    getNodeActions(node: MinimalNodeEntity | any): ContentActionModel[] {\n        let target = null;\n\n        if (node && node.entry) {\n            if (node.entry.isFile) {\n                target = 'document';\n            } else if (node.entry.isFolder) {\n                target = 'folder';\n            }\n\n            if (target) {\n                let actionsByTarget = this.actions.filter(entry => {\n                    return entry.target.toLowerCase() === target;\n                }).map(action => new ContentActionModel(action));\n\n                actionsByTarget.forEach((action) => {\n                    this.disableActionsWithNoPermissions(node, action);\n                });\n\n                return actionsByTarget;\n            }\n        }\n\n        return [];\n    }\n\n    disableActionsWithNoPermissions(node: MinimalNodeEntity, action: ContentActionModel) {\n        if (action.permission && node.entry.allowableOperations && !this.contentService.hasPermission(node.entry, action.permission)) {\n            action.disabled = true;\n        }\n    }\n\n    @HostListener('contextmenu', ['$event'])\n    onShowContextMenu(e?: Event) {\n        if (e && this.contextMenuActions) {\n            e.preventDefault();\n        }\n    }\n\n    performNavigation(node: MinimalNodeEntity): boolean {\n        if (this.canNavigateFolder(node)) {\n            this.updateFolderData(node);\n            return true;\n        }\n        return false;\n    }\n\n    performCustomSourceNavigation(node: MinimalNodeEntity): boolean {\n        if (this.customResourcesService.isCustomSource(this.currentFolderId)) {\n            this.updateFolderData(node);\n            return true;\n        }\n        return false;\n    }\n\n    updateFolderData(node: MinimalNodeEntity): void {\n        this.resetNewFolderPagination();\n        this.currentFolderId = node.entry.id;\n        this.reload();\n        this.folderChange.emit(new NodeEntryEvent(node.entry));\n    }\n\n    updateCustomSourceData(nodeId: string): void {\n        this.folderNode = null;\n        this.currentFolderId = nodeId;\n    }\n\n    /**\n     * Invoked when executing content action for a document or folder.\n     * @param node Node to be the context of the execution.\n     * @param action Action to be executed against the context.\n     */\n    executeContentAction(node: MinimalNodeEntity, action: ContentActionModel) {\n        if (node && node.entry && action) {\n            let handlerSub;\n\n            if (typeof action.handler === 'function') {\n                handlerSub = action.handler(node, this, action.permission);\n            } else {\n                handlerSub = Observable.of(true);\n            }\n\n            if (typeof action.execute === 'function') {\n                handlerSub.subscribe(() => {\n                    action.execute(node);\n                });\n            }\n        }\n    }\n\n    loadFolder() {\n        if (!this.pagination.getValue().merge) {\n            this.loading = true;\n        }\n\n        if (!this.hasCustomLayout) {\n            this.setupDefaultColumns(this.currentFolderId);\n        }\n\n        if (this.folderNode) {\n            return this.loadFolderNodesByFolderNodeId(this.folderNode.id, this.pagination.getValue())\n                .catch(err => this.handleError(err));\n        } else {\n            this.loadFolderByNodeId(this.currentFolderId);\n        }\n    }\n\n    loadFolderByNodeId(nodeId: string) {\n        if (this.customResourcesService.isCustomSource(nodeId)) {\n            this.updateCustomSourceData(nodeId);\n            this.customResourcesService.loadFolderByNodeId(nodeId, this.pagination.getValue(), this.includeFields)\n                .subscribe((page: NodePaging) => {\n                    this.onPageLoaded(page);\n                }, err => {\n                    this.error.emit(err);\n                });\n        } else {\n            this.documentListService\n                .getFolderNode(nodeId, this.includeFields)\n                .subscribe((node: MinimalNodeEntryEntity) => {\n                    this.folderNode = node;\n                    return this.loadFolderNodesByFolderNodeId(node.id, this.pagination.getValue())\n                        .catch(err => this.handleError(err));\n                }, err => {\n                    this.handleError(err);\n                });\n        }\n    }\n\n    loadFolderNodesByFolderNodeId(id: string, pagination: PaginationModel): Promise<any> {\n        return new Promise((resolve, reject) => {\n\n            this.documentListService\n                .getFolder(null, {\n                    maxItems: pagination.maxItems,\n                    skipCount: pagination.skipCount,\n                    rootFolderId: id\n                }, this.includeFields)\n                .subscribe(\n                    nodePaging => {\n                        this.data.loadPage(<NodePaging> nodePaging, this.pagination.getValue().merge);\n                        this.loading = false;\n                        this.onDataReady(nodePaging);\n                        resolve(true);\n                    }, err => {\n                        this.handleError(err);\n                    });\n        });\n    }\n\n    resetSelection() {\n        this.dataTable.resetSelection();\n        this.selection = [];\n        this.noPermission = false;\n    }\n\n    private onPageLoaded(nodePaging: NodePaging) {\n        if (nodePaging) {\n            this.data.loadPage(nodePaging, this.pagination.getValue().merge);\n            this.loading = false;\n            this.onDataReady(nodePaging);\n        }\n    }\n\n    /**\n     * Creates a set of predefined columns.\n     */\n    setupDefaultColumns(preset: string = 'default'): void {\n        if (this.data) {\n            const columns = this.getLayoutPreset(preset);\n            this.data.setColumns(columns);\n        }\n    }\n\n    onPreviewFile(node: MinimalNodeEntity) {\n        if (node) {\n            this.preview.emit(new NodeEntityEvent(node));\n        }\n    }\n\n    onNodeClick(node: MinimalNodeEntity) {\n        const domEvent = new CustomEvent('node-click', {\n            detail: {\n                sender: this,\n                node: node\n            },\n            bubbles: true\n        });\n        this.elementRef.nativeElement.dispatchEvent(domEvent);\n\n        const event = new NodeEntityEvent(node);\n        this.nodeClick.emit(event);\n\n        if (!event.defaultPrevented) {\n            if (this.navigate && this.navigationMode === DocumentListComponent.SINGLE_CLICK_NAVIGATION) {\n                if (node && node.entry) {\n                    if (node.entry.isFile) {\n                        this.onPreviewFile(node);\n                    }\n\n                    if (node.entry.isFolder) {\n                        this.performNavigation(node);\n                    }\n                }\n            }\n        }\n    }\n\n    onNodeDblClick(node: MinimalNodeEntity) {\n        const domEvent = new CustomEvent('node-dblclick', {\n            detail: {\n                sender: this,\n                node: node\n            },\n            bubbles: true\n        });\n        this.elementRef.nativeElement.dispatchEvent(domEvent);\n\n        const event = new NodeEntityEvent(node);\n        this.nodeDblClick.emit(event);\n\n        if (!event.defaultPrevented) {\n            if (this.navigate && this.navigationMode === DocumentListComponent.DOUBLE_CLICK_NAVIGATION) {\n                if (node && node.entry) {\n                    if (node.entry.isFile) {\n                        this.onPreviewFile(node);\n                    }\n\n                    if (node.entry.isFolder) {\n                        this.performNavigation(node);\n                    }\n                }\n            }\n        }\n    }\n\n    onNodeSelect(event: { row: ShareDataRow, selection: Array<ShareDataRow> }) {\n        this.selection = event.selection.map(entry => entry.node);\n        const domEvent = new CustomEvent('node-select', {\n            detail: {\n                node: event.row.node,\n                selection: this.selection\n            },\n            bubbles: true\n        });\n        this.elementRef.nativeElement.dispatchEvent(domEvent);\n    }\n\n    onNodeUnselect(event: { row: ShareDataRow, selection: Array<ShareDataRow> }) {\n        this.selection = event.selection.map(entry => entry.node);\n        const domEvent = new CustomEvent('node-unselect', {\n            detail: {\n                node: event.row.node,\n                selection: this.selection\n            },\n            bubbles: true\n        });\n        this.elementRef.nativeElement.dispatchEvent(domEvent);\n    }\n\n    onShowRowContextMenu(event: DataCellEvent) {\n        if (this.contextMenuActions) {\n            let args = event.value;\n            let node = (<ShareDataRow> args.row).node;\n            if (node) {\n                args.actions = this.getContextActions(node) || [];\n            }\n        }\n    }\n\n    onShowRowActionsMenu(event: DataCellEvent) {\n        if (this.contentActions) {\n            let args = event.value;\n            let node = (<ShareDataRow> args.row).node;\n            if (node) {\n                args.actions = this.getNodeActions(node) || [];\n            }\n        }\n    }\n\n    onExecuteRowAction(event: DataRowActionEvent) {\n        if (this.contentActions) {\n            let args = event.value;\n            let node = (<ShareDataRow> args.row).node;\n            let action = (<ContentActionModel> args.action);\n            this.executeContentAction(node, action);\n        }\n    }\n\n    private enforceSingleClickNavigationForMobile(): void {\n        if (this.isMobile()) {\n            this.navigationMode = DocumentListComponent.SINGLE_CLICK_NAVIGATION;\n        }\n    }\n\n    canNavigateFolder(node: MinimalNodeEntity): boolean {\n        let canNavigateFolder: boolean = false;\n\n        if (this.customResourcesService.isCustomSource(this.currentFolderId)) {\n            canNavigateFolder = false;\n        } else if (node && node.entry && node.entry.isFolder) {\n            canNavigateFolder = true;\n        }\n\n        return canNavigateFolder;\n    }\n\n    private loadLayoutPresets(): void {\n        const externalSettings = this.appConfig.get('document-list.presets', null);\n\n        if (externalSettings) {\n            this.layoutPresets = Object.assign({}, presetsDefaultModel, externalSettings);\n        } else {\n            this.layoutPresets = presetsDefaultModel;\n        }\n    }\n\n    private onDataReady(nodePaging: NodePaging) {\n        this.ready.emit(nodePaging);\n\n        this.pagination.next(nodePaging.list.pagination);\n    }\n\n    updatePagination(pagination: PaginationModel) {\n        this.reload();\n    }\n\n    navigateTo(nodeId: string) {\n        this.currentFolderId = nodeId;\n        this.resetNewFolderPagination();\n        this.loadFolder();\n        this.folderChange.emit(new NodeEntryEvent({ id: nodeId }));\n    }\n\n    private resetNewFolderPagination() {\n        this.folderNode = null;\n        this.pagination.value.skipCount = 0;\n    }\n\n    // TODO: remove it from here\n    getCorrespondingNodeIds(nodeId: string): Observable<string[]> {\n        if (this.customResourcesService.isCustomSource(nodeId)) {\n            return this.customResourcesService.getCorrespondingNodeIds(nodeId, this.pagination.getValue());\n        } else if (nodeId) {\n            return new Observable(observer => {\n                this.documentListService.getFolderNode(nodeId, this.includeFields)\n                    .subscribe((node: MinimalNodeEntryEntity) => {\n                        observer.next([node.id]);\n                        observer.complete();\n                    });\n            });\n        }\n\n    }\n\n    ngOnDestroy() {\n        if (this.contextActionHandlerSubscription) {\n            this.contextActionHandlerSubscription.unsubscribe();\n            this.contextActionHandlerSubscription = null;\n        }\n    }\n\n    private handleError(err: any) {\n        if (err.message) {\n            if (JSON.parse(err.message).error.statusCode === 403) {\n                this.loading = false;\n                this.noPermission = true;\n            }\n        }\n        this.error.emit(err);\n\n    }\n\n}\n",
    "/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n    AlfrescoApiService,\n    LogService,\n    PaginationModel\n} from '@alfresco/adf-core';\n\nimport {\n    NodePaging,\n    PersonEntry,\n    SitePaging,\n    DeletedNodesPaging\n} from 'alfresco-js-api';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs/Observable';\n\n@Injectable()\nexport class CustomResourcesService {\n\n    private CREATE_PERMISSION = 'create';\n\n    constructor(private apiService: AlfrescoApiService,\n                private logService: LogService) {\n    }\n\n    getRecentFiles(personId: string, pagination: PaginationModel): Observable<NodePaging> {\n        return new Observable(observer => {\n            this.apiService.peopleApi.getPerson(personId)\n                .then((person: PersonEntry) => {\n                        const username = person.entry.id;\n                        const query = {\n                            query: {\n                                query: '*',\n                                language: 'afts'\n                            },\n                            filterQueries: [\n                                { query: `cm:modified:[NOW/DAY-30DAYS TO NOW/DAY+1DAY]` },\n                                { query: `cm:modifier:${username} OR cm:creator:${username}` },\n                                { query: `TYPE:\"content\" AND -TYPE:\"app:filelink\" AND -TYPE:\"fm:post\"` }\n                            ],\n                            include: ['path', 'properties', 'allowableOperations'],\n                            sort: [{\n                                type: 'FIELD',\n                                field: 'cm:modified',\n                                ascending: false\n                            }],\n                            paging: {\n                                maxItems: pagination.maxItems,\n                                skipCount: pagination.skipCount\n                            }\n                        };\n                        return this.apiService.searchApi.search(query)\n                            .then((serachResult) => {\n                                    observer.next(serachResult);\n                                    observer.complete();\n                                },\n                                (err) => {\n                                    observer.error(err);\n                                    observer.complete();\n                                });\n                    },\n                    (err) => {\n                        observer.error(err);\n                        observer.complete();\n                    });\n        }).catch(err => this.handleError(err));\n    }\n\n    loadFavorites(pagination: PaginationModel, includeFields: string[] = []): Observable<NodePaging> {\n        let includeFieldsRequest = this.getIncludesFields(includeFields);\n\n        const options = {\n            maxItems: pagination.maxItems,\n            skipCount: pagination.skipCount,\n            where: '(EXISTS(target/file) OR EXISTS(target/folder))',\n            include: includeFieldsRequest\n        };\n\n        return new Observable(observer => {\n            this.apiService.favoritesApi.getFavorites('-me-', options)\n                .then((result: NodePaging) => {\n                        let page: NodePaging = {\n                            list: {\n                                entries: result.list.entries\n                                    .map(({ entry: { target } }: any) => ({\n                                        entry: target.file || target.folder\n                                    }))\n                                    .map(({ entry }: any) => {\n                                        entry.properties = {\n                                            'cm:title': entry.title,\n                                            'cm:description': entry.description\n                                        };\n                                        return { entry };\n                                    }),\n                                pagination: result.list.pagination\n                            }\n                        };\n\n                        observer.next(page);\n                        observer.complete();\n                    },\n                    (err) => {\n                        observer.error(err);\n                        observer.complete();\n                    });\n        }).catch(err => this.handleError(err));\n    }\n\n    loadMemberSites(pagination: PaginationModel): Observable<NodePaging> {\n        const options = {\n            include: ['properties'],\n            maxItems: pagination.maxItems,\n            skipCount: pagination.skipCount\n        };\n\n        return new Observable(observer => {\n            this.apiService.peopleApi.getSiteMembership('-me-', options)\n                .then((result: SitePaging) => {\n                        let page: NodePaging = {\n                            list: {\n                                entries: result.list.entries\n                                    .map(({ entry: { site } }: any) => {\n                                        site.allowableOperations = site.allowableOperations ? site.allowableOperations : [this.CREATE_PERMISSION];\n                                        site.name = site.name || site.title;\n                                        return {\n                                            entry: site\n                                        };\n                                    }),\n                                pagination: result.list.pagination\n                            }\n                        };\n\n                        observer.next(page);\n                        observer.complete();\n                    },\n                    (err) => {\n                        observer.error(err);\n                        observer.complete();\n                    });\n        }).catch(err => this.handleError(err));\n    }\n\n    loadSites(pagination: PaginationModel): Observable<NodePaging> {\n        const options = {\n            include: ['properties'],\n            maxItems: pagination.maxItems,\n            skipCount: pagination.skipCount\n        };\n\n        return new Observable(observer => {\n            this.apiService.sitesApi.getSites(options)\n                .then((page: NodePaging) => {\n                        page.list.entries.map(\n                            ({ entry }: any) => {\n                                entry.name = entry.name || entry.title;\n                                return { entry };\n                            }\n                        );\n                        observer.next(page);\n                        observer.complete();\n                    },\n                    (err) => {\n                        observer.error(err);\n                        observer.complete();\n                    });\n        }).catch(err => this.handleError(err));\n    }\n\n    loadTrashcan(pagination: PaginationModel, includeFields: string[] = []): Observable<DeletedNodesPaging> {\n        let includeFieldsRequest = this.getIncludesFields(includeFields);\n\n        const options = {\n            include: includeFieldsRequest,\n            maxItems: pagination.maxItems,\n            skipCount: pagination.skipCount\n        };\n\n        return Observable.fromPromise(this.apiService.nodesApi.getDeletedNodes(options)).catch(err => this.handleError(err));\n\n    }\n\n    loadSharedLinks(pagination: PaginationModel, includeFields: string[] = []): Observable<NodePaging> {\n        let includeFieldsRequest = this.getIncludesFields(includeFields);\n\n        const options = {\n            include: includeFieldsRequest,\n            maxItems: pagination.maxItems,\n            skipCount: pagination.skipCount\n        };\n\n        return Observable.fromPromise(this.apiService.sharedLinksApi.findSharedLinks(options)).catch(err => this.handleError(err));\n    }\n\n    isCustomSource(folderId: string): boolean {\n        let isCustomSources = false;\n        const sources = ['-trashcan-', '-sharedlinks-', '-sites-', '-mysites-', '-favorites-', '-recent-'];\n\n        if (sources.indexOf(folderId) > -1) {\n            isCustomSources = true;\n        }\n\n        return isCustomSources;\n    }\n\n    loadFolderByNodeId(nodeId: string, pagination: PaginationModel, includeFields: string[]): Observable<NodePaging> {\n        if (nodeId === '-trashcan-') {\n            return this.loadTrashcan(pagination, includeFields);\n        } else if (nodeId === '-sharedlinks-') {\n            return this.loadSharedLinks(pagination, includeFields);\n        } else if (nodeId === '-sites-') {\n            return this.loadSites(pagination);\n        } else if (nodeId === '-mysites-') {\n            return this.loadMemberSites(pagination);\n        } else if (nodeId === '-favorites-') {\n            return this.loadFavorites(pagination, includeFields);\n        } else if (nodeId === '-recent-') {\n            return this.getRecentFiles('-me-', pagination);\n        }\n    }\n\n    // TODO: remove it from here\n    getCorrespondingNodeIds(nodeId: string, pagination: PaginationModel): Observable<string[]> {\n        if (nodeId === '-trashcan-') {\n            return Observable.fromPromise(this.apiService.nodesApi.getDeletedNodes()\n                .then(result => result.list.entries.map(node => node.entry.id)));\n\n        } else if (nodeId === '-sharedlinks-') {\n            return Observable.fromPromise(this.apiService.sharedLinksApi.findSharedLinks()\n                .then(result => result.list.entries.map(node => node.entry.nodeId)));\n\n        } else if (nodeId === '-sites-') {\n            return Observable.fromPromise(this.apiService.sitesApi.getSites()\n                .then(result => result.list.entries.map(node => node.entry.guid)));\n\n        } else if (nodeId === '-mysites-') {\n            return Observable.fromPromise(this.apiService.peopleApi.getSiteMembership('-me-')\n                .then(result => result.list.entries.map(node => node.entry.guid)));\n\n        } else if (nodeId === '-favorites-') {\n            return Observable.fromPromise(this.apiService.favoritesApi.getFavorites('-me-')\n                .then(result => result.list.entries.map(node => node.entry.targetGuid)));\n\n        } else if (nodeId === '-recent-') {\n            return new Observable(observer => {\n                this.getRecentFiles('-me-', pagination)\n                    .subscribe((recentFiles) => {\n                        let recentFilesIdS = recentFiles.list.entries.map(node => node.entry.id);\n                        observer.next(recentFilesIdS);\n                        observer.complete();\n                    });\n            });\n\n        }\n\n        return Observable.of([]);\n    }\n\n    private getIncludesFields(includeFields: string[]): string[] {\n        return ['path', 'properties', 'allowableOperations', 'permissions', ...includeFields]\n            .filter((element, index, array) => index === array.indexOf(element));\n    }\n\n    private handleError(error: Response) {\n        // in a real world app, we may send the error to some remote logging infrastructure\n        // instead of just logging it to the console\n        this.logService.error(error);\n        return Observable.throw(error || 'Server error');\n    }\n}\n",
    "/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { BaseEvent } from '@alfresco/adf-core';\nimport { MinimalNodeEntity, MinimalNodeEntryEntity } from 'alfresco-js-api';\n\nexport class NodeEntityEvent extends BaseEvent<MinimalNodeEntity> {\n\n    value: MinimalNodeEntity;\n\n    defaultPrevented: boolean;\n\n    constructor(entity: MinimalNodeEntity) {\n        super();\n        this.value = entity;\n    }\n}\n\nexport class NodeEntryEvent extends BaseEvent<MinimalNodeEntryEntity> {\n\n    value: MinimalNodeEntryEntity;\n\n    defaultPrevented: boolean;\n\n    constructor(entity: MinimalNodeEntryEntity) {\n        super();\n        this.value = entity;\n    }\n}\n",
    "/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport class ContentActionModel {\n    icon: string;\n    title: string;\n    handler: ContentActionHandler;\n    execute: Function;\n    target: string;\n    permission: string;\n    disableWithNoPermission: boolean = false;\n    disabled: boolean = false;\n\n    constructor(obj?: any) {\n        if (obj) {\n            this.icon = obj.icon;\n            this.title = obj.title;\n            this.handler = obj.handler;\n            this.execute = obj.execute;\n            this.target = obj.target;\n            this.permission = obj.permission;\n            this.disableWithNoPermission = obj.disableWithNoPermission;\n            this.disabled = obj.disabled;\n        }\n    }\n}\n\nexport enum ContentActionTarget {\n    Document = 'document',\n    Folder = 'folder',\n    All = 'all'\n}\n\nexport type ContentActionHandler = (obj: any, target?: any, permission?: string) => any;\n\nexport class DocumentActionModel extends ContentActionModel {\n    constructor(json?: any)  {\n        super(json);\n        this.target = 'document';\n    }\n}\n\nexport class FolderActionModel extends  ContentActionModel {\n    constructor(json?: any)  {\n        super(json);\n        this.target = 'folder';\n    }\n}\n",
    "/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport let presetsDefaultModel = {\n    '-trashcan-': [\n        {\n            key: '$thumbnail',\n            type: 'image',\n            srTitle: 'ADF-DOCUMENT-LIST.LAYOUT.THUMBNAIL',\n            sortable: false\n        },\n        {\n            key: 'name',\n            type: 'text',\n            title: 'ADF-DOCUMENT-LIST.LAYOUT.NAME',\n            cssClass: 'full-width ellipsis-cell',\n            sortable: true\n        },\n        {\n            key: 'path',\n            type: 'location',\n            title: 'ADF-DOCUMENT-LIST.LAYOUT.LOCATION',\n            sortable: true\n        },\n        {\n            key: 'content.sizeInBytes',\n            type: 'fileSize',\n            title: 'ADF-DOCUMENT-LIST.LAYOUT.SIZE',\n            sortable: true\n        },\n        {\n            key: 'archivedAt',\n            type: 'date',\n            title: 'ADF-DOCUMENT-LIST.LAYOUT.DELETED_ON',\n            format: 'timeAgo',\n            sortable: true\n        },\n        {\n            key: 'archivedByUser.displayName',\n            type: 'text',\n            title: 'ADF-DOCUMENT-LIST.LAYOUT.DELETED_BY',\n            sortable: true\n        }\n    ],\n    '-sites-': [\n        {\n            key: '$thumbnail',\n            type: 'image',\n            srTitle: 'ADF-DOCUMENT-LIST.LAYOUT.THUMBNAIL',\n            sortable: false\n        },\n        {\n            key: 'title',\n            type: 'text',\n            title: 'ADF-DOCUMENT-LIST.LAYOUT.NAME',\n            cssClass: 'full-width ellipsis-cell',\n            sortable: true\n        },\n        {\n            key: 'visibility',\n            type: 'text',\n            title: 'ADF-DOCUMENT-LIST.LAYOUT.STATUS',\n            sortable: true\n        }\n    ],\n    '-mysites-': [\n        {\n            key: '$thumbnail',\n            type: 'image',\n            srTitle: 'ADF-DOCUMENT-LIST.LAYOUT.THUMBNAIL',\n            sortable: false\n        },\n        {\n            key: 'title',\n            type: 'text',\n            title: 'ADF-DOCUMENT-LIST.LAYOUT.NAME',\n            cssClass: 'full-width ellipsis-cell',\n            sortable: true\n        },\n        {\n            key: 'visibility',\n            type: 'text',\n            title: 'ADF-DOCUMENT-LIST.LAYOUT.STATUS',\n            sortable: true\n        }\n    ],\n    '-favorites-': [\n        {\n            key: '$thumbnail',\n            type: 'image',\n            srTitle: 'ADF-DOCUMENT-LIST.LAYOUT.THUMBNAIL',\n            sortable: false\n        },\n        {\n            key: 'name',\n            type: 'text',\n            title: 'ADF-DOCUMENT-LIST.LAYOUT.NAME',\n            cssClass: 'full-width ellipsis-cell',\n            sortable: true\n        },\n        {\n            key: 'path',\n            type: 'location',\n            title: 'ADF-DOCUMENT-LIST.LAYOUT.LOCATION',\n            sortable: true\n        },\n        {\n            key: 'content.sizeInBytes',\n            type: 'fileSize',\n            title: 'ADF-DOCUMENT-LIST.LAYOUT.SIZE',\n            sortable: true\n        },\n        {\n            key: 'modifiedAt',\n            type: 'date',\n            title: 'ADF-DOCUMENT-LIST.LAYOUT.MODIFIED_ON',\n            format: 'timeAgo',\n            sortable: true\n        },\n        {\n            key: 'modifiedByUser.displayName',\n            type: 'text',\n            title: 'ADF-DOCUMENT-LIST.LAYOUT.MODIFIED_BY',\n            sortable: true\n        }\n    ],\n    '-recent-': [\n        {\n            key: '$thumbnail',\n            type: 'image',\n            srTitle: 'ADF-DOCUMENT-LIST.LAYOUT.THUMBNAIL',\n            sortable: false\n        },\n        {\n            key: 'name',\n            type: 'text',\n            title: 'ADF-DOCUMENT-LIST.LAYOUT.NAME',\n            cssClass: 'full-width ellipsis-cell',\n            sortable: true\n        },\n        {\n            key: 'path',\n            type: 'location',\n            title: 'ADF-DOCUMENT-LIST.LAYOUT.LOCATION',\n            cssClass: 'ellipsis-cell',\n            sortable: true\n        },\n        {\n            key: 'content.sizeInBytes',\n            type: 'fileSize',\n            title: 'ADF-DOCUMENT-LIST.LAYOUT.SIZE',\n            sortable: true\n        },\n        {\n            key: 'modifiedAt',\n            type: 'date',\n            title: 'ADF-DOCUMENT-LIST.LAYOUT.MODIFIED_ON',\n            format: 'timeAgo',\n            sortable: true\n        }\n    ],\n    '-sharedlinks-': [\n        {\n            key: '$thumbnail',\n            type: 'image',\n            srTitle: 'ADF-DOCUMENT-LIST.LAYOUT.THUMBNAIL',\n            sortable: false\n        },\n        {\n            key: 'name',\n            type: 'text',\n            title: 'ADF-DOCUMENT-LIST.LAYOUT.NAME',\n            cssClass: 'full-width ellipsis-cell',\n            sortable: true\n        },\n        {\n            key: 'path',\n            type: 'location',\n            title: 'ADF-DOCUMENT-LIST.LAYOUT.LOCATION',\n            cssClass: 'ellipsis-cell',\n            sortable: true\n        },\n        {\n            key: 'content.sizeInBytes',\n            type: 'fileSize',\n            title: 'ADF-DOCUMENT-LIST.LAYOUT.SIZE',\n            sortable: true\n        },\n        {\n            key: 'modifiedAt',\n            type: 'date',\n            title: 'ADF-DOCUMENT-LIST.LAYOUT.MODIFIED_ON',\n            format: 'timeAgo',\n            sortable: true\n        },\n        {\n            key: 'modifiedByUser.displayName',\n            type: 'text',\n            title: 'ADF-DOCUMENT-LIST.LAYOUT.MODIFIED_BY',\n            sortable: true\n        },\n        {\n            key: 'sharedByUser.displayName',\n            type: 'text',\n            title: 'ADF-DOCUMENT-LIST.LAYOUT.SHARED_BY',\n            sortable: true\n        }\n    ],\n    'default': [\n        {\n            key: '$thumbnail',\n            type: 'image',\n            srTitle: 'ADF-DOCUMENT-LIST.LAYOUT.THUMBNAIL',\n            sortable: false\n        },\n        {\n            key: 'name',\n            type: 'text',\n            title: 'ADF-DOCUMENT-LIST.LAYOUT.NAME',\n            cssClass: 'full-width ellipsis-cell',\n            sortable: true\n        },\n        {\n            key: 'content.sizeInBytes',\n            type: 'fileSize',\n            title: 'ADF-DOCUMENT-LIST.LAYOUT.SIZE',\n            sortable: true\n        },\n        {\n            key: 'modifiedAt',\n            type: 'date',\n            title: 'ADF-DOCUMENT-LIST.LAYOUT.MODIFIED_ON',\n            format: 'timeAgo',\n            sortable: true\n        },\n        {\n            key: 'modifiedByUser.displayName',\n            type: 'text',\n            title: 'ADF-DOCUMENT-LIST.LAYOUT.MODIFIED_BY',\n            sortable: true\n        }\n    ]\n};\n",
    "/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { DataColumn, DataRow, DataSorting, DataTableAdapter } from '@alfresco/adf-core';\nimport { TimeAgoPipe } from '@alfresco/adf-core';\nimport { DatePipe } from '@angular/common';\nimport { NodePaging } from 'alfresco-js-api';\nimport { PermissionStyleModel } from './../models/permissions-style.model';\nimport { DocumentListService } from './../services/document-list.service';\nimport { ShareDataRow } from './share-data-row.model';\n\nexport class ShareDataTableAdapter implements DataTableAdapter {\n\n    ERR_ROW_NOT_FOUND: string = 'Row not found';\n    ERR_COL_NOT_FOUND: string = 'Column not found';\n\n    private sorting: DataSorting;\n    private rows: DataRow[];\n    private columns: DataColumn[];\n\n    private filter: any;\n    private imageResolver: any;\n\n    thumbnails: boolean = false;\n    permissionsStyle: PermissionStyleModel[];\n    selectedRow: DataRow;\n\n    constructor(private documentListService: DocumentListService,\n                schema: DataColumn[] = [],\n                sorting?: DataSorting) {\n        this.rows = [];\n        this.columns = schema || [];\n        this.sorting = sorting;\n    }\n\n    getRows(): Array<DataRow> {\n        return this.rows;\n    }\n\n    // TODO: disable this api\n    setRows(rows: Array<DataRow>) {\n        this.rows = rows || [];\n        this.sort();\n    }\n\n    getColumns(): Array<DataColumn> {\n        return this.columns;\n    }\n\n    setColumns(columns: Array<DataColumn>) {\n        this.columns = columns || [];\n    }\n\n    getValue(row: DataRow, col: DataColumn): any {\n        if (!row) {\n            throw new Error(this.ERR_ROW_NOT_FOUND);\n        }\n        if (!col) {\n            throw new Error(this.ERR_COL_NOT_FOUND);\n        }\n        let dataRow: ShareDataRow = <ShareDataRow> row;\n        let value: any = row.getValue(col.key);\n        if (dataRow.cache[col.key] !== undefined) {\n            return dataRow.cache[col.key];\n        }\n\n        if (col.type === 'date') {\n            try {\n                const result = this.formatDate(col, value);\n                return dataRow.cacheValue(col.key, result);\n            } catch (err) {\n                console.error(`Error parsing date ${value} to format ${col.format}`);\n                return 'Error';\n            }\n        }\n\n        if (col.key === '$thumbnail') {\n\n            if (this.imageResolver) {\n                let resolved = this.imageResolver(row, col);\n                if (resolved) {\n                    return resolved;\n                }\n            }\n\n            const node = (<ShareDataRow> row).node;\n\n            if (node.entry.isFolder) {\n                return this.documentListService.getMimeTypeIcon('folder');\n            }\n\n            if (node.entry.isFile) {\n                if (this.thumbnails) {\n                    return this.documentListService.getDocumentThumbnailUrl(node);\n                }\n            }\n\n            if (node.entry.content) {\n                const mimeType = node.entry.content.mimeType;\n                if (mimeType) {\n                    return this.documentListService.getMimeTypeIcon(mimeType);\n                }\n            }\n\n            return this.documentListService.getDefaultMimeTypeIcon();\n        }\n\n        if (col.type === 'image') {\n\n            if (this.imageResolver) {\n                let resolved = this.imageResolver(row, col);\n                if (resolved) {\n                    return resolved;\n                }\n            }\n        }\n\n        return dataRow.cacheValue(col.key, value);\n    }\n\n    formatDate(col: DataColumn, value: any): string {\n        if (col.type === 'date') {\n            const format = col.format || 'medium';\n            if (format === 'timeAgo') {\n                const timeAgoPipe = new TimeAgoPipe();\n                return timeAgoPipe.transform(value);\n            } else {\n                const datePipe = new DatePipe('en-US');\n                return datePipe.transform(value, format);\n            }\n        }\n\n        return value;\n    }\n\n    getSorting(): DataSorting {\n        return this.sorting;\n    }\n\n    setSorting(sorting: DataSorting): void {\n        this.sorting = sorting;\n\n        this.sortRows(this.rows, this.sorting);\n    }\n\n    sort(key?: string, direction?: string): void {\n        let sorting = this.sorting || new DataSorting();\n        if (key) {\n            sorting.key = key;\n            sorting.direction = direction || 'asc';\n        }\n        this.setSorting(sorting);\n    }\n\n    setFilter(filter: any) {\n        this.filter = filter;\n    }\n\n    setImageResolver(resolver: any) {\n        this.imageResolver = resolver;\n    }\n\n    private sortRows(rows: DataRow[], sorting: DataSorting) {\n        const options: Intl.CollatorOptions = {};\n\n        if (sorting && sorting.key && rows && rows.length > 0) {\n\n            if (sorting.key.includes('sizeInBytes') || sorting.key === 'name') {\n                options.numeric = true;\n            }\n\n            rows.sort((a: ShareDataRow, b: ShareDataRow) => {\n                if (a.node.entry.isFolder !== b.node.entry.isFolder) {\n                    return a.node.entry.isFolder ? -1 : 1;\n                }\n\n                let left = a.getValue(sorting.key);\n                if (left) {\n                    left = (left instanceof Date) ? left.valueOf().toString() : left.toString();\n                } else {\n                    left = '';\n                }\n\n                let right = b.getValue(sorting.key);\n                if (right) {\n                    right = (right instanceof Date) ? right.valueOf().toString() : right.toString();\n                } else {\n                    right = '';\n                }\n\n                return sorting.direction === 'asc'\n                    ? left.localeCompare(right, undefined, options)\n                    : right.localeCompare(left, undefined, options);\n            });\n        }\n    }\n\n    public loadPage(page: NodePaging, merge: boolean = false) {\n        let rows = [];\n\n        if (page && page.list) {\n            let data = page.list.entries;\n            if (data && data.length > 0) {\n                rows = data.map(item => new ShareDataRow(item, this.documentListService, this.permissionsStyle));\n\n                if (this.filter) {\n                    rows = rows.filter(this.filter);\n                }\n\n                // Sort by first sortable or just first column\n                if (this.columns && this.columns.length > 0) {\n                    let sorting = this.getSorting();\n                    if (sorting) {\n                        this.sortRows(rows, sorting);\n                    } else {\n                        let sortable = this.columns.filter(c => c.sortable);\n                        if (sortable.length > 0) {\n                            this.sort(sortable[0].key, 'asc');\n                        } else {\n                            this.sort(this.columns[0].key, 'asc');\n                        }\n                    }\n                }\n            }\n        }\n\n        if (merge) {\n            this.rows = this.rows.concat(rows);\n        } else {\n            this.rows = rows;\n        }\n    }\n}\n",
    "/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { DataRow } from '@alfresco/adf-core';\nimport { ObjectUtils } from '@alfresco/adf-core';\nimport { MinimalNode, MinimalNodeEntity } from 'alfresco-js-api';\nimport { PermissionStyleModel } from './../models/permissions-style.model';\nimport { DocumentListService } from './../services/document-list.service';\n\nexport class ShareDataRow implements DataRow {\n\n    static ERR_OBJECT_NOT_FOUND: string = 'Object source not found';\n\n    cache: { [key: string]: any } = {};\n    isSelected: boolean = false;\n    isDropTarget: boolean;\n    cssClass: string = '';\n\n    get node(): MinimalNodeEntity {\n        return this.obj;\n    }\n\n    constructor(private obj: MinimalNodeEntity, private documentListService: DocumentListService, private permissionsStyle: PermissionStyleModel[]) {\n        if (!obj) {\n            throw new Error(ShareDataRow.ERR_OBJECT_NOT_FOUND);\n        }\n\n        this.isDropTarget = this.isFolderAndHasPermissionToUpload(obj);\n\n        if (permissionsStyle) {\n            this.cssClass = this.getPermissionClass(obj);\n        }\n    }\n\n    getPermissionClass(nodeEntity: MinimalNodeEntity): string {\n        let permissionsClasses = '';\n\n        this.permissionsStyle.forEach((currentPermissionsStyle: PermissionStyleModel) => {\n\n            if (this.applyPermissionStyleToFolder(nodeEntity.entry, currentPermissionsStyle) || this.applyPermissionStyleToFile(nodeEntity.entry, currentPermissionsStyle)) {\n\n                if (this.documentListService.hasPermission(nodeEntity.entry, currentPermissionsStyle.permission)) {\n                    permissionsClasses += ` ${currentPermissionsStyle.css}`;\n                }\n            }\n\n        });\n\n        return permissionsClasses;\n    }\n\n    private applyPermissionStyleToFile(node: MinimalNode, currentPermissionsStyle: PermissionStyleModel): boolean {\n        return (currentPermissionsStyle.isFile && node.isFile);\n    }\n\n    private applyPermissionStyleToFolder(node: MinimalNode, currentPermissionsStyle: PermissionStyleModel): boolean {\n        return (currentPermissionsStyle.isFolder && node.isFolder);\n    }\n\n    isFolderAndHasPermissionToUpload(obj: MinimalNodeEntity): boolean {\n        return this.isFolder(obj) && this.documentListService.hasPermission(obj.entry, 'create');\n    }\n\n    isFolder(obj: MinimalNodeEntity): boolean {\n        return obj.entry && obj.entry.isFolder;\n    }\n\n    cacheValue(key: string, value: any): any {\n        this.cache[key] = value;\n        return value;\n    }\n\n    getValue(key: string): any {\n        if (this.cache[key] !== undefined) {\n            return this.cache[key];\n        }\n        return ObjectUtils.getValue(this.obj.entry, key);\n    }\n\n    hasValue(key: string): boolean {\n        return this.getValue(key) !== undefined;\n    }\n}\n",
    "/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { DataTableModule, PipeModule } from '@alfresco/adf-core';\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { TranslateModule } from '@ngx-translate/core';\n\nimport { MaterialModule } from '../material.module';\nimport { WebscriptComponent } from './webscript.component';\n\n@NgModule({\n    imports: [\n        CommonModule,\n        PipeModule,\n        MaterialModule,\n        DataTableModule,\n        TranslateModule\n    ],\n    exports: [\n        WebscriptComponent\n    ],\n    declarations: [\n        WebscriptComponent\n    ]\n})\nexport class WebScriptModule {}\n",
    "/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ObjectDataTableAdapter } from '@alfresco/adf-core';\nimport { AlfrescoApiService, LogService } from '@alfresco/adf-core';\nimport { Component, EventEmitter, Input, OnChanges, Output } from '@angular/core';\n\n/**\n * <adf-webscript-get [scriptPath]=\"string\"\n *                         [scriptArgs]=\"Object\"\n *                         [contextRoot]=\"string\"\n *                         [servicePath]=\"string\"\n *                         [contentType]=\"JSON|HTML|DATATABLE\"\n *                         (success)=\"customMethod($event)>\n * </adf-webscript-get>\n *\n * This component, provide a get webscript viewer\n *\n * @InputParam {string} scriptPath path to Web Script (as defined by Web Script)\n * @InputParam {Object} scriptArgs arguments to pass to Web Script\n * @InputParam {string} contextRoot path where application is deployed default value 'alfresco'\n * @InputParam {string} servicePath path where Web Script service is mapped default value 'service'\n * @InputParam {string} contentType JSON | HTML | DATATABLE | TEXT\n *\n * @Output - success - The event is emitted when the data are recived\n *\n */\n@Component({\n    selector: 'adf-webscript-get',\n    template: `<div *ngIf=\"showData\">\n    <div *ngIf=\"contentType === 'JSON'\" id=\"webscript-data-JSON\">{{data | json}}</div>\n    <div *ngIf=\"contentType === 'HTML'\" id=\"webscript-data-HTML\" [innerHTML]=\"data\"></div>\n    <div *ngIf=\"contentType === 'TEXT'\" id=\"webscript-data-TEXT\">{{data}}</div>\n    <div *ngIf=\"isDataTableContent()\">\n        <adf-datatable id=\"webscript-datatable-wrapper\" [data]=\"data\"></adf-datatable>\n        <div>\n            <div *ngIf=\"showError\" id=\"error\">{{'WEBSCRIPT.ERROR' | translate: {\n                data: data,\n                contentType: contentType\n                }\n                }}\n            </div>\n        </div>\n    </div>\n</div>\n`\n})\nexport class WebscriptComponent implements OnChanges {\n\n    /** (required) Path to the webscript (as defined by webscript). */\n    @Input()\n    scriptPath: string;\n\n    /** Arguments to pass to the webscript. */\n    @Input()\n    scriptArgs: any;\n\n    /** Toggles whether to show or hide the data. */\n    @Input()\n    showData: boolean = true;\n\n    /** Path where the application is deployed */\n    @Input()\n    contextRoot: string = 'alfresco';\n\n    /** Path that the webscript service is mapped to. */\n    @Input()\n    servicePath: string = 'service';\n\n    /** Content type to interpret the data received from the webscript.\n     * Can be \"JSON\" , \"HTML\" , \"DATATABLE\" or \"TEXT\"\n     */\n    @Input()\n    contentType: string = 'TEXT';\n\n    /** Emitted when the operation succeeds. You can get the plain data from\n     * the webscript through the **success** event parameter and use it as you\n     * need in your application.\n     */\n    @Output()\n    success = new EventEmitter();\n\n    data: any = undefined;\n    showError: boolean = false;\n\n    constructor(private apiService: AlfrescoApiService,\n                private logService: LogService) {\n    }\n\n    ngOnChanges(changes) {\n        if (this.showData) {\n            this.clean();\n        }\n\n        return new Promise((resolve, reject) => {\n            this.apiService.getInstance().webScript.executeWebScript('GET', this.scriptPath, this.scriptArgs, this.contextRoot, this.servicePath).then((webScriptdata) => {\n\n                this.data = webScriptdata;\n\n                if (this.showData) {\n                    if (this.contentType === 'DATATABLE') {\n                        this.data = this.showDataAsDataTable(webScriptdata);\n                    }\n                }\n\n                this.success.emit(this.data);\n\n                resolve();\n            }, (error) => {\n                this.logService.log('Error' + error);\n                reject();\n            });\n        });\n    }\n\n    /**\n     * show the data in a ng2-alfresco-datatable\n     *\n     * @param data\n     *\n     * @retutns the data as datatable\n     */\n    showDataAsDataTable(data: any) {\n        let datatableData: any = null;\n        try {\n\n            if (!data.schema) {\n                data.schema = ObjectDataTableAdapter.generateSchema(data.data);\n            }\n\n            if (data.schema && data.schema.length > 0) {\n                this.data = new ObjectDataTableAdapter(data.data, data.schema);\n            }\n\n        } catch (e) {\n            this.logService.error('error during the cast as datatable');\n        }\n\n        return datatableData;\n    }\n\n    clean() {\n        this.data = undefined;\n    }\n\n    isDataTableContent() {\n        return this.contentType === 'DATATABLE';\n    }\n}\n",
    "/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { TranslateModule } from '@ngx-translate/core';\n\nimport { MaterialModule } from '../material.module';\nimport { TagActionsComponent } from './tag-actions.component';\nimport { TagListComponent } from './tag-list.component';\nimport { TagNodeListComponent } from './tag-node-list.component';\nimport { TagService } from './services/tag.service';\n\n@NgModule({\n    imports: [\n        CommonModule,\n        MaterialModule,\n        TranslateModule,\n        FormsModule,\n        ReactiveFormsModule\n    ],\n    exports: [\n        TagActionsComponent,\n        TagListComponent,\n        TagNodeListComponent\n    ],\n    declarations: [\n        TagActionsComponent,\n        TagListComponent,\n        TagNodeListComponent\n    ],\n    providers: [\n        TagService\n    ]\n})\nexport class TagModule {}\n",
    "/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Component, EventEmitter, Input, OnChanges, Output, ViewEncapsulation } from '@angular/core';\nimport { TagService } from './services/tag.service';\n\n/**\n *\n * This component, ShowNodeTag a list of the tag on relative a node\n */\n\n@Component({\n    selector: 'adf-tag-node-list',\n    template: `<mat-chip-list>\n    <mat-chip class=\"adf-tag-chips adf-primary-background-color\" *ngFor=\"let currentEntry of tagsEntries; let idx = index\">\n        <span id=\"tag_name_{{idx}}\">{{currentEntry.entry.tag}}</span>\n        <button class=\"adf-tag-chips-delete\" id=\"tag_delete_{{idx}}\" type=\"button\" (click)=\"removeTag(currentEntry.entry.id)\">\n            <mat-icon class=\"adf-tag-chips-delete-icon adf-primary-contrast-text-color\" matChipRemove>cancel</mat-icon>\n        </button>\n    </mat-chip>\n</mat-chip-list>\n`,\n    styles: [`.adf-tag-chips-delete{overflow:visible;cursor:pointer;height:17px;width:20px;float:right;border:0;background:0 0;padding:0;margin:-1px 0 0 10px}.adf-tag-chips-delete-icon{font-size:20px;background-repeat:no-repeat;display:inline-block;fill:currentColor;height:20px;width:20px}`],\n    encapsulation: ViewEncapsulation.None\n})\nexport class TagNodeListComponent implements OnChanges {\n    /** The identifier of a node. */\n    @Input()\n    nodeId: string;\n\n    tagsEntries: any;\n\n    /** Emitted when a tag is selected. */\n    @Output()\n    results = new EventEmitter();\n\n    /**\n     * Constructor\n     * @param tagService\n     */\n    constructor(private tagService: TagService) {\n        this.tagService.refresh.subscribe(() => {\n            this.refreshTag();\n        });\n    }\n\n    ngOnChanges() {\n        return this.refreshTag();\n    }\n\n    refreshTag() {\n        if (this.nodeId) {\n            this.tagService.getTagsByNodeId(this.nodeId).subscribe((data) => {\n                this.tagsEntries = data.list.entries;\n                this.results.emit(this.tagsEntries);\n            });\n        }\n    }\n\n    removeTag(tag: string) {\n        this.tagService.removeTag(this.nodeId, tag).subscribe(() => {\n            this.refreshTag();\n        });\n    }\n}\n",
    "/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Component, EventEmitter, OnInit, Output, ViewEncapsulation } from '@angular/core';\nimport { TagService } from './services/tag.service';\n\n/**\n *\n * This component provide a list of all the tag inside the ECM\n */\n\n@Component({\n    selector: 'adf-tag-list',\n    template: `<mat-list>\n    <mat-list-item *ngFor=\"let currentEntry of tagsEntries; let idx = index\">\n        <div class=\"adf-list-tag\" id=\"tag_name_{{idx}}\">{{currentEntry.entry.tag}}</div>\n    </mat-list-item>\n</mat-list>\n`,\n    styles: [`.adf-list-tag{padding:16px;font-size:16px}`],\n    encapsulation: ViewEncapsulation.None\n})\nexport class TagListComponent implements OnInit {\n\n    tagsEntries: any;\n\n    /** Emitted when a tag is selected. */\n    @Output()\n    result = new EventEmitter();\n\n    /**\n     * Constructor\n     * @param tagService\n     */\n    constructor(private tagService: TagService) {\n        this.tagService.refresh.subscribe(() => {\n            this.refreshTag();\n        });\n    }\n\n    ngOnInit() {\n        return this.refreshTag();\n    }\n\n    refreshTag() {\n        this.tagService.getAllTheTags().subscribe((data) => {\n            this.tagsEntries = data.list.entries;\n            this.result.emit(this.tagsEntries);\n        });\n    }\n}\n",
    "/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { TranslationService } from '@alfresco/adf-core';\nimport { Component, EventEmitter, Input, OnChanges, Output, ViewEncapsulation } from '@angular/core';\nimport { TagService } from './services/tag.service';\n\n/**\n *\n * This component, provide a list of the tags relative a node with actions button to add or remove new tag\n */\n\n@Component({\n    selector: 'adf-tag-node-actions-list',\n    template: `<mat-list>\n    <mat-list-item *ngFor=\"let currentEntry of tagsEntries; let idx = index\">\n        <div class=\"adf-tag-actions-container\" id=\"tag_delete_{{idx}}\" (click)=\"removeTag(currentEntry.entry.id)\">\n            <div class=\"adf-tag-actions-delete-text\" id=\"tag_name_{{idx}}\">\n                {{currentEntry.entry.tag}}\n            </div>\n            <mat-icon class=\"adf-tag-actions-delete-icon\">delete</mat-icon>\n        </div>\n    </mat-list-item>\n</mat-list>\n<table class=\"adf-full-width\" cellspacing=\"0\">\n    <tr>\n        <td>\n            <mat-form-field class=\"adf-full-width\">\n                <input matInput placeholder=\"{{'TAG.LABEL.NEWTAG' | translate }}\"\n                       type=\"text\"\n                       (keypress)=\"cleanErrorMsg()\"\n                       [(ngModel)]=\"newTagName\"\n                       id=\"new-tag-text\"/>\n                <mat-hint data-automation-id=\"errorMessage\" *ngIf=\"error\" [ngStyle]=\"{'color': 'red'}\" align=\"start\">{{errorMsg}}</mat-hint>\n            </mat-form-field>\n        </td>\n        <td>\n            <button class=\"adf-full-width\" color=\"primary\" id=\"add-tag\" (click)=\"addTag()\" [disabled]=\"disableAddTag\"\n                    mat-raised-button>\n                {{'TAG.BUTTON.ADD' | translate }}\n            </button>\n        </td>\n    </tr>\n</table>\n`,\n    styles: [`.adf-full-width{width:100%}.adf-tag-actions-delete-icon{float:right;cursor:pointer}.adf-tag-actions-delete-text{font-size:16px;float:left}.adf-tag-actions-container{padding:8px 0;height:20px}`],\n    encapsulation: ViewEncapsulation.None\n})\nexport class TagActionsComponent implements OnChanges {\n\n    /** The identifier of a node. */\n    @Input()\n    nodeId: string;\n\n    /** Emitted when a tag is added successfully. */\n    @Output()\n    successAdd: EventEmitter<any> = new EventEmitter();\n\n    /** Emitted when an error occurs. */\n    @Output()\n    error: EventEmitter<any> = new EventEmitter();\n\n    /** Emitted when an action is chosen. */\n    @Output()\n    result = new EventEmitter();\n\n    newTagName: string;\n\n    tagsEntries: any;\n\n    errorMsg: string;\n\n    disableAddTag: boolean = true;\n\n    constructor(private tagService: TagService, private translateService: TranslationService) {\n        this.tagService.refresh.subscribe(() => {\n            this.refreshTag();\n        });\n    }\n\n    ngOnChanges() {\n        return this.refreshTag();\n    }\n\n    refreshTag() {\n        if (this.nodeId) {\n            this.tagService.getTagsByNodeId(this.nodeId).subscribe((data) => {\n                this.tagsEntries = data.list.entries;\n                this.disableAddTag = false;\n                this.result.emit(this.tagsEntries);\n            }, () => {\n                this.tagsEntries = null;\n                this.disableAddTag = true;\n                this.result.emit(this.tagsEntries);\n            });\n        }\n    }\n\n    addTag() {\n        if (this.searchTag(this.newTagName)) {\n            this.translateService.get('TAG.MESSAGES.EXIST').subscribe((error) => {\n                this.errorMsg = error;\n            });\n            this.error.emit(this.errorMsg);\n        } else {\n            this.tagService.addTag(this.nodeId, this.newTagName).subscribe(() => {\n                this.newTagName = '';\n                this.successAdd.emit(this.nodeId);\n            });\n        }\n    }\n\n    searchTag(searchTagName: string) {\n        if (this.tagsEntries) {\n            return this.tagsEntries.find((currentTag) => {\n                return (searchTagName === currentTag.entry.tag);\n            });\n        }\n    }\n\n    cleanErrorMsg() {\n        this.errorMsg = '';\n    }\n\n    removeTag(tag: string) {\n        this.tagService.removeTag(this.nodeId, tag);\n    }\n}\n",
    "/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { AlfrescoApiService, LogService } from '@alfresco/adf-core';\nimport { EventEmitter, Injectable, Output } from '@angular/core';\nimport { Observable } from 'rxjs/Observable';\nimport 'rxjs/add/observable/throw';\n\n@Injectable()\nexport class TagService {\n\n    @Output()\n    refresh = new EventEmitter();\n\n    constructor(private apiService: AlfrescoApiService,\n                private logService: LogService) {\n    }\n\n    /**\n     * Gets a list of tags added to a node.\n     * @param nodeId ID of the target node\n     * @returns TagPaging object (defined in JSAPI) containing the tags\n     */\n    getTagsByNodeId(nodeId: string): any {\n        return Observable.fromPromise(this.apiService.getInstance().core.tagsApi.getNodeTags(nodeId))\n            .catch(err => this.handleError(err));\n    }\n\n    /**\n     * Gets a list of all the tags already defined in the repository.\n     * @returns TagPaging object (defined in JSAPI) containing the tags\n     */\n    getAllTheTags() {\n        return Observable.fromPromise(this.apiService.getInstance().core.tagsApi.getTags())\n            .catch(err => this.handleError(err));\n    }\n\n    /**\n     * Adds a tag to a node.\n     * @param nodeId ID of the target node\n     * @param tagName Name of the tag to add\n     * @returns TagEntry object (defined in JSAPI) with details of the new tag\n     */\n    addTag(nodeId: string, tagName: string): any {\n        let alfrescoApi: any = this.apiService.getInstance();\n        let tagBody = new alfrescoApi.core.TagBody();\n        tagBody.tag = tagName;\n\n        let promiseAdd = Observable.fromPromise(this.apiService.getInstance().core.tagsApi.addTag(nodeId, tagBody));\n\n        promiseAdd.subscribe((data) => {\n            this.refresh.emit(data);\n        }, (err) => {\n            this.handleError(err);\n        });\n\n        return promiseAdd;\n    }\n\n    /**\n     * Removes a tag from a node.\n     * @param nodeId ID of the target node\n     * @param tag Name of the tag to remove\n     * @returns Null object when the operation completes\n     */\n    removeTag(nodeId: string, tag: string): any {\n        let promiseRemove = Observable.fromPromise(this.apiService.getInstance().core.tagsApi.removeTag(nodeId, tag));\n\n        promiseRemove.subscribe((data) => {\n            this.refresh.emit(data);\n        }, (err) => {\n            this.handleError(err);\n        });\n\n        return promiseRemove;\n    }\n\n    private handleError(error: any) {\n        this.logService.error(error);\n        return Observable.throw(error || 'Server error');\n    }\n}\n",
    "/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { MaterialModule } from '../material.module';\n\nimport { LikeComponent } from './like.component';\nimport { RatingComponent } from './rating.component';\n\n@NgModule({\n    imports: [\n        CommonModule,\n        MaterialModule\n    ],\n    exports: [\n        RatingComponent,\n        LikeComponent\n    ],\n    declarations: [\n        RatingComponent,\n        LikeComponent\n    ]\n})\nexport class SocialModule {}\n",
    "/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Component, EventEmitter, Input, OnChanges, Output, ViewEncapsulation } from '@angular/core';\nimport { RatingService } from './services/rating.service';\n\n@Component({\n    selector: 'adf-like',\n    styles: [`.adf-like-container{overflow:hidden;width:100%}.adf-like-container .adf-like{padding:5px;cursor:pointer;float:left;margin:5px 0 5px 5px}.adf-like-container .adf-like-select{cursor:pointer;color:#2196f3}.adf-like-container .adf-like-grey,.adf-like-container .adf-like-select:hover{cursor:pointer;color:grey}.adf-like-container .adf-like-grey:hover{cursor:pointer;color:#2196f3}.adf-like-container .adf-like-counter{float:left;padding:13px 0 0}.adf-like-container .adf-left{float:left;padding:13px 0 0 4px}`],\n    template: `<div id=\"adf-like-container\" class=\"adf-like-container\">\n    <div class=\"adf-like\">\n        <span id=\"adf-like-{{nodeId}}\" [ngClass]=\"{'adf-like-select': isLike ,'adf-like-grey': !isLike  }\"\n              (click)=\"likeClick()\">\n            <mat-icon>thumb_up</mat-icon>\n        </span>\n    </div>\n    <div id=\"adf-like-counter\" class=\"adf-like-counter\">{{likesCounter}}</div>\n    <div class=\"adf-left\" *ngIf=\"likesCounter<=1\">Like</div>\n    <div class=\"adf-left\" *ngIf=\"likesCounter>1\">Likes</div>\n</div>\n`,\n    encapsulation: ViewEncapsulation.None\n})\nexport class LikeComponent implements OnChanges {\n    /** Identifier of a node to apply likes to. */\n    @Input()\n    nodeId: string;\n\n    /** Emitted when the \"vote\" gets changed. */\n    @Output()\n    changeVote = new EventEmitter();\n\n    likesCounter: number = 0;\n    ratingType: string = 'likes';\n    isLike: boolean = false;\n\n    constructor(private ratingService: RatingService) {}\n\n    ngOnChanges() {\n        this.clean();\n\n        this.ratingService.getRating(this.nodeId, this.ratingType).subscribe(\n            (data) => {\n                if (data.entry.aggregate) {\n                    this.likesCounter = data.entry.aggregate.numberOfRatings;\n                    if (data.entry.ratedAt) {\n                        this.isLike = true;\n                    }\n                }\n            }\n        );\n    }\n\n    likeClick() {\n        if (this.isLike) {\n            this.ratingService.deleteRating(this.nodeId, this.ratingType).subscribe(\n                () => {\n                    this.likesCounter -= 1;\n                    this.isLike = false;\n                    this.changeVote.emit(this.likesCounter);\n                }\n            );\n        } else {\n            this.ratingService.postRating(this.nodeId, this.ratingType, true).subscribe(\n                (data) => {\n                    this.likesCounter = data.entry.aggregate.numberOfRatings;\n                    this.isLike = true;\n                    this.changeVote.emit(this.likesCounter);\n                }\n            );\n        }\n    }\n\n    clean() {\n        this.isLike = false;\n        this.likesCounter = 0;\n    }\n}\n",
    "/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Component, EventEmitter, Input, OnChanges, Output, ViewEncapsulation } from '@angular/core';\nimport { RatingService } from './services/rating.service';\n\n@Component({\n    selector: 'adf-rating',\n    styles: [`.adf-rating-container{overflow:hidden;width:100%}.adf-rating-container .adf-rating-star{float:left;-webkit-transition:all .3s;transition:all .3s;padding:1px;cursor:pointer}.adf-rating-container .adf-rating-star .mat-list-item-content{padding:0 2px!important}.adf-rating-container .adf-colored-star{color:#ffe944}.adf-rating-container .adf-grey-star{color:grey}.adf-rating-container .adf-stars-container{padding:0!important;margin:0!important;display:inline-block}.adf-rating-container .adf-rating-star:hover{-webkit-transform:rotate(13deg) scale(1.2);transform:rotate(13deg) scale(1.2)}`],\n    template: `<mat-list id=\"adf-rating-container\" class=\"adf-rating-container\">\n    <mat-list-item class=\"adf-rating-star\" *ngFor=\"let currentRate of stars; let idx = index\">\n            <span id=\"adf-rate-{{idx}}\">\n                <mat-icon id=\"adf-grey-star-{{idx}}\" *ngIf=\"currentRate.fill\" class=\"adf-colored-star\"\n                         (click)=\"updateVote(idx + 1)\">star_rate\n                </mat-icon>\n                <mat-icon id=\"adf-colored-star-{{idx}}\" *ngIf=\"!currentRate.fill\" class=\"adf-grey-star\"\n                         (click)=\"updateVote(idx + 1)\">star_border\n                </mat-icon>\n            </span>\n    </mat-list-item>\n</mat-list>\n`,\n    encapsulation: ViewEncapsulation.None\n})\nexport class RatingComponent implements OnChanges {\n\n    /** Identifier of the node to apply the rating to. */\n    @Input()\n    nodeId: string;\n\n    average: number = 0;\n\n    ratingType: string = 'fiveStar';\n\n    /** Emitted when the \"vote\" gets changed. */\n    @Output()\n    changeVote = new EventEmitter();\n\n    stars: Array<any> = [];\n\n    constructor(private ratingService: RatingService) {\n    }\n\n    ngOnChanges() {\n        let ratingObserver = this.ratingService.getRating(this.nodeId, this.ratingType);\n\n        ratingObserver.subscribe(\n            (data) => {\n                if (data.entry.aggregate) {\n                    this.average = data.entry.aggregate.average;\n                    this.calculateStars();\n                }\n            }\n        );\n\n        return ratingObserver;\n    }\n\n    calculateStars() {\n        this.stars = [];\n\n        for (let i = 0; i < 5; i++) {\n            if (i < this.average) {\n                this.stars.push({fill: true});\n            } else {\n                this.stars.push({fill: false});\n            }\n        }\n\n        this.changeVote.emit(this.average);\n    }\n\n    updateVote(vote: number) {\n        this.ratingService.postRating(this.nodeId, this.ratingType, vote).subscribe(\n            (data) => {\n                if (data.entry.aggregate) {\n                    if (this.average !== data.entry.aggregate.average) {\n                        this.average = data.entry.aggregate.average;\n                        this.calculateStars();\n                    }\n                }\n            }\n        );\n    }\n}\n",
    "/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { AlfrescoApiService } from '@alfresco/adf-core';\nimport { Injectable } from '@angular/core';\nimport { Response } from '@angular/http';\nimport { RatingBody } from 'alfresco-js-api';\nimport { Observable } from 'rxjs/Observable';\nimport 'rxjs/add/observable/throw';\n\n@Injectable()\nexport class RatingService {\n\n    constructor(private apiService: AlfrescoApiService) {\n    }\n\n    /**\n     * Gets the current user's rating for a node.\n     * @param nodeId Node to get the rating from\n     * @param ratingType Type of rating (can be \"likes\" or \"fiveStar\")\n     */\n    getRating(nodeId: string, ratingType: any): any {\n        return Observable.fromPromise(this.apiService.getInstance().core.ratingsApi.getRating(nodeId, ratingType))\n            .map(res => res)\n            .catch(this.handleError);\n    }\n\n    /**\n     * Adds the current user's rating for a node.\n     * @param nodeId Target node for the rating\n     * @param ratingType Type of rating (can be \"likes\" or \"fiveStar\")\n     * @param vote Rating value (boolean for \"likes\", numeric 0..5 for \"fiveStar\")\n     */\n    postRating(nodeId: string, ratingType: any, vote: any): any {\n        let ratingBody: RatingBody = {\n            'id': ratingType,\n            'myRating': vote\n        };\n        return Observable.fromPromise(this.apiService.getInstance().core.ratingsApi.rate(nodeId, ratingBody))\n            .map(res => res)\n            .catch(this.handleError);\n    }\n\n    /**\n     * Removes the current user's rating for a node.\n     * @param nodeId Target node\n     * @param ratingType Type of rating to remove (can be \"likes\" or \"fiveStar\")\n     */\n    deleteRating(nodeId: string, ratingType: any): any {\n        return Observable.fromPromise(this.apiService.getInstance().core.ratingsApi.removeRating(nodeId, ratingType))\n            .map(res => res)\n            .catch(this.handleError);\n    }\n\n    private handleError(error: Response): any {\n        console.error(error);\n        return Observable.throw(error || 'Server error');\n    }\n}\n",
    "/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { MaterialModule } from '../material.module';\n\nimport { NodeDownloadDirective } from './node-download.directive';\nimport { NodeSharedDirective } from './node-share.directive';\nimport { NodeLockDirective } from './node-lock.directive';\n\n@NgModule({\n    imports: [\n        CommonModule,\n        MaterialModule\n    ],\n    declarations: [\n        NodeDownloadDirective,\n        NodeSharedDirective,\n        NodeLockDirective\n    ],\n    exports: [\n        NodeDownloadDirective,\n        NodeSharedDirective,\n        NodeLockDirective\n    ]\n})\nexport class ContentDirectiveModule {\n}\n",
    "/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/* tslint:disable:no-input-rename  */\n\nimport { Directive, ElementRef, Renderer2, HostListener, Input, AfterViewInit } from '@angular/core';\nimport { MinimalNodeEntryEntity } from 'alfresco-js-api';\nimport { PermissionsEnum, ContentService } from '@alfresco/adf-core';\nimport { ContentNodeDialogService } from '../content-node-selector/content-node-dialog.service';\n\n@Directive({\n    selector: '[adf-node-lock]'\n})\nexport class NodeLockDirective implements AfterViewInit {\n\n    @Input('adf-node-lock')\n    node: MinimalNodeEntryEntity;\n\n    @HostListener('click', [ '$event' ])\n    onClick(event) {\n        event.preventDefault();\n        this.contentNodeDialogService.openLockNodeDialog(this.node);\n    }\n\n    constructor(\n        public element: ElementRef,\n        private renderer: Renderer2,\n        private contentService: ContentService,\n        private contentNodeDialogService: ContentNodeDialogService\n    ) {}\n\n    ngAfterViewInit() {\n        const hasPermission = this.contentService.hasPermission(this.node, PermissionsEnum.LOCK);\n        this.renderer.setProperty(this.element.nativeElement, 'disabled', !hasPermission);\n    }\n}\n",
    "/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { MatDialog } from '@angular/material';\nimport { EventEmitter, Injectable, Output } from '@angular/core';\nimport { ContentService } from '@alfresco/adf-core';\nimport { Subject } from 'rxjs/Subject';\nimport { Observable } from 'rxjs/Observable';\nimport { ShareDataRow } from '../document-list/data/share-data-row.model';\nimport { MinimalNodeEntryEntity, SitePaging } from 'alfresco-js-api';\nimport { DataColumn, SitesService, TranslationService, PermissionsEnum } from '@alfresco/adf-core';\nimport { DocumentListService } from '../document-list/services/document-list.service';\nimport { ContentNodeSelectorComponent } from './content-node-selector.component';\nimport { ContentNodeSelectorComponentData } from './content-node-selector.component-data.interface';\nimport { NodeLockDialogComponent } from '../dialogs/node-lock.dialog';\nimport 'rxjs/operator/switchMap';\n\n@Injectable()\nexport class ContentNodeDialogService {\n\n    @Output()\n    error: EventEmitter<any> = new EventEmitter<any>();\n\n    constructor(private dialog: MatDialog,\n                private contentService: ContentService,\n                private documentListService: DocumentListService,\n                private siteService: SitesService,\n                private translation: TranslationService) {\n    }\n\n    /** Opens a file browser at a chosen folder location. */\n    /** @param folderNodeId ID of the folder to use */\n    openFileBrowseDialogByFolderId(folderNodeId: string): Observable<MinimalNodeEntryEntity[]> {\n        return this.documentListService.getFolderNode(folderNodeId).switchMap((node: MinimalNodeEntryEntity) => {\n            return this.openUploadFileDialog('Choose', node);\n        });\n    }\n\n    /**\n     * Opens a lock node dialog\n     *\n     * @param contentEntry Node to lock\n     */\n    public openLockNodeDialog(contentEntry: MinimalNodeEntryEntity): Subject<string> {\n        const observable: Subject<string> = new Subject<string>();\n\n        if (this.contentService.hasPermission(contentEntry, PermissionsEnum.LOCK)) {\n            this.dialog.open(NodeLockDialogComponent, {\n                data: {\n                    node: contentEntry,\n                    onError: (error) => {\n                        this.error.emit(error);\n                        observable.error(error);\n                    }\n                },\n                width: '400px'\n            });\n        } else {\n            observable.error('OPERATION.FAIL.NODE.NO_PERMISSION');\n        }\n\n        return observable;\n    }\n\n    /** Opens a file browser at a chosen site location. */\n    openFileBrowseDialogBySite(): Observable<MinimalNodeEntryEntity[]> {\n        return this.siteService.getSites().switchMap((response: SitePaging) => {\n            return this.openFileBrowseDialogByFolderId(response.list.entries[0].entry.guid);\n        });\n    }\n\n    /** Opens a folder browser at a chosen site location. */\n    openFolderBrowseDialogBySite(): Observable<MinimalNodeEntryEntity[]> {\n        return this.siteService.getSites().switchMap((response: SitePaging) => {\n            return this.openFolderBrowseDialogByFolderId(response.list.entries[0].entry.guid);\n        });\n    }\n\n    /** Opens a folder browser at a chosen folder location. */\n    /** @param folderNodeId ID of the folder to use */\n    openFolderBrowseDialogByFolderId(folderNodeId: string): Observable<MinimalNodeEntryEntity[]> {\n        return this.documentListService.getFolderNode(folderNodeId).switchMap((node: MinimalNodeEntryEntity) => {\n            return this.openUploadFolderDialog('Choose', node);\n        });\n    }\n\n    /** Opens a dialog to copy or move an item to a new location. */\n    /** @param action Name of the action (eg, \"Copy\" or \"Move\") to show in the title */\n\n    /** @param contentEntry Item to be copied or moved */\n    /** @param permission Permission for the operation */\n    openCopyMoveDialog(action: string, contentEntry: MinimalNodeEntryEntity, permission?: string): Observable<MinimalNodeEntryEntity[]> {\n        if (this.contentService.hasPermission(contentEntry, permission)) {\n\n            const select = new Subject<MinimalNodeEntryEntity[]>();\n            select.subscribe({\n                complete: this.close.bind(this)\n            });\n\n            const title = this.getTitleTranslation(action, contentEntry.name);\n\n            const data: ContentNodeSelectorComponentData = {\n                title: title,\n                actionName: action,\n                currentFolderId: contentEntry.parentId,\n                imageResolver: this.imageResolver.bind(this),\n                rowFilter: this.rowFilter.bind(this, contentEntry.id),\n                isSelectionValid: this.isCopyMoveSelectionValid.bind(this),\n                select: select\n            };\n\n            this.openContentNodeDialog(data, 'adf-content-node-selector-dialog', '630px');\n\n            return select;\n        } else {\n            let errors = new Error(JSON.stringify({ error: { statusCode: 403 } }));\n            return Observable.throw(errors);\n        }\n    }\n\n    /** Gets the translation of the dialog title. */\n\n    /** @param action Name of the action to display in the dialog title */\n    /** @param name Name of the item on which the action is being performed */\n    getTitleTranslation(action: string, name: string): string {\n        return this.translation.instant(`NODE_SELECTOR.${action.toUpperCase()}_ITEM`, { name });\n    }\n\n    /** Opens a dialog to choose a folder to upload. */\n\n    /** @param action Name of the action to show in the title */\n    /** @param contentEntry  Item to upload */\n    openUploadFolderDialog(action: string, contentEntry: MinimalNodeEntryEntity): Observable<MinimalNodeEntryEntity[]> {\n        const select = new Subject<MinimalNodeEntryEntity[]>();\n        select.subscribe({\n            complete: this.close.bind(this)\n        });\n\n        const data: ContentNodeSelectorComponentData = {\n            title: `${action} '${contentEntry.name}' to ...`,\n            actionName: action,\n            currentFolderId: contentEntry.id,\n            imageResolver: this.imageResolver.bind(this),\n            isSelectionValid: this.hasPermissionOnNodeFolder.bind(this),\n            rowFilter: this.rowFilter.bind(this, contentEntry.id),\n            select: select\n        };\n\n        this.openContentNodeDialog(data, 'adf-content-node-selector-dialog', '630px');\n        return select;\n    }\n\n    /** Opens a dialog to choose a file to upload. */\n\n    /** @param action Name of the action to show in the title */\n    /** @param contentEntry Item to upload */\n    openUploadFileDialog(action: string, contentEntry: MinimalNodeEntryEntity): Observable<MinimalNodeEntryEntity[]> {\n        const select = new Subject<MinimalNodeEntryEntity[]>();\n        select.subscribe({\n            complete: this.close.bind(this)\n        });\n\n        const data: ContentNodeSelectorComponentData = {\n            title: `${action} '${contentEntry.name}' to ...`,\n            actionName: action,\n            currentFolderId: contentEntry.id,\n            imageResolver: this.imageResolver.bind(this),\n            isSelectionValid: this.isNodeFile.bind(this),\n            select: select\n        };\n\n        this.openContentNodeDialog(data, 'adf-content-node-selector-dialog', '630px');\n        return select;\n    }\n\n    private openContentNodeDialog(data: ContentNodeSelectorComponentData, currentPanelClass: string, chosenWidth: string) {\n        this.dialog.open(ContentNodeSelectorComponent, { data, panelClass: currentPanelClass, width: chosenWidth });\n    }\n\n    private imageResolver(row: ShareDataRow, col: DataColumn): string | null {\n        const entry: MinimalNodeEntryEntity = row.node.entry;\n        if (!this.contentService.hasPermission(entry, 'create')) {\n            return this.documentListService.getMimeTypeIcon('disable/folder');\n        }\n\n        return null;\n    }\n\n    private rowFilter(currentNodeId, row: ShareDataRow): boolean {\n        const node: MinimalNodeEntryEntity = row.node.entry;\n\n        if (node.id === currentNodeId || node.isFile) {\n            return false;\n        } else {\n            return true;\n        }\n    }\n\n    private isNodeFile(entry: MinimalNodeEntryEntity): boolean {\n        return entry.isFile;\n    }\n\n    private hasPermissionOnNodeFolder(entry: MinimalNodeEntryEntity): boolean {\n        return this.isNodeFolder(entry) && this.contentService.hasPermission(entry, 'create');\n    }\n\n    private isNodeFolder(entry: MinimalNodeEntryEntity): boolean {\n        return entry.isFolder;\n    }\n\n    private isCopyMoveSelectionValid(entry: MinimalNodeEntryEntity): boolean {\n        return this.hasEntityCreatePermission(entry) && !this.isSite(entry);\n    }\n\n    private hasEntityCreatePermission(entry: MinimalNodeEntryEntity): boolean {\n        return this.contentService.hasPermission(entry, 'create');\n    }\n\n    private isSite(entry) {\n        return !!entry.guid || entry.nodeType === 'st:site' || entry.nodeType === 'st:sites';\n    }\n\n    /** Closes the currently open dialog. */\n    close() {\n        this.dialog.closeAll();\n    }\n\n}\n",
    "/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport moment from 'moment-es6';\n\nimport { Component, Inject, OnInit, Optional } from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material';\nimport { FormBuilder, FormGroup } from '@angular/forms';\n\nimport { MinimalNodeEntryEntity, NodeEntry } from 'alfresco-js-api';\nimport { AlfrescoApiService } from '@alfresco/adf-core';\n\n@Component({\n    selector: 'adf-node-lock',\n    styles: [`.adf-fill-remaining-space{-webkit-box-flex:1;-ms-flex:1 1 auto;flex:1 1 auto}.adf-full-width{width:100%}`],\n    template: `<h2 mat-dialog-title>\n    {{ 'CORE.FILE_DIALOG.FILE_LOCK' | translate }}\n</h2>\n\n<mat-dialog-content>\n    <br />\n    <form [formGroup]=\"form\" (submit)=\"submit()\">\n        <mat-checkbox [formControl]=\"form.controls['isLocked']\" ngDefaultControl>\n            {{ 'CORE.FILE_DIALOG.FILE_LOCK_CHECKBOX' | translate }} <strong>\"{{ nodeName }}\"</strong>\n        </mat-checkbox>\n\n        <br />\n\n        <div *ngIf=\"form.value.isLocked\">\n            <mat-checkbox [formControl]=\"form.controls['allowOwner']\" ngDefaultControl>\n                {{ 'CORE.FILE_DIALOG.ALLOW_OTHERS_CHECKBOX' | translate }}\n            </mat-checkbox>\n\n            <br />\n\n            <mat-checkbox [formControl]=\"form.controls['isTimeLock']\" ngDefaultControl>\n                {{ 'CORE.FILE_DIALOG.TIME_LOCK_CHECKBOX' | translate }}\n            </mat-checkbox>\n\n            <br />\n\n            <mat-form-field *ngIf=\"form.value.isTimeLock\">\n                <mat-datetimepicker-toggle [for]=\"datetimePicker\" matSuffix></mat-datetimepicker-toggle>\n                <mat-datetimepicker #datetimePicker type=\"datetime\" openOnFocus=\"true\" timeInterval=\"1\"></mat-datetimepicker>\n                <input matInput [formControl]=\"form.controls['time']\" [matDatetimepicker]=\"datetimePicker\" required autocomplete=\"false\">\n            </mat-form-field>\n        </div>\n    </form>\n    <br />\n</mat-dialog-content>\n\n<mat-dialog-actions class=\"adf-dialog-buttons\">\n    <span class=\"adf-fill-remaining-space\"></span>\n\n    <button mat-button mat-dialog-close>\n        {{ 'CORE.FILE_DIALOG.CANCEL_BUTTON.LABEL' | translate }}\n    </button>\n\n    <button class=\"adf-dialog-action-button\" mat-button (click)=\"submit()\">\n        {{ 'CORE.FILE_DIALOG.SAVE_BUTTON.LABEL' | translate }}\n    </button>\n</mat-dialog-actions>\n`\n})\nexport class NodeLockDialogComponent implements OnInit {\n\n    form: FormGroup;\n    node: MinimalNodeEntryEntity = null;\n    nodeName: string;\n\n    constructor(\n        private formBuilder: FormBuilder,\n        public dialog: MatDialogRef<NodeLockDialogComponent>,\n        private alfrescoApi: AlfrescoApiService,\n        @Optional()\n        @Inject(MAT_DIALOG_DATA)\n        public data: any\n    ) {}\n\n    ngOnInit() {\n        const { node } = this.data;\n        this.nodeName = node.name;\n\n        this.form = this.formBuilder.group({\n            isLocked: node.isLocked || false,\n            allowOwner: node.properties['cm:lockType'] === 'WRITE_LOCK',\n            isTimeLock: !!node.properties['cm:expiryDate'],\n            time: !!node.properties['cm:expiryDate'] ? moment(node.properties['cm:expiryDate']) : moment()\n        });\n    }\n\n    private get lockTimeInSeconds(): number {\n        if (this.form.value.isTimeLock) {\n            let duration = moment.duration(moment(this.form.value.time).diff(moment()));\n            return duration.asSeconds();\n        }\n\n        return 0;\n    }\n\n    private get nodeBodyLock(): object {\n        return {\n            'timeToExpire': this.lockTimeInSeconds,\n            'type': this.form.value.allowOwner ? 'ALLOW_OWNER_CHANGES' : 'FULL',\n            'lifetime': 'PERSISTENT'\n        };\n    }\n\n    private toggleLock(): Promise<NodeEntry> {\n        const { alfrescoApi: { nodesApi }, data: { node } } = this;\n\n        if (this.form.value.isLocked) {\n            return nodesApi.lockNode(node.id, this.nodeBodyLock);\n        }\n\n        return nodesApi.unlockNode(node.id);\n    }\n\n    submit(): void {\n        this.toggleLock()\n            .then(node => {\n                this.data.node.isLocked = this.form.value.isLocked;\n                this.dialog.close(node.entry);\n            })\n            .catch(error => this.data.onError(error));\n    }\n}\n",
    "/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Component, Inject, ViewEncapsulation, Input } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material';\nimport { MinimalNodeEntryEntity, SitePaging } from 'alfresco-js-api';\nimport { ContentNodeSelectorComponentData } from './content-node-selector.component-data.interface';\nimport { RowFilter } from '../document-list/data/row-filter.model';\nimport { ImageResolver } from '../document-list/data/image-resolver.model';\n\n@Component({\n    selector: 'adf-content-node-selector',\n    template: `<header\n    mat-dialog-title\n    data-automation-id=\"content-node-selector-title\">{{title || data?.title}}\n</header>\n\n<mat-dialog-content>\n    <adf-content-node-selector-panel\n        [currentFolderId]=\"currentFolderId || data?.currentFolderId\"\n        [dropdownHideMyFiles]=\"dropdownHideMyFiles || data?.dropdownHideMyFiles\"\n        [dropdownSiteList]=\"dropdownSiteList || data?.dropdownSiteList\"\n        [rowFilter]=\"rowFilter || data?.rowFilter\"\n        [imageResolver]=\"imageResolver || data?.imageResolver\"\n        [isSelectionValid]=\"data?.isSelectionValid\"\n        [breadcrumbTransform]=\"data?.breadcrumbTransform\"\n        (select)=\"onSelect($event)\">\n    </adf-content-node-selector-panel>\n</mat-dialog-content>\n\n<mat-dialog-actions align=\"end\">\n    <button\n        mat-button\n        (click)=\"close()\"\n        data-automation-id=\"content-node-selector-actions-cancel\">{{ 'NODE_SELECTOR.CANCEL' | translate }}\n    </button>\n\n    <button mat-button\n        [disabled]=\"!chosenNode\"\n        class=\"choose-action\"\n        (click)=\"onClick()\"\n        data-automation-id=\"content-node-selector-actions-choose\">{{ buttonActionName | translate }}\n    </button>\n</mat-dialog-actions>\n\n`,\n    styles: [``],\n    encapsulation: ViewEncapsulation.None\n})\nexport class ContentNodeSelectorComponent {\n\n    /**\n     * @deprecated in 2.1.0\n     */\n    @Input()\n    title: string = null;\n\n    /**\n     * @deprecated in 2.1.0\n     */\n    @Input()\n    currentFolderId: string = null;\n\n    /**\n     * @deprecated in 2.1.0\n     */\n    @Input()\n    dropdownHideMyFiles: boolean = false;\n\n    /**\n     * @deprecated in 2.1.0\n     */\n    @Input()\n    dropdownSiteList: SitePaging = null;\n\n    /**\n     * @deprecated in 2.1.0\n     */\n    @Input()\n    rowFilter: RowFilter = null;\n\n    /**\n     * @deprecated in 2.1.0\n     */\n    @Input()\n    imageResolver: ImageResolver = null;\n\n    /**\n     * @deprecated in 2.1.0\n     */\n    @Input()\n    pageSize: number;\n\n    buttonActionName: string;\n    chosenNode: MinimalNodeEntryEntity[];\n\n    constructor(@Inject(MAT_DIALOG_DATA) public data: ContentNodeSelectorComponentData) {\n        this.buttonActionName = data.actionName ? `NODE_SELECTOR.${data.actionName.toUpperCase()}` : 'NODE_SELECTOR.CHOOSE';\n    }\n\n    close() {\n        this.data.select.complete();\n    }\n\n    onSelect(nodeList: MinimalNodeEntryEntity[]) {\n        this.chosenNode = nodeList;\n    }\n\n    onClick(): void {\n        this.data.select.next(this.chosenNode);\n        this.data.select.complete();\n    }\n}\n",
    "/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n    AlfrescoApiService, AuthenticationService, ContentService, LogService,\n    PermissionsEnum, ThumbnailService\n} from '@alfresco/adf-core';\n\nimport { Injectable } from '@angular/core';\nimport { MinimalNodeEntity, MinimalNodeEntryEntity,  NodeEntry, NodePaging } from 'alfresco-js-api';\nimport { Observable } from 'rxjs/Observable';\nimport 'rxjs/add/observable/throw';\n\n@Injectable()\nexport class DocumentListService {\n\n    static ROOT_ID = '-root-';\n\n    constructor(authService: AuthenticationService,\n                private contentService: ContentService,\n                private apiService: AlfrescoApiService,\n                private logService: LogService,\n                private thumbnailService: ThumbnailService) {\n    }\n\n    private getNodesPromise(folder: string, opts?: any, includeFields: string[] = []): Promise<NodePaging> {\n\n        let rootNodeId = DocumentListService.ROOT_ID;\n        if (opts && opts.rootFolderId) {\n            rootNodeId = opts.rootFolderId;\n        }\n\n        let includeFieldsRequest = ['path', 'properties', 'allowableOperations', 'permissions', ...includeFields]\n            .filter((element, index, array) => index === array.indexOf(element));\n\n        let params: any = {\n            includeSource: true,\n            include: includeFieldsRequest\n        };\n\n        if (folder) {\n            params.relativePath = folder;\n        }\n\n        if (opts) {\n            if (opts.maxItems) {\n                params.maxItems = opts.maxItems;\n            }\n            if (opts.skipCount) {\n                params.skipCount = opts.skipCount;\n            }\n        }\n\n        return this.apiService.getInstance().nodes.getNodeChildren(rootNodeId, params);\n    }\n\n    /**\n     * Deletes a node.\n     * @param nodeId ID of the node to delete\n     * @returns Empty response when the operation is complete\n     */\n    deleteNode(nodeId: string): Observable<any> {\n        return Observable.fromPromise(this.apiService.getInstance().nodes.deleteNode(nodeId));\n    }\n\n    /**\n     * Copy a node to destination node\n     *\n     * @param nodeId The id of the node to be copied\n     * @param targetParentId The id of the folder where the node will be copied\n     * @returns NodeEntry for the copied node\n     */\n    copyNode(nodeId: string, targetParentId: string) {\n        return Observable.fromPromise(this.apiService.getInstance().nodes.copyNode(nodeId, { targetParentId }))\n            .catch(err => this.handleError(err));\n    }\n\n    /**\n     * Move a node to destination node\n     *\n     * @param nodeId The id of the node to be moved\n     * @param targetParentId The id of the folder where the node will be moved\n     * @returns NodeEntry for the moved node\n     */\n    moveNode(nodeId: string, targetParentId: string) {\n        return Observable.fromPromise(this.apiService.getInstance().nodes.moveNode(nodeId, { targetParentId }))\n            .catch(err => this.handleError(err));\n    }\n\n    /**\n     * Create a new folder in the path.\n     * @param name Folder name\n     * @param parentId Parent folder ID\n     * @returns Details of the created folder node\n     */\n    createFolder(name: string, parentId: string): Observable<MinimalNodeEntity> {\n        let observable = Observable.fromPromise(this.apiService.getInstance().nodes.createFolder(name, '/', parentId));\n        observable.catch(err => this.handleError(err));\n        return observable;\n    }\n\n    /**\n     * Gets the folder node with the specified relative name path below the root node.\n     * @param folder Path to folder.\n     * @param opts Options.\n     * @param includeFields Extra information to include (available options are \"aspectNames\", \"isLink\" and \"association\")\n     * @returns Details of the folder\n     */\n    getFolder(folder: string, opts?: any, includeFields: string[] = []): Observable<NodePaging> {\n        return Observable.fromPromise(this.getNodesPromise(folder, opts, includeFields))\n            .map(res => <NodePaging> res)\n            .catch(err => this.handleError(err));\n    }\n\n    /**\n     * Gets a node via its node ID.\n     * @param nodeId\n     * @param includeFields Extra information to include (available options are \"aspectNames\", \"isLink\" and \"association\")\n     * @returns Details of the folder\n     */\n    getNode(nodeId: string, includeFields: string[] = []): Observable<NodeEntry> {\n\n        let includeFieldsRequest = ['path', 'properties', 'allowableOperations', 'permissions', ...includeFields]\n            .filter((element, index, array) => index === array.indexOf(element));\n\n        let opts: any = {\n            includeSource: true,\n            include: includeFieldsRequest\n        };\n\n        return this.contentService.getNode(nodeId, opts);\n    }\n\n    /**\n     * @deprecated 2.3.0\n     * Gets a folder node via its node ID.\n     * @param nodeId ID of the folder node\n     * @param includeFields Extra information to include (available options are \"aspectNames\", \"isLink\" and \"association\")\n     * @returns Details of the folder\n     */\n    getFolderNode(nodeId: string, includeFields: string[] = []): Observable<MinimalNodeEntryEntity> {\n\n        let includeFieldsRequest = ['path', 'properties', 'allowableOperations', 'permissions', ...includeFields]\n            .filter((element, index, array) => index === array.indexOf(element));\n\n        let opts: any = {\n            includeSource: true,\n            include: includeFieldsRequest\n        };\n\n        return Observable.fromPromise(this.apiService.getInstance().nodes.getNodeInfo(nodeId, opts));\n    }\n    /**\n     * Get thumbnail URL for the given document node.\n     * @param node Node to get URL for.\n     * @returns Thumbnail URL string\n     */\n    getDocumentThumbnailUrl(node: MinimalNodeEntity): string {\n        return this.thumbnailService.getDocumentThumbnailUrl(node);\n    }\n\n    /**\n     * Gets the icon that represents a MIME type.\n     * @param mimeType MIME type to get the icon for\n     * @returns Path to the icon file\n     */\n    getMimeTypeIcon(mimeType: string): string {\n        return this.thumbnailService.getMimeTypeIcon(mimeType);\n    }\n\n    /**\n     * Gets a default icon for MIME types with no specific icon.\n     * @returns Path to the icon file\n     */\n    getDefaultMimeTypeIcon(): string {\n        return this.thumbnailService.getDefaultMimeTypeIcon();\n    }\n\n    /**\n     * @Deprecated 2.3.0 use the one in the content service\n     * Checks if a node has the specified permission.\n     * @param node Target node\n     * @param permission Permission level to query\n     * @returns True if the node has the permission, false otherwise\n     */\n    hasPermission(node: any, permission: PermissionsEnum | string): boolean {\n        return this.contentService.hasPermission(node, permission);\n    }\n\n    private handleError(error: any) {\n        // in a real world app, we may send the error to some remote logging infrastructure\n        // instead of just logging it to the console\n        this.logService.error(error);\n        return Observable.throw(error || 'Server error');\n    }\n}\n",
    "/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { NgModule } from '@angular/core';\nimport {\n    MatButtonModule,\n    MatChipsModule,\n    MatDialogModule,\n    MatIconModule,\n    MatCardModule,\n    MatInputModule,\n    MatListModule,\n    MatMenuModule,\n    MatOptionModule,\n    MatProgressBarModule,\n    MatProgressSpinnerModule,\n    MatRippleModule,\n    MatExpansionModule,\n    MatSelectModule,\n    MatCheckboxModule,\n    MatDatepickerModule,\n    MatSlideToggleModule\n} from '@angular/material';\n\nexport function modules() {\n    return [\n        MatButtonModule,\n        MatChipsModule,\n        MatDialogModule,\n        MatIconModule,\n        MatCardModule,\n        MatInputModule,\n        MatListModule,\n        MatProgressSpinnerModule,\n        MatProgressBarModule,\n        MatRippleModule,\n        MatMenuModule,\n        MatOptionModule,\n        MatExpansionModule,\n        MatSelectModule,\n        MatCheckboxModule,\n        MatDatepickerModule,\n        MatSlideToggleModule\n    ];\n}\n\n@NgModule({\n    imports: modules(),\n    exports: modules()\n})\nexport class MaterialModule {\n}\n",
    "/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Directive, Input, HostListener, ElementRef, OnChanges } from '@angular/core';\nimport { MatDialog } from '@angular/material';\nimport { MinimalNodeEntity } from 'alfresco-js-api';\n\nimport { ShareDialogComponent } from '../dialogs/share.dialog';\n\n@Directive({\n    selector: '[adf-share]'\n})\nexport class NodeSharedDirective implements OnChanges {\n\n    /** Node to share. */\n    // tslint:disable-next-line:no-input-rename\n    @Input('adf-share')\n    node: MinimalNodeEntity;\n\n    @Input()\n    baseShareUrl: string;\n\n    @HostListener('click')\n    onClick() {\n        this.shareNode(this.node);\n    }\n\n    constructor(private dialog: MatDialog,\n                private elementRef: ElementRef) {\n    }\n\n    shareNode(node: MinimalNodeEntity) {\n        if (node.entry && node.entry.isFile) {\n            this.setDisableAttribute(true);\n            this.dialog.open(ShareDialogComponent, {\n                width: '600px',\n                disableClose: true,\n                data: {\n                    node: node,\n                    baseShareUrl: this.baseShareUrl\n                }\n            });\n        } else {\n            this.setDisableAttribute(true);\n        }\n    }\n\n    ngOnChanges() {\n        if (!this.node || this.node.entry.isFolder) {\n            this.setDisableAttribute(true);\n        } else {\n            this.setDisableAttribute(false);\n        }\n    }\n\n    private setDisableAttribute(disable: boolean) {\n        this.elementRef.nativeElement.disabled = disable;\n    }\n\n}\n",
    "/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Component, Inject, OnInit, ViewEncapsulation } from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material';\nimport { SharedLinksApiService } from '@alfresco/adf-core';\nimport { SharedLinkEntry } from 'alfresco-js-api';\n\n@Component({\n    selector: 'adf-share-dialog',\n    template: `<h1 mat-dialog-title id=\"adf-share-title\" >{{ 'SHARE.TITLE' | translate }} {{fileName}}</h1>\n\n<mat-dialog-content>\n    <span class=\"spacer\"></span>\n\n    <mat-slide-toggle [checked]=\"isFileShared\" [disabled]=\"isDisabled\" (change)=\"onSlideShareChange($event)\">\n        {{ 'SHARE.ACTIONS.SHARE' | translate }}\n    </mat-slide-toggle>\n\n    <span class=\"spacer\"></span>\n\n    .\n\n    <h2 *ngIf=\"isFileShared\">{{ 'SHARE.DESCRIPTION' | translate }}</h2>\n    <div *ngIf=\"isFileShared\">{{ 'SHARE.ALERT' | translate }}</div>\n\n    <form *ngIf=\"isFileShared\">\n        <mat-form-field class=\"full-width\">\n            <input class=\"adf-share-link\" matInput placeholder=\"{{ 'SHARE.PUBLIC-LINK' | translate }}\" [value]=\"baseShareUrl + sharedId\">\n            <mat-icon matPrefix>link</mat-icon>\n        </mat-form-field>\n    </form>\n\n    <h2 *ngIf=\"!isFileShared\">{{ 'SHARE.UNSHARED' | translate }}</h2>\n\n</mat-dialog-content>\n\n<mat-dialog-actions>\n    <button mat-button color=\"primary\" (click)=\"cancelShare()\">\n        {{ 'SHARE.ACTIONS.CLOSE' | translate }}\n    </button>\n</mat-dialog-actions>\n`,\n    styles: [`.spacer{-webkit-box-flex:1;-ms-flex:1 1 auto;flex:1 1 auto}.adf-share-dialog .mat-dialog-actions .mat-button-wrapper{text-transform:uppercase}.full-width{width:100%}.adf-share-link{margin-left:10px;font-size:18px!important}`],\n    host: { 'class': 'adf-share-dialog' },\n    encapsulation: ViewEncapsulation.None\n})\nexport class ShareDialogComponent implements OnInit {\n\n    sharedId: string;\n\n    fileName: string;\n    baseShareUrl: string;\n\n    isFileShared: boolean = false;\n    isDisabled: boolean = false;\n\n    constructor(private sharedLinksApiService: SharedLinksApiService,\n                private dialogRef: MatDialogRef<ShareDialogComponent>,\n                @Inject(MAT_DIALOG_DATA)\n                public data: any) {\n    }\n\n    ngOnInit() {\n        if (this.data.node && this.data.node.entry) {\n            this.fileName = this.data.node.entry.name;\n            this.baseShareUrl = this.data.baseShareUrl;\n\n            if (this.data.node.entry.properties && this.data.node.entry.properties['qshare:sharedId']) {\n                this.sharedId = this.data.node.entry.properties['qshare:sharedId'];\n                this.isFileShared = true;\n            } else {\n                this.createSharedLinks(this.data.node.entry.id);\n            }\n        }\n    }\n\n    cancelShare() {\n        this.dialogRef.close(false);\n    }\n\n    onSlideShareChange(event: any) {\n        this.isDisabled = true;\n        if (event.checked) {\n            this.createSharedLinks(this.data.node.entry.id);\n        } else {\n            this.deleteSharedLink(this.sharedId);\n        }\n    }\n\n    createSharedLinks(nodeId: string) {\n        this.sharedLinksApiService.createSharedLinks(nodeId).subscribe((sharedLink: SharedLinkEntry) => {\n                if (sharedLink.entry) {\n                    this.sharedId = sharedLink.entry.id;\n                    this.isFileShared = true;\n                    this.isDisabled = false;\n                }\n            },\n            () => {\n                this.isFileShared = false;\n                this.isDisabled = false;\n            });\n    }\n\n    deleteSharedLink(sharedId: string) {\n        this.sharedLinksApiService.deleteSharedLink(sharedId).subscribe(() => {\n                this.isFileShared = false;\n                this.isDisabled = false;\n            },\n            () => {\n                this.isFileShared = true;\n                this.isDisabled = false;\n            });\n    }\n}\n",
    "/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Directive, Input, HostListener } from '@angular/core';\nimport { MatDialog } from '@angular/material';\nimport { MinimalNodeEntity } from 'alfresco-js-api';\nimport { AlfrescoApiService } from '@alfresco/adf-core';\n\nimport { DownloadZipDialogComponent } from '../dialogs/download-zip.dialog';\n\n@Directive({\n    selector: '[adfNodeDownload]'\n})\nexport class NodeDownloadDirective {\n\n    /** Nodes to download. */\n    // tslint:disable-next-line:no-input-rename\n    @Input('adfNodeDownload')\n    nodes: MinimalNodeEntity[];\n\n    @HostListener('click')\n    onClick() {\n        this.downloadNodes(this.nodes);\n    }\n\n    constructor(\n        private apiService: AlfrescoApiService,\n        private dialog: MatDialog) {\n    }\n\n    /**\n     * Downloads multiple selected nodes.\n     * Packs result into a .ZIP archive if there is more than one node selected.\n     * @param selection Multiple selected nodes to download\n     */\n    downloadNodes(selection: Array<MinimalNodeEntity>) {\n        if (!selection || selection.length === 0) {\n            return;\n        }\n\n        if (selection.length === 1) {\n            this.downloadNode(selection[0]);\n        } else {\n            this.downloadZip(selection);\n        }\n    }\n\n    /**\n     * Downloads a single node.\n     * Packs result into a .ZIP archive is the node is a Folder.\n     * @param node Node to download\n     */\n    downloadNode(node: MinimalNodeEntity) {\n        if (node && node.entry) {\n            const entry = node.entry;\n\n            if (entry.isFile) {\n                this.downloadFile(node);\n            }\n\n            if (entry.isFolder) {\n                this.downloadZip([node]);\n            }\n\n            // Check if there's nodeId for Shared Files\n            if (!entry.isFile && !entry.isFolder && (<any> entry).nodeId) {\n                this.downloadFile(node);\n            }\n        }\n    }\n\n    private downloadFile(node: MinimalNodeEntity) {\n        if (node && node.entry) {\n            const contentApi = this.apiService.getInstance().content;\n\n            const url = contentApi.getContentUrl(node.entry.id, true);\n            const fileName = node.entry.name;\n\n            this.download(url, fileName);\n        }\n    }\n\n    private downloadZip(selection: Array<MinimalNodeEntity>) {\n        if (selection && selection.length > 0) {\n            // nodeId for Shared node\n            const nodeIds = selection.map((node: any) => (node.entry.nodeId || node.entry.id));\n\n            this.dialog.open(DownloadZipDialogComponent, {\n                width: '600px',\n                disableClose: true,\n                data: {\n                    nodeIds\n                }\n            });\n        }\n    }\n\n    private download(url: string, fileName: string) {\n        if (url && fileName) {\n            const link = document.createElement('a');\n\n            link.style.display = 'none';\n            link.download = fileName;\n            link.href = url;\n\n            document.body.appendChild(link);\n            link.click();\n            document.body.removeChild(link);\n        }\n    }\n}\n",
    "/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Component, Inject, OnInit, ViewEncapsulation } from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material';\nimport { DownloadEntry, MinimalNodeEntity } from 'alfresco-js-api';\nimport { LogService, AlfrescoApiService } from '@alfresco/adf-core';\n\n@Component({\n    selector: 'adf-download-zip-dialog',\n    template: `<h1 matDialogTitle>{{ 'CORE.DIALOG.DOWNLOAD_ZIP.TITLE' | translate }}</h1>\n<div mat-dialog-content>\n    <mat-progress-bar color=\"primary\" mode=\"indeterminate\"></mat-progress-bar>\n</div>\n<div mat-dialog-actions>\n    <span class=\"spacer\"></span>\n    <button mat-button color=\"primary\" (click)=\"cancelDownload()\">\n        {{ 'CORE.DIALOG.DOWNLOAD_ZIP.ACTIONS.CANCEL' | translate }}\n    </button>\n</div>\n`,\n    styles: [`.spacer{-webkit-box-flex:1;-ms-flex:1 1 auto;flex:1 1 auto}.adf-download-zip-dialog .mat-dialog-actions .mat-button-wrapper{text-transform:uppercase}`],\n    host: { 'class': 'adf-download-zip-dialog' },\n    encapsulation: ViewEncapsulation.None\n})\nexport class DownloadZipDialogComponent implements OnInit {\n\n    // flag for async threads\n    private cancelled = false;\n\n    constructor(private apiService: AlfrescoApiService,\n                private dialogRef: MatDialogRef<DownloadZipDialogComponent>,\n                @Inject(MAT_DIALOG_DATA) private data: any,\n                private logService: LogService) {\n    }\n\n    ngOnInit() {\n        if (this.data && this.data.nodeIds && this.data.nodeIds.length > 0) {\n            if (!this.cancelled) {\n                this.downloadZip(this.data.nodeIds);\n            } else {\n                this.logService.log('Cancelled');\n            }\n        }\n    }\n\n    cancelDownload() {\n        this.cancelled = true;\n        this.dialogRef.close(false);\n    }\n\n    downloadZip(nodeIds: string[]) {\n        if (nodeIds && nodeIds.length > 0) {\n\n            const promise: any = this.apiService.getInstance().core.downloadsApi.createDownload({ nodeIds });\n\n            promise.on('progress', progress => this.logService.log('Progress', progress));\n            promise.on('error', error => this.logService.error('Error', error));\n            promise.on('abort', data => this.logService.log('Abort', data));\n\n            promise.on('success', (data: DownloadEntry) => {\n                if (data && data.entry && data.entry.id) {\n                    const url = this.apiService.getInstance().content.getContentUrl(data.entry.id, true);\n\n                    this.apiService.getInstance().core.nodesApi.getNode(data.entry.id).then((downloadNode: MinimalNodeEntity) => {\n                        this.logService.log(downloadNode);\n                        const fileName = downloadNode.entry.name;\n                        this.waitAndDownload(data.entry.id, url, fileName);\n                    });\n                }\n            });\n        }\n    }\n\n    waitAndDownload(downloadId: string, url: string, fileName: string) {\n        if (this.cancelled) {\n            return;\n        }\n\n        this.apiService.getInstance().core.downloadsApi.getDownload(downloadId).then((downloadEntry: DownloadEntry) => {\n            if (downloadEntry.entry) {\n                if (downloadEntry.entry.status === 'DONE') {\n                    this.download(url, fileName);\n                } else {\n                    setTimeout(() => {\n                        this.waitAndDownload(downloadId, url, fileName);\n                    }, 1000);\n                }\n            }\n        });\n    }\n\n    download(url: string, fileName: string) {\n        if (url && fileName) {\n            const link = document.createElement('a');\n\n            link.style.display = 'none';\n            link.download = fileName;\n            link.href = url;\n\n            document.body.appendChild(link);\n            link.click();\n            document.body.removeChild(link);\n        }\n        this.dialogRef.close(true);\n    }\n}\n"
  ],
  "names": [
    "ɵ0",
    "tslib_1.__extends",
    "tslib_1.__values",
    "tslib_1.__spread",
    "merge"
  ],
  "mappings": "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"
}
