/*!
 * @license
 * Copyright 2016 Alfresco Software, Ltd.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
import { EventEmitter, OnInit } from '@angular/core';
import { SitesService, LogService } from '@alfresco/adf-core';
import { SitePaging, SiteEntry } from 'alfresco-js-api';
export declare enum Relations {
    Members = "members",
    Containers = "containers",
}
export declare class DropdownSitesComponent implements OnInit {
    private sitesService;
    private logService;
    /** Hide the "My Files" option. */
    hideMyFiles: boolean;
    /** A custom list of sites to be displayed by the dropdown. If no value
     * is given, the sites of the current user are displayed by default. A
     * list of objects only with properties 'title' and 'guid' is enough to
     * be able to display the dropdown.
     */
    siteList: SitePaging;
    /** Id of the selected site */
    value: string;
    /** Text or a translation key to act as a placeholder. Default value is the
     * key "DROPDOWN.PLACEHOLDER_LABEL".
     */
    placeholder: string;
    /** Filter for the results of the sites query. Possible values are
     * "members" and "containers". When "members" is used, the site list
     * will be restricted to the sites that the user is a member of.
     */
    relations: string;
    /** Emitted when the user selects a site. When the default option is selected,
     * an empty model is emitted.
     */
    change: EventEmitter<SiteEntry>;
    selected: SiteEntry;
    MY_FILES_VALUE: string;
    constructor(sitesService: SitesService, logService: LogService);
    ngOnInit(): void;
    selectedSite(event: any): void;
    private setDefaultSiteList();
    private filteredResultsByMember(sites);
    private isCurrentUserMember(site, loggedUserName);
}
