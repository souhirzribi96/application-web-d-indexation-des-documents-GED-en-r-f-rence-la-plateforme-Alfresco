/*!
 * @license
 * Copyright 2016 Alfresco Software, Ltd.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
import { FileModel, FileUploadStatus, NodesApiService, TranslationService, UploadService } from '@alfresco/adf-core';
import { EventEmitter } from '@angular/core';
export declare class FileUploadingListComponent {
    private uploadService;
    private nodesApi;
    private translateService;
    FileUploadStatus: typeof FileUploadStatus;
    template: any;
    files: FileModel[];
    /** Emitted when a file in the list has an error. */
    error: EventEmitter<any>;
    constructor(uploadService: UploadService, nodesApi: NodesApiService, translateService: TranslationService);
    /**
     * Cancel file upload
     *
     * @param file File model to cancel upload for.
     *
     * @memberOf FileUploadingListComponent
     */
    cancelFile(file: FileModel): void;
    removeFile(file: FileModel): void;
    /**
     * Call the appropriate method for each file, depending on state
     */
    cancelAllFiles(): void;
    /**
     * Checks if all the files are uploaded false if there is at least one file in Progress | Starting | Pending
     */
    isUploadCompleted(): boolean;
    /**
     * Check if all the files are Cancelled | Aborted | Error. false if there is at least one file in uploading states
     */
    isUploadCancelled(): boolean;
    private deleteNode(file);
    private notifyError(...files);
    private getUploadingFiles();
}
