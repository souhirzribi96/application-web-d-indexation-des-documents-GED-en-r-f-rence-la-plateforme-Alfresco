/*!
 * @license
 * Copyright 2016 Alfresco Software, Ltd.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
import { FileModel, NodePermissionSubject, NotificationService, TranslationService, UploadService } from '@alfresco/adf-core';
import { EventEmitter } from '@angular/core';
import { UploadBase } from './base-upload/upload-base';
export declare class UploadDragAreaComponent extends UploadBase implements NodePermissionSubject {
    private uploadService;
    private translateService;
    private notificationService;
    /** Toggle component disabled state. */
    disabled: boolean;
    /** When false, renames the file using an integer suffix if there is a name clash.
     * Set to true to indicate that a major version should be created instead.
     */
    versioning: boolean;
    /** ID of parent folder node. */
    parentId: string;
    /** Emitted when the file is uploaded. */
    success: EventEmitter<{}>;
    /** Raised when the file upload goes in error. */
    error: EventEmitter<{}>;
    constructor(uploadService: UploadService, translateService: TranslationService, notificationService: NotificationService);
    /**
     * Method called when files are dropped in the drag area.
     *
     * @param files - files dropped in the drag area.
     */
    onFilesDropped(files: File[]): void;
    /**
     * Called when the file are dropped in the drag area
     *
     * @param item - FileEntity
     */
    onFilesEntityDropped(item: any): void;
    /**
     * Called when a folder are dropped in the drag area
     *
     * @param folder - name of the dropped folder
     */
    onFolderEntityDropped(folder: any): void;
    private addNodeInUploadQueue(files);
    /**
     * Show undo notification bar.
     *
     * @param latestFilesAdded - files in the upload queue enriched with status flag and xhr object.
     */
    showUndoNotificationBar(latestFilesAdded: FileModel[]): void;
    /** Returns true or false considering the component options and node permissions */
    isDroppable(): boolean;
    /**
     * Handles 'upload-files' events raised by child components.
     *
     * @param event DOM event
     */
    onUploadFiles(event: CustomEvent): void;
    /**
     * Check if "create" permission is present on the given node
     *
     * @param node
     */
    private hasCreatePermission(node);
}
