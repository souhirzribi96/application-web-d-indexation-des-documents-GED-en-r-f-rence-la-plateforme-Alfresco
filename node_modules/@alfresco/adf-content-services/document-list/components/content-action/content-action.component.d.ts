/*!
 * @license
 * Copyright 2016 Alfresco Software, Ltd.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
import { EventEmitter, OnInit } from '@angular/core';
import { ContentActionHandler } from '../../models/content-action.model';
import { DocumentActionsService } from '../../services/document-actions.service';
import { FolderActionsService } from '../../services/folder-actions.service';
import { ContentActionModel } from './../../models/content-action.model';
import { ContentActionListComponent } from './content-action-list.component';
export declare class ContentActionComponent implements OnInit {
    private list;
    private documentActions;
    private folderActions;
    /** The title of the action as shown in the menu. */
    title: string;
    /** The name of the icon to display next to the menu command (can be left blank). */
    icon: string;
    /** System actions. Can be "delete", "download", "copy" or "move". */
    handler: string;
    /** Type of item that the action appies to. Can be "document" or "folder" */
    target: string;
    /** The permission type. */
    permission: string;
    /** Should this action be disabled in the menu if the user doesn't have permission for it? */
    disableWithNoPermission: boolean;
    /** Is the menu item disabled? */
    disabled: boolean;
    /** Emitted when the user selects the action from the menu. */
    execute: EventEmitter<{}>;
    /** Emitted when a permission error occurs */
    permissionEvent: EventEmitter<{}>;
    /** Emitted when an error occurs during the action.
     * Applies to copy and move actions.
     */
    error: EventEmitter<{}>;
    /** Emitted when the action succeeds with the success string message.
     * Applies to copy, move and delete actions.
     */
    success: EventEmitter<{}>;
    constructor(list: ContentActionListComponent, documentActions: DocumentActionsService, folderActions: FolderActionsService);
    ngOnInit(): void;
    register(model: ContentActionModel): boolean;
    private generateAction(target);
    getSystemHandler(target: string, name: string): ContentActionHandler;
}
